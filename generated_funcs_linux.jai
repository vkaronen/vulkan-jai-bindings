vkCreateInstance: PFN_vkCreateInstance;
vkEnumerateInstanceExtensionProperties: PFN_vkEnumerateInstanceExtensionProperties;
vkEnumerateInstanceLayerProperties: PFN_vkEnumerateInstanceLayerProperties;
vkEnumerateInstanceVersion: PFN_vkEnumerateInstanceVersion;
vkDebugUtilsMessengerCallbackEXT: PFN_vkDebugUtilsMessengerCallbackEXT;
vkDeviceMemoryReportCallbackEXT: PFN_vkDeviceMemoryReportCallbackEXT;
vkDestroyInstance: PFN_vkDestroyInstance;
vkEnumeratePhysicalDevices: PFN_vkEnumeratePhysicalDevices;
vkGetPhysicalDeviceFeatures: PFN_vkGetPhysicalDeviceFeatures;
vkGetPhysicalDeviceFormatProperties: PFN_vkGetPhysicalDeviceFormatProperties;
vkGetPhysicalDeviceImageFormatProperties: PFN_vkGetPhysicalDeviceImageFormatProperties;
vkGetPhysicalDeviceProperties: PFN_vkGetPhysicalDeviceProperties;
vkGetPhysicalDeviceQueueFamilyProperties: PFN_vkGetPhysicalDeviceQueueFamilyProperties;
vkGetPhysicalDeviceMemoryProperties: PFN_vkGetPhysicalDeviceMemoryProperties;
vkGetInstanceProcAddr: PFN_vkGetInstanceProcAddr;
vkGetDeviceProcAddr: PFN_vkGetDeviceProcAddr;
vkCreateDevice: PFN_vkCreateDevice;
vkEnumerateDeviceExtensionProperties: PFN_vkEnumerateDeviceExtensionProperties;
vkEnumerateDeviceLayerProperties: PFN_vkEnumerateDeviceLayerProperties;
vkGetPhysicalDeviceSparseImageFormatProperties: PFN_vkGetPhysicalDeviceSparseImageFormatProperties;
vkEnumeratePhysicalDeviceGroups: PFN_vkEnumeratePhysicalDeviceGroups;
vkGetPhysicalDeviceFeatures2: PFN_vkGetPhysicalDeviceFeatures2;
vkGetPhysicalDeviceProperties2: PFN_vkGetPhysicalDeviceProperties2;
vkGetPhysicalDeviceFormatProperties2: PFN_vkGetPhysicalDeviceFormatProperties2;
vkGetPhysicalDeviceImageFormatProperties2: PFN_vkGetPhysicalDeviceImageFormatProperties2;
vkGetPhysicalDeviceQueueFamilyProperties2: PFN_vkGetPhysicalDeviceQueueFamilyProperties2;
vkGetPhysicalDeviceMemoryProperties2: PFN_vkGetPhysicalDeviceMemoryProperties2;
vkGetPhysicalDeviceSparseImageFormatProperties2: PFN_vkGetPhysicalDeviceSparseImageFormatProperties2;
vkGetPhysicalDeviceExternalBufferProperties: PFN_vkGetPhysicalDeviceExternalBufferProperties;
vkGetPhysicalDeviceExternalFenceProperties: PFN_vkGetPhysicalDeviceExternalFenceProperties;
vkGetPhysicalDeviceExternalSemaphoreProperties: PFN_vkGetPhysicalDeviceExternalSemaphoreProperties;
vkGetPhysicalDeviceToolProperties: PFN_vkGetPhysicalDeviceToolProperties;
vkDestroySurfaceKHR: PFN_vkDestroySurfaceKHR;
vkGetPhysicalDeviceSurfaceSupportKHR: PFN_vkGetPhysicalDeviceSurfaceSupportKHR;
vkGetPhysicalDeviceSurfaceCapabilitiesKHR: PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR;
vkGetPhysicalDeviceSurfaceFormatsKHR: PFN_vkGetPhysicalDeviceSurfaceFormatsKHR;
vkGetPhysicalDeviceSurfacePresentModesKHR: PFN_vkGetPhysicalDeviceSurfacePresentModesKHR;
vkGetPhysicalDevicePresentRectanglesKHR: PFN_vkGetPhysicalDevicePresentRectanglesKHR;
vkGetPhysicalDeviceDisplayPropertiesKHR: PFN_vkGetPhysicalDeviceDisplayPropertiesKHR;
vkGetPhysicalDeviceDisplayPlanePropertiesKHR: PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR;
vkGetDisplayPlaneSupportedDisplaysKHR: PFN_vkGetDisplayPlaneSupportedDisplaysKHR;
vkGetDisplayModePropertiesKHR: PFN_vkGetDisplayModePropertiesKHR;
vkCreateDisplayModeKHR: PFN_vkCreateDisplayModeKHR;
vkGetDisplayPlaneCapabilitiesKHR: PFN_vkGetDisplayPlaneCapabilitiesKHR;
vkCreateDisplayPlaneSurfaceKHR: PFN_vkCreateDisplayPlaneSurfaceKHR;
vkGetPhysicalDeviceVideoCapabilitiesKHR: PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR;
vkGetPhysicalDeviceVideoFormatPropertiesKHR: PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR;
vkGetPhysicalDeviceFeatures2KHR: PFN_vkGetPhysicalDeviceFeatures2KHR;
vkGetPhysicalDeviceProperties2KHR: PFN_vkGetPhysicalDeviceProperties2KHR;
vkGetPhysicalDeviceFormatProperties2KHR: PFN_vkGetPhysicalDeviceFormatProperties2KHR;
vkGetPhysicalDeviceImageFormatProperties2KHR: PFN_vkGetPhysicalDeviceImageFormatProperties2KHR;
vkGetPhysicalDeviceQueueFamilyProperties2KHR: PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR;
vkGetPhysicalDeviceMemoryProperties2KHR: PFN_vkGetPhysicalDeviceMemoryProperties2KHR;
vkGetPhysicalDeviceSparseImageFormatProperties2KHR: PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
vkEnumeratePhysicalDeviceGroupsKHR: PFN_vkEnumeratePhysicalDeviceGroupsKHR;
vkGetPhysicalDeviceExternalBufferPropertiesKHR: PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR;
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR: PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
vkGetPhysicalDeviceExternalFencePropertiesKHR: PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR;
vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR: PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR;
vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR: PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR;
vkGetPhysicalDeviceSurfaceCapabilities2KHR: PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR;
vkGetPhysicalDeviceSurfaceFormats2KHR: PFN_vkGetPhysicalDeviceSurfaceFormats2KHR;
vkGetPhysicalDeviceDisplayProperties2KHR: PFN_vkGetPhysicalDeviceDisplayProperties2KHR;
vkGetPhysicalDeviceDisplayPlaneProperties2KHR: PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR;
vkGetDisplayModeProperties2KHR: PFN_vkGetDisplayModeProperties2KHR;
vkGetDisplayPlaneCapabilities2KHR: PFN_vkGetDisplayPlaneCapabilities2KHR;
vkGetPhysicalDeviceFragmentShadingRatesKHR: PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR;
vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR: PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR;
vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR: PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR;
vkGetPhysicalDeviceCalibrateableTimeDomainsKHR: PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR;
vkCreateDebugReportCallbackEXT: PFN_vkCreateDebugReportCallbackEXT;
vkDestroyDebugReportCallbackEXT: PFN_vkDestroyDebugReportCallbackEXT;
vkDebugReportMessageEXT: PFN_vkDebugReportMessageEXT;
vkGetPhysicalDeviceExternalImageFormatPropertiesNV: PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV;
vkReleaseDisplayEXT: PFN_vkReleaseDisplayEXT;
vkGetPhysicalDeviceSurfaceCapabilities2EXT: PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT;
vkCreateDebugUtilsMessengerEXT: PFN_vkCreateDebugUtilsMessengerEXT;
vkDestroyDebugUtilsMessengerEXT: PFN_vkDestroyDebugUtilsMessengerEXT;
vkSubmitDebugUtilsMessageEXT: PFN_vkSubmitDebugUtilsMessageEXT;
vkGetPhysicalDeviceMultisamplePropertiesEXT: PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT;
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT: PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT;
vkGetPhysicalDeviceToolPropertiesEXT: PFN_vkGetPhysicalDeviceToolPropertiesEXT;
vkGetPhysicalDeviceCooperativeMatrixPropertiesNV: PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV;
vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV: PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV;
vkCreateHeadlessSurfaceEXT: PFN_vkCreateHeadlessSurfaceEXT;
vkAcquireDrmDisplayEXT: PFN_vkAcquireDrmDisplayEXT;
vkGetDrmDisplayEXT: PFN_vkGetDrmDisplayEXT;
vkGetPhysicalDeviceOpticalFlowImageFormatsNV: PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV;
vkGetPhysicalDeviceCooperativeVectorPropertiesNV: PFN_vkGetPhysicalDeviceCooperativeVectorPropertiesNV;
vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV: PFN_vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV;
vkCreateAndroidSurfaceKHR: PFN_vkCreateAndroidSurfaceKHR;
vkCreateWaylandSurfaceKHR: PFN_vkCreateWaylandSurfaceKHR;
vkGetPhysicalDeviceWaylandPresentationSupportKHR: PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR;
vkCreateXcbSurfaceKHR: PFN_vkCreateXcbSurfaceKHR;
vkGetPhysicalDeviceXcbPresentationSupportKHR: PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR;
vkCreateXlibSurfaceKHR: PFN_vkCreateXlibSurfaceKHR;
vkGetPhysicalDeviceXlibPresentationSupportKHR: PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR;
vkDestroyDevice: PFN_vkDestroyDevice;
vkGetDeviceQueue: PFN_vkGetDeviceQueue;
vkQueueSubmit: PFN_vkQueueSubmit;
vkQueueWaitIdle: PFN_vkQueueWaitIdle;
vkDeviceWaitIdle: PFN_vkDeviceWaitIdle;
vkAllocateMemory: PFN_vkAllocateMemory;
vkFreeMemory: PFN_vkFreeMemory;
vkMapMemory: PFN_vkMapMemory;
vkUnmapMemory: PFN_vkUnmapMemory;
vkFlushMappedMemoryRanges: PFN_vkFlushMappedMemoryRanges;
vkInvalidateMappedMemoryRanges: PFN_vkInvalidateMappedMemoryRanges;
vkGetDeviceMemoryCommitment: PFN_vkGetDeviceMemoryCommitment;
vkBindBufferMemory: PFN_vkBindBufferMemory;
vkBindImageMemory: PFN_vkBindImageMemory;
vkGetBufferMemoryRequirements: PFN_vkGetBufferMemoryRequirements;
vkGetImageMemoryRequirements: PFN_vkGetImageMemoryRequirements;
vkGetImageSparseMemoryRequirements: PFN_vkGetImageSparseMemoryRequirements;
vkQueueBindSparse: PFN_vkQueueBindSparse;
vkCreateFence: PFN_vkCreateFence;
vkDestroyFence: PFN_vkDestroyFence;
vkResetFences: PFN_vkResetFences;
vkGetFenceStatus: PFN_vkGetFenceStatus;
vkWaitForFences: PFN_vkWaitForFences;
vkCreateSemaphore: PFN_vkCreateSemaphore;
vkDestroySemaphore: PFN_vkDestroySemaphore;
vkCreateEvent: PFN_vkCreateEvent;
vkDestroyEvent: PFN_vkDestroyEvent;
vkGetEventStatus: PFN_vkGetEventStatus;
vkSetEvent: PFN_vkSetEvent;
vkResetEvent: PFN_vkResetEvent;
vkCreateQueryPool: PFN_vkCreateQueryPool;
vkDestroyQueryPool: PFN_vkDestroyQueryPool;
vkGetQueryPoolResults: PFN_vkGetQueryPoolResults;
vkCreateBuffer: PFN_vkCreateBuffer;
vkDestroyBuffer: PFN_vkDestroyBuffer;
vkCreateBufferView: PFN_vkCreateBufferView;
vkDestroyBufferView: PFN_vkDestroyBufferView;
vkCreateImage: PFN_vkCreateImage;
vkDestroyImage: PFN_vkDestroyImage;
vkGetImageSubresourceLayout: PFN_vkGetImageSubresourceLayout;
vkCreateImageView: PFN_vkCreateImageView;
vkDestroyImageView: PFN_vkDestroyImageView;
vkCreateShaderModule: PFN_vkCreateShaderModule;
vkDestroyShaderModule: PFN_vkDestroyShaderModule;
vkCreatePipelineCache: PFN_vkCreatePipelineCache;
vkDestroyPipelineCache: PFN_vkDestroyPipelineCache;
vkGetPipelineCacheData: PFN_vkGetPipelineCacheData;
vkMergePipelineCaches: PFN_vkMergePipelineCaches;
vkCreateGraphicsPipelines: PFN_vkCreateGraphicsPipelines;
vkCreateComputePipelines: PFN_vkCreateComputePipelines;
vkDestroyPipeline: PFN_vkDestroyPipeline;
vkCreatePipelineLayout: PFN_vkCreatePipelineLayout;
vkDestroyPipelineLayout: PFN_vkDestroyPipelineLayout;
vkCreateSampler: PFN_vkCreateSampler;
vkDestroySampler: PFN_vkDestroySampler;
vkCreateDescriptorSetLayout: PFN_vkCreateDescriptorSetLayout;
vkDestroyDescriptorSetLayout: PFN_vkDestroyDescriptorSetLayout;
vkCreateDescriptorPool: PFN_vkCreateDescriptorPool;
vkDestroyDescriptorPool: PFN_vkDestroyDescriptorPool;
vkResetDescriptorPool: PFN_vkResetDescriptorPool;
vkAllocateDescriptorSets: PFN_vkAllocateDescriptorSets;
vkFreeDescriptorSets: PFN_vkFreeDescriptorSets;
vkUpdateDescriptorSets: PFN_vkUpdateDescriptorSets;
vkCreateFramebuffer: PFN_vkCreateFramebuffer;
vkDestroyFramebuffer: PFN_vkDestroyFramebuffer;
vkCreateRenderPass: PFN_vkCreateRenderPass;
vkDestroyRenderPass: PFN_vkDestroyRenderPass;
vkGetRenderAreaGranularity: PFN_vkGetRenderAreaGranularity;
vkCreateCommandPool: PFN_vkCreateCommandPool;
vkDestroyCommandPool: PFN_vkDestroyCommandPool;
vkResetCommandPool: PFN_vkResetCommandPool;
vkAllocateCommandBuffers: PFN_vkAllocateCommandBuffers;
vkFreeCommandBuffers: PFN_vkFreeCommandBuffers;
vkBeginCommandBuffer: PFN_vkBeginCommandBuffer;
vkEndCommandBuffer: PFN_vkEndCommandBuffer;
vkResetCommandBuffer: PFN_vkResetCommandBuffer;
vkCmdBindPipeline: PFN_vkCmdBindPipeline;
vkCmdSetViewport: PFN_vkCmdSetViewport;
vkCmdSetScissor: PFN_vkCmdSetScissor;
vkCmdSetLineWidth: PFN_vkCmdSetLineWidth;
vkCmdSetDepthBias: PFN_vkCmdSetDepthBias;
vkCmdSetBlendConstants: PFN_vkCmdSetBlendConstants;
vkCmdSetDepthBounds: PFN_vkCmdSetDepthBounds;
vkCmdSetStencilCompareMask: PFN_vkCmdSetStencilCompareMask;
vkCmdSetStencilWriteMask: PFN_vkCmdSetStencilWriteMask;
vkCmdSetStencilReference: PFN_vkCmdSetStencilReference;
vkCmdBindDescriptorSets: PFN_vkCmdBindDescriptorSets;
vkCmdBindIndexBuffer: PFN_vkCmdBindIndexBuffer;
vkCmdBindVertexBuffers: PFN_vkCmdBindVertexBuffers;
vkCmdDraw: PFN_vkCmdDraw;
vkCmdDrawIndexed: PFN_vkCmdDrawIndexed;
vkCmdDrawIndirect: PFN_vkCmdDrawIndirect;
vkCmdDrawIndexedIndirect: PFN_vkCmdDrawIndexedIndirect;
vkCmdDispatch: PFN_vkCmdDispatch;
vkCmdDispatchIndirect: PFN_vkCmdDispatchIndirect;
vkCmdCopyBuffer: PFN_vkCmdCopyBuffer;
vkCmdCopyImage: PFN_vkCmdCopyImage;
vkCmdBlitImage: PFN_vkCmdBlitImage;
vkCmdCopyBufferToImage: PFN_vkCmdCopyBufferToImage;
vkCmdCopyImageToBuffer: PFN_vkCmdCopyImageToBuffer;
vkCmdUpdateBuffer: PFN_vkCmdUpdateBuffer;
vkCmdFillBuffer: PFN_vkCmdFillBuffer;
vkCmdClearColorImage: PFN_vkCmdClearColorImage;
vkCmdClearDepthStencilImage: PFN_vkCmdClearDepthStencilImage;
vkCmdClearAttachments: PFN_vkCmdClearAttachments;
vkCmdResolveImage: PFN_vkCmdResolveImage;
vkCmdSetEvent: PFN_vkCmdSetEvent;
vkCmdResetEvent: PFN_vkCmdResetEvent;
vkCmdWaitEvents: PFN_vkCmdWaitEvents;
vkCmdPipelineBarrier: PFN_vkCmdPipelineBarrier;
vkCmdBeginQuery: PFN_vkCmdBeginQuery;
vkCmdEndQuery: PFN_vkCmdEndQuery;
vkCmdResetQueryPool: PFN_vkCmdResetQueryPool;
vkCmdWriteTimestamp: PFN_vkCmdWriteTimestamp;
vkCmdCopyQueryPoolResults: PFN_vkCmdCopyQueryPoolResults;
vkCmdPushConstants: PFN_vkCmdPushConstants;
vkCmdBeginRenderPass: PFN_vkCmdBeginRenderPass;
vkCmdNextSubpass: PFN_vkCmdNextSubpass;
vkCmdEndRenderPass: PFN_vkCmdEndRenderPass;
vkCmdExecuteCommands: PFN_vkCmdExecuteCommands;
vkBindBufferMemory2: PFN_vkBindBufferMemory2;
vkBindImageMemory2: PFN_vkBindImageMemory2;
vkGetDeviceGroupPeerMemoryFeatures: PFN_vkGetDeviceGroupPeerMemoryFeatures;
vkCmdSetDeviceMask: PFN_vkCmdSetDeviceMask;
vkCmdDispatchBase: PFN_vkCmdDispatchBase;
vkGetImageMemoryRequirements2: PFN_vkGetImageMemoryRequirements2;
vkGetBufferMemoryRequirements2: PFN_vkGetBufferMemoryRequirements2;
vkGetImageSparseMemoryRequirements2: PFN_vkGetImageSparseMemoryRequirements2;
vkTrimCommandPool: PFN_vkTrimCommandPool;
vkGetDeviceQueue2: PFN_vkGetDeviceQueue2;
vkCreateSamplerYcbcrConversion: PFN_vkCreateSamplerYcbcrConversion;
vkDestroySamplerYcbcrConversion: PFN_vkDestroySamplerYcbcrConversion;
vkCreateDescriptorUpdateTemplate: PFN_vkCreateDescriptorUpdateTemplate;
vkDestroyDescriptorUpdateTemplate: PFN_vkDestroyDescriptorUpdateTemplate;
vkUpdateDescriptorSetWithTemplate: PFN_vkUpdateDescriptorSetWithTemplate;
vkGetDescriptorSetLayoutSupport: PFN_vkGetDescriptorSetLayoutSupport;
vkCmdDrawIndirectCount: PFN_vkCmdDrawIndirectCount;
vkCmdDrawIndexedIndirectCount: PFN_vkCmdDrawIndexedIndirectCount;
vkCreateRenderPass2: PFN_vkCreateRenderPass2;
vkCmdBeginRenderPass2: PFN_vkCmdBeginRenderPass2;
vkCmdNextSubpass2: PFN_vkCmdNextSubpass2;
vkCmdEndRenderPass2: PFN_vkCmdEndRenderPass2;
vkResetQueryPool: PFN_vkResetQueryPool;
vkGetSemaphoreCounterValue: PFN_vkGetSemaphoreCounterValue;
vkWaitSemaphores: PFN_vkWaitSemaphores;
vkSignalSemaphore: PFN_vkSignalSemaphore;
vkGetBufferDeviceAddress: PFN_vkGetBufferDeviceAddress;
vkGetBufferOpaqueCaptureAddress: PFN_vkGetBufferOpaqueCaptureAddress;
vkGetDeviceMemoryOpaqueCaptureAddress: PFN_vkGetDeviceMemoryOpaqueCaptureAddress;
vkCreatePrivateDataSlot: PFN_vkCreatePrivateDataSlot;
vkDestroyPrivateDataSlot: PFN_vkDestroyPrivateDataSlot;
vkSetPrivateData: PFN_vkSetPrivateData;
vkGetPrivateData: PFN_vkGetPrivateData;
vkCmdSetEvent2: PFN_vkCmdSetEvent2;
vkCmdResetEvent2: PFN_vkCmdResetEvent2;
vkCmdWaitEvents2: PFN_vkCmdWaitEvents2;
vkCmdPipelineBarrier2: PFN_vkCmdPipelineBarrier2;
vkCmdWriteTimestamp2: PFN_vkCmdWriteTimestamp2;
vkQueueSubmit2: PFN_vkQueueSubmit2;
vkCmdCopyBuffer2: PFN_vkCmdCopyBuffer2;
vkCmdCopyImage2: PFN_vkCmdCopyImage2;
vkCmdCopyBufferToImage2: PFN_vkCmdCopyBufferToImage2;
vkCmdCopyImageToBuffer2: PFN_vkCmdCopyImageToBuffer2;
vkCmdBlitImage2: PFN_vkCmdBlitImage2;
vkCmdResolveImage2: PFN_vkCmdResolveImage2;
vkCmdBeginRendering: PFN_vkCmdBeginRendering;
vkCmdEndRendering: PFN_vkCmdEndRendering;
vkCmdSetCullMode: PFN_vkCmdSetCullMode;
vkCmdSetFrontFace: PFN_vkCmdSetFrontFace;
vkCmdSetPrimitiveTopology: PFN_vkCmdSetPrimitiveTopology;
vkCmdSetViewportWithCount: PFN_vkCmdSetViewportWithCount;
vkCmdSetScissorWithCount: PFN_vkCmdSetScissorWithCount;
vkCmdBindVertexBuffers2: PFN_vkCmdBindVertexBuffers2;
vkCmdSetDepthTestEnable: PFN_vkCmdSetDepthTestEnable;
vkCmdSetDepthWriteEnable: PFN_vkCmdSetDepthWriteEnable;
vkCmdSetDepthCompareOp: PFN_vkCmdSetDepthCompareOp;
vkCmdSetDepthBoundsTestEnable: PFN_vkCmdSetDepthBoundsTestEnable;
vkCmdSetStencilTestEnable: PFN_vkCmdSetStencilTestEnable;
vkCmdSetStencilOp: PFN_vkCmdSetStencilOp;
vkCmdSetRasterizerDiscardEnable: PFN_vkCmdSetRasterizerDiscardEnable;
vkCmdSetDepthBiasEnable: PFN_vkCmdSetDepthBiasEnable;
vkCmdSetPrimitiveRestartEnable: PFN_vkCmdSetPrimitiveRestartEnable;
vkGetDeviceBufferMemoryRequirements: PFN_vkGetDeviceBufferMemoryRequirements;
vkGetDeviceImageMemoryRequirements: PFN_vkGetDeviceImageMemoryRequirements;
vkGetDeviceImageSparseMemoryRequirements: PFN_vkGetDeviceImageSparseMemoryRequirements;
vkCmdSetLineStipple: PFN_vkCmdSetLineStipple;
vkMapMemory2: PFN_vkMapMemory2;
vkUnmapMemory2: PFN_vkUnmapMemory2;
vkCmdBindIndexBuffer2: PFN_vkCmdBindIndexBuffer2;
vkGetRenderingAreaGranularity: PFN_vkGetRenderingAreaGranularity;
vkGetDeviceImageSubresourceLayout: PFN_vkGetDeviceImageSubresourceLayout;
vkGetImageSubresourceLayout2: PFN_vkGetImageSubresourceLayout2;
vkCmdPushDescriptorSet: PFN_vkCmdPushDescriptorSet;
vkCmdPushDescriptorSetWithTemplate: PFN_vkCmdPushDescriptorSetWithTemplate;
vkCmdSetRenderingAttachmentLocations: PFN_vkCmdSetRenderingAttachmentLocations;
vkCmdSetRenderingInputAttachmentIndices: PFN_vkCmdSetRenderingInputAttachmentIndices;
vkCmdBindDescriptorSets2: PFN_vkCmdBindDescriptorSets2;
vkCmdPushConstants2: PFN_vkCmdPushConstants2;
vkCmdPushDescriptorSet2: PFN_vkCmdPushDescriptorSet2;
vkCmdPushDescriptorSetWithTemplate2: PFN_vkCmdPushDescriptorSetWithTemplate2;
vkCopyMemoryToImage: PFN_vkCopyMemoryToImage;
vkCopyImageToMemory: PFN_vkCopyImageToMemory;
vkCopyImageToImage: PFN_vkCopyImageToImage;
vkTransitionImageLayout: PFN_vkTransitionImageLayout;
vkCreateSwapchainKHR: PFN_vkCreateSwapchainKHR;
vkDestroySwapchainKHR: PFN_vkDestroySwapchainKHR;
vkGetSwapchainImagesKHR: PFN_vkGetSwapchainImagesKHR;
vkAcquireNextImageKHR: PFN_vkAcquireNextImageKHR;
vkQueuePresentKHR: PFN_vkQueuePresentKHR;
vkGetDeviceGroupPresentCapabilitiesKHR: PFN_vkGetDeviceGroupPresentCapabilitiesKHR;
vkGetDeviceGroupSurfacePresentModesKHR: PFN_vkGetDeviceGroupSurfacePresentModesKHR;
vkAcquireNextImage2KHR: PFN_vkAcquireNextImage2KHR;
vkCreateSharedSwapchainsKHR: PFN_vkCreateSharedSwapchainsKHR;
vkCreateVideoSessionKHR: PFN_vkCreateVideoSessionKHR;
vkDestroyVideoSessionKHR: PFN_vkDestroyVideoSessionKHR;
vkGetVideoSessionMemoryRequirementsKHR: PFN_vkGetVideoSessionMemoryRequirementsKHR;
vkBindVideoSessionMemoryKHR: PFN_vkBindVideoSessionMemoryKHR;
vkCreateVideoSessionParametersKHR: PFN_vkCreateVideoSessionParametersKHR;
vkUpdateVideoSessionParametersKHR: PFN_vkUpdateVideoSessionParametersKHR;
vkDestroyVideoSessionParametersKHR: PFN_vkDestroyVideoSessionParametersKHR;
vkCmdBeginVideoCodingKHR: PFN_vkCmdBeginVideoCodingKHR;
vkCmdEndVideoCodingKHR: PFN_vkCmdEndVideoCodingKHR;
vkCmdControlVideoCodingKHR: PFN_vkCmdControlVideoCodingKHR;
vkCmdDecodeVideoKHR: PFN_vkCmdDecodeVideoKHR;
vkCmdBeginRenderingKHR: PFN_vkCmdBeginRenderingKHR;
vkCmdEndRenderingKHR: PFN_vkCmdEndRenderingKHR;
vkGetDeviceGroupPeerMemoryFeaturesKHR: PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR;
vkCmdSetDeviceMaskKHR: PFN_vkCmdSetDeviceMaskKHR;
vkCmdDispatchBaseKHR: PFN_vkCmdDispatchBaseKHR;
vkTrimCommandPoolKHR: PFN_vkTrimCommandPoolKHR;
vkGetMemoryFdKHR: PFN_vkGetMemoryFdKHR;
vkGetMemoryFdPropertiesKHR: PFN_vkGetMemoryFdPropertiesKHR;
vkImportSemaphoreFdKHR: PFN_vkImportSemaphoreFdKHR;
vkGetSemaphoreFdKHR: PFN_vkGetSemaphoreFdKHR;
vkCmdPushDescriptorSetKHR: PFN_vkCmdPushDescriptorSetKHR;
vkCmdPushDescriptorSetWithTemplateKHR: PFN_vkCmdPushDescriptorSetWithTemplateKHR;
vkCreateDescriptorUpdateTemplateKHR: PFN_vkCreateDescriptorUpdateTemplateKHR;
vkDestroyDescriptorUpdateTemplateKHR: PFN_vkDestroyDescriptorUpdateTemplateKHR;
vkUpdateDescriptorSetWithTemplateKHR: PFN_vkUpdateDescriptorSetWithTemplateKHR;
vkCreateRenderPass2KHR: PFN_vkCreateRenderPass2KHR;
vkCmdBeginRenderPass2KHR: PFN_vkCmdBeginRenderPass2KHR;
vkCmdNextSubpass2KHR: PFN_vkCmdNextSubpass2KHR;
vkCmdEndRenderPass2KHR: PFN_vkCmdEndRenderPass2KHR;
vkGetSwapchainStatusKHR: PFN_vkGetSwapchainStatusKHR;
vkImportFenceFdKHR: PFN_vkImportFenceFdKHR;
vkGetFenceFdKHR: PFN_vkGetFenceFdKHR;
vkAcquireProfilingLockKHR: PFN_vkAcquireProfilingLockKHR;
vkReleaseProfilingLockKHR: PFN_vkReleaseProfilingLockKHR;
vkGetImageMemoryRequirements2KHR: PFN_vkGetImageMemoryRequirements2KHR;
vkGetBufferMemoryRequirements2KHR: PFN_vkGetBufferMemoryRequirements2KHR;
vkGetImageSparseMemoryRequirements2KHR: PFN_vkGetImageSparseMemoryRequirements2KHR;
vkCreateSamplerYcbcrConversionKHR: PFN_vkCreateSamplerYcbcrConversionKHR;
vkDestroySamplerYcbcrConversionKHR: PFN_vkDestroySamplerYcbcrConversionKHR;
vkBindBufferMemory2KHR: PFN_vkBindBufferMemory2KHR;
vkBindImageMemory2KHR: PFN_vkBindImageMemory2KHR;
vkGetDescriptorSetLayoutSupportKHR: PFN_vkGetDescriptorSetLayoutSupportKHR;
vkCmdDrawIndirectCountKHR: PFN_vkCmdDrawIndirectCountKHR;
vkCmdDrawIndexedIndirectCountKHR: PFN_vkCmdDrawIndexedIndirectCountKHR;
vkGetSemaphoreCounterValueKHR: PFN_vkGetSemaphoreCounterValueKHR;
vkWaitSemaphoresKHR: PFN_vkWaitSemaphoresKHR;
vkSignalSemaphoreKHR: PFN_vkSignalSemaphoreKHR;
vkCmdSetFragmentShadingRateKHR: PFN_vkCmdSetFragmentShadingRateKHR;
vkCmdSetRenderingAttachmentLocationsKHR: PFN_vkCmdSetRenderingAttachmentLocationsKHR;
vkCmdSetRenderingInputAttachmentIndicesKHR: PFN_vkCmdSetRenderingInputAttachmentIndicesKHR;
vkWaitForPresentKHR: PFN_vkWaitForPresentKHR;
vkGetBufferDeviceAddressKHR: PFN_vkGetBufferDeviceAddressKHR;
vkGetBufferOpaqueCaptureAddressKHR: PFN_vkGetBufferOpaqueCaptureAddressKHR;
vkGetDeviceMemoryOpaqueCaptureAddressKHR: PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR;
vkCreateDeferredOperationKHR: PFN_vkCreateDeferredOperationKHR;
vkDestroyDeferredOperationKHR: PFN_vkDestroyDeferredOperationKHR;
vkGetDeferredOperationMaxConcurrencyKHR: PFN_vkGetDeferredOperationMaxConcurrencyKHR;
vkGetDeferredOperationResultKHR: PFN_vkGetDeferredOperationResultKHR;
vkDeferredOperationJoinKHR: PFN_vkDeferredOperationJoinKHR;
vkGetPipelineExecutablePropertiesKHR: PFN_vkGetPipelineExecutablePropertiesKHR;
vkGetPipelineExecutableStatisticsKHR: PFN_vkGetPipelineExecutableStatisticsKHR;
vkGetPipelineExecutableInternalRepresentationsKHR: PFN_vkGetPipelineExecutableInternalRepresentationsKHR;
vkMapMemory2KHR: PFN_vkMapMemory2KHR;
vkUnmapMemory2KHR: PFN_vkUnmapMemory2KHR;
vkGetEncodedVideoSessionParametersKHR: PFN_vkGetEncodedVideoSessionParametersKHR;
vkCmdEncodeVideoKHR: PFN_vkCmdEncodeVideoKHR;
vkCmdSetEvent2KHR: PFN_vkCmdSetEvent2KHR;
vkCmdResetEvent2KHR: PFN_vkCmdResetEvent2KHR;
vkCmdWaitEvents2KHR: PFN_vkCmdWaitEvents2KHR;
vkCmdPipelineBarrier2KHR: PFN_vkCmdPipelineBarrier2KHR;
vkCmdWriteTimestamp2KHR: PFN_vkCmdWriteTimestamp2KHR;
vkQueueSubmit2KHR: PFN_vkQueueSubmit2KHR;
vkCmdCopyBuffer2KHR: PFN_vkCmdCopyBuffer2KHR;
vkCmdCopyImage2KHR: PFN_vkCmdCopyImage2KHR;
vkCmdCopyBufferToImage2KHR: PFN_vkCmdCopyBufferToImage2KHR;
vkCmdCopyImageToBuffer2KHR: PFN_vkCmdCopyImageToBuffer2KHR;
vkCmdBlitImage2KHR: PFN_vkCmdBlitImage2KHR;
vkCmdResolveImage2KHR: PFN_vkCmdResolveImage2KHR;
vkCmdTraceRaysIndirect2KHR: PFN_vkCmdTraceRaysIndirect2KHR;
vkGetDeviceBufferMemoryRequirementsKHR: PFN_vkGetDeviceBufferMemoryRequirementsKHR;
vkGetDeviceImageMemoryRequirementsKHR: PFN_vkGetDeviceImageMemoryRequirementsKHR;
vkGetDeviceImageSparseMemoryRequirementsKHR: PFN_vkGetDeviceImageSparseMemoryRequirementsKHR;
vkCmdBindIndexBuffer2KHR: PFN_vkCmdBindIndexBuffer2KHR;
vkGetRenderingAreaGranularityKHR: PFN_vkGetRenderingAreaGranularityKHR;
vkGetDeviceImageSubresourceLayoutKHR: PFN_vkGetDeviceImageSubresourceLayoutKHR;
vkGetImageSubresourceLayout2KHR: PFN_vkGetImageSubresourceLayout2KHR;
vkCreatePipelineBinariesKHR: PFN_vkCreatePipelineBinariesKHR;
vkDestroyPipelineBinaryKHR: PFN_vkDestroyPipelineBinaryKHR;
vkGetPipelineKeyKHR: PFN_vkGetPipelineKeyKHR;
vkGetPipelineBinaryDataKHR: PFN_vkGetPipelineBinaryDataKHR;
vkReleaseCapturedPipelineDataKHR: PFN_vkReleaseCapturedPipelineDataKHR;
vkCmdSetLineStippleKHR: PFN_vkCmdSetLineStippleKHR;
vkGetCalibratedTimestampsKHR: PFN_vkGetCalibratedTimestampsKHR;
vkCmdBindDescriptorSets2KHR: PFN_vkCmdBindDescriptorSets2KHR;
vkCmdPushConstants2KHR: PFN_vkCmdPushConstants2KHR;
vkCmdPushDescriptorSet2KHR: PFN_vkCmdPushDescriptorSet2KHR;
vkCmdPushDescriptorSetWithTemplate2KHR: PFN_vkCmdPushDescriptorSetWithTemplate2KHR;
vkCmdSetDescriptorBufferOffsets2EXT: PFN_vkCmdSetDescriptorBufferOffsets2EXT;
vkCmdBindDescriptorBufferEmbeddedSamplers2EXT: PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
vkDebugMarkerSetObjectTagEXT: PFN_vkDebugMarkerSetObjectTagEXT;
vkDebugMarkerSetObjectNameEXT: PFN_vkDebugMarkerSetObjectNameEXT;
vkCmdDebugMarkerBeginEXT: PFN_vkCmdDebugMarkerBeginEXT;
vkCmdDebugMarkerEndEXT: PFN_vkCmdDebugMarkerEndEXT;
vkCmdDebugMarkerInsertEXT: PFN_vkCmdDebugMarkerInsertEXT;
vkCmdBindTransformFeedbackBuffersEXT: PFN_vkCmdBindTransformFeedbackBuffersEXT;
vkCmdBeginTransformFeedbackEXT: PFN_vkCmdBeginTransformFeedbackEXT;
vkCmdEndTransformFeedbackEXT: PFN_vkCmdEndTransformFeedbackEXT;
vkCmdBeginQueryIndexedEXT: PFN_vkCmdBeginQueryIndexedEXT;
vkCmdEndQueryIndexedEXT: PFN_vkCmdEndQueryIndexedEXT;
vkCmdDrawIndirectByteCountEXT: PFN_vkCmdDrawIndirectByteCountEXT;
vkCreateCuModuleNVX: PFN_vkCreateCuModuleNVX;
vkCreateCuFunctionNVX: PFN_vkCreateCuFunctionNVX;
vkDestroyCuModuleNVX: PFN_vkDestroyCuModuleNVX;
vkDestroyCuFunctionNVX: PFN_vkDestroyCuFunctionNVX;
vkCmdCuLaunchKernelNVX: PFN_vkCmdCuLaunchKernelNVX;
vkGetImageViewHandleNVX: PFN_vkGetImageViewHandleNVX;
vkGetImageViewHandle64NVX: PFN_vkGetImageViewHandle64NVX;
vkGetImageViewAddressNVX: PFN_vkGetImageViewAddressNVX;
vkCmdDrawIndirectCountAMD: PFN_vkCmdDrawIndirectCountAMD;
vkCmdDrawIndexedIndirectCountAMD: PFN_vkCmdDrawIndexedIndirectCountAMD;
vkGetShaderInfoAMD: PFN_vkGetShaderInfoAMD;
vkCmdBeginConditionalRenderingEXT: PFN_vkCmdBeginConditionalRenderingEXT;
vkCmdEndConditionalRenderingEXT: PFN_vkCmdEndConditionalRenderingEXT;
vkCmdSetViewportWScalingNV: PFN_vkCmdSetViewportWScalingNV;
vkDisplayPowerControlEXT: PFN_vkDisplayPowerControlEXT;
vkRegisterDeviceEventEXT: PFN_vkRegisterDeviceEventEXT;
vkRegisterDisplayEventEXT: PFN_vkRegisterDisplayEventEXT;
vkGetSwapchainCounterEXT: PFN_vkGetSwapchainCounterEXT;
vkGetRefreshCycleDurationGOOGLE: PFN_vkGetRefreshCycleDurationGOOGLE;
vkGetPastPresentationTimingGOOGLE: PFN_vkGetPastPresentationTimingGOOGLE;
vkCmdSetDiscardRectangleEXT: PFN_vkCmdSetDiscardRectangleEXT;
vkCmdSetDiscardRectangleEnableEXT: PFN_vkCmdSetDiscardRectangleEnableEXT;
vkCmdSetDiscardRectangleModeEXT: PFN_vkCmdSetDiscardRectangleModeEXT;
vkSetHdrMetadataEXT: PFN_vkSetHdrMetadataEXT;
vkSetDebugUtilsObjectNameEXT: PFN_vkSetDebugUtilsObjectNameEXT;
vkSetDebugUtilsObjectTagEXT: PFN_vkSetDebugUtilsObjectTagEXT;
vkQueueBeginDebugUtilsLabelEXT: PFN_vkQueueBeginDebugUtilsLabelEXT;
vkQueueEndDebugUtilsLabelEXT: PFN_vkQueueEndDebugUtilsLabelEXT;
vkQueueInsertDebugUtilsLabelEXT: PFN_vkQueueInsertDebugUtilsLabelEXT;
vkCmdBeginDebugUtilsLabelEXT: PFN_vkCmdBeginDebugUtilsLabelEXT;
vkCmdEndDebugUtilsLabelEXT: PFN_vkCmdEndDebugUtilsLabelEXT;
vkCmdInsertDebugUtilsLabelEXT: PFN_vkCmdInsertDebugUtilsLabelEXT;
vkCmdSetSampleLocationsEXT: PFN_vkCmdSetSampleLocationsEXT;
vkGetImageDrmFormatModifierPropertiesEXT: PFN_vkGetImageDrmFormatModifierPropertiesEXT;
vkCreateValidationCacheEXT: PFN_vkCreateValidationCacheEXT;
vkDestroyValidationCacheEXT: PFN_vkDestroyValidationCacheEXT;
vkMergeValidationCachesEXT: PFN_vkMergeValidationCachesEXT;
vkGetValidationCacheDataEXT: PFN_vkGetValidationCacheDataEXT;
vkCmdBindShadingRateImageNV: PFN_vkCmdBindShadingRateImageNV;
vkCmdSetViewportShadingRatePaletteNV: PFN_vkCmdSetViewportShadingRatePaletteNV;
vkCmdSetCoarseSampleOrderNV: PFN_vkCmdSetCoarseSampleOrderNV;
vkCreateAccelerationStructureNV: PFN_vkCreateAccelerationStructureNV;
vkDestroyAccelerationStructureNV: PFN_vkDestroyAccelerationStructureNV;
vkGetAccelerationStructureMemoryRequirementsNV: PFN_vkGetAccelerationStructureMemoryRequirementsNV;
vkBindAccelerationStructureMemoryNV: PFN_vkBindAccelerationStructureMemoryNV;
vkCmdBuildAccelerationStructureNV: PFN_vkCmdBuildAccelerationStructureNV;
vkCmdCopyAccelerationStructureNV: PFN_vkCmdCopyAccelerationStructureNV;
vkCmdTraceRaysNV: PFN_vkCmdTraceRaysNV;
vkCreateRayTracingPipelinesNV: PFN_vkCreateRayTracingPipelinesNV;
vkGetRayTracingShaderGroupHandlesKHR: PFN_vkGetRayTracingShaderGroupHandlesKHR;
vkGetRayTracingShaderGroupHandlesNV: PFN_vkGetRayTracingShaderGroupHandlesNV;
vkGetAccelerationStructureHandleNV: PFN_vkGetAccelerationStructureHandleNV;
vkCmdWriteAccelerationStructuresPropertiesNV: PFN_vkCmdWriteAccelerationStructuresPropertiesNV;
vkCompileDeferredNV: PFN_vkCompileDeferredNV;
vkGetMemoryHostPointerPropertiesEXT: PFN_vkGetMemoryHostPointerPropertiesEXT;
vkCmdWriteBufferMarkerAMD: PFN_vkCmdWriteBufferMarkerAMD;
vkCmdWriteBufferMarker2AMD: PFN_vkCmdWriteBufferMarker2AMD;
vkGetCalibratedTimestampsEXT: PFN_vkGetCalibratedTimestampsEXT;
vkCmdDrawMeshTasksNV: PFN_vkCmdDrawMeshTasksNV;
vkCmdDrawMeshTasksIndirectNV: PFN_vkCmdDrawMeshTasksIndirectNV;
vkCmdDrawMeshTasksIndirectCountNV: PFN_vkCmdDrawMeshTasksIndirectCountNV;
vkCmdSetExclusiveScissorEnableNV: PFN_vkCmdSetExclusiveScissorEnableNV;
vkCmdSetExclusiveScissorNV: PFN_vkCmdSetExclusiveScissorNV;
vkCmdSetCheckpointNV: PFN_vkCmdSetCheckpointNV;
vkGetQueueCheckpointDataNV: PFN_vkGetQueueCheckpointDataNV;
vkGetQueueCheckpointData2NV: PFN_vkGetQueueCheckpointData2NV;
vkInitializePerformanceApiINTEL: PFN_vkInitializePerformanceApiINTEL;
vkUninitializePerformanceApiINTEL: PFN_vkUninitializePerformanceApiINTEL;
vkCmdSetPerformanceMarkerINTEL: PFN_vkCmdSetPerformanceMarkerINTEL;
vkCmdSetPerformanceStreamMarkerINTEL: PFN_vkCmdSetPerformanceStreamMarkerINTEL;
vkCmdSetPerformanceOverrideINTEL: PFN_vkCmdSetPerformanceOverrideINTEL;
vkAcquirePerformanceConfigurationINTEL: PFN_vkAcquirePerformanceConfigurationINTEL;
vkReleasePerformanceConfigurationINTEL: PFN_vkReleasePerformanceConfigurationINTEL;
vkQueueSetPerformanceConfigurationINTEL: PFN_vkQueueSetPerformanceConfigurationINTEL;
vkGetPerformanceParameterINTEL: PFN_vkGetPerformanceParameterINTEL;
vkSetLocalDimmingAMD: PFN_vkSetLocalDimmingAMD;
vkGetBufferDeviceAddressEXT: PFN_vkGetBufferDeviceAddressEXT;
vkCmdSetLineStippleEXT: PFN_vkCmdSetLineStippleEXT;
vkResetQueryPoolEXT: PFN_vkResetQueryPoolEXT;
vkCmdSetCullModeEXT: PFN_vkCmdSetCullModeEXT;
vkCmdSetFrontFaceEXT: PFN_vkCmdSetFrontFaceEXT;
vkCmdSetPrimitiveTopologyEXT: PFN_vkCmdSetPrimitiveTopologyEXT;
vkCmdSetViewportWithCountEXT: PFN_vkCmdSetViewportWithCountEXT;
vkCmdSetScissorWithCountEXT: PFN_vkCmdSetScissorWithCountEXT;
vkCmdBindVertexBuffers2EXT: PFN_vkCmdBindVertexBuffers2EXT;
vkCmdSetDepthTestEnableEXT: PFN_vkCmdSetDepthTestEnableEXT;
vkCmdSetDepthWriteEnableEXT: PFN_vkCmdSetDepthWriteEnableEXT;
vkCmdSetDepthCompareOpEXT: PFN_vkCmdSetDepthCompareOpEXT;
vkCmdSetDepthBoundsTestEnableEXT: PFN_vkCmdSetDepthBoundsTestEnableEXT;
vkCmdSetStencilTestEnableEXT: PFN_vkCmdSetStencilTestEnableEXT;
vkCmdSetStencilOpEXT: PFN_vkCmdSetStencilOpEXT;
vkCopyMemoryToImageEXT: PFN_vkCopyMemoryToImageEXT;
vkCopyImageToMemoryEXT: PFN_vkCopyImageToMemoryEXT;
vkCopyImageToImageEXT: PFN_vkCopyImageToImageEXT;
vkTransitionImageLayoutEXT: PFN_vkTransitionImageLayoutEXT;
vkGetImageSubresourceLayout2EXT: PFN_vkGetImageSubresourceLayout2EXT;
vkReleaseSwapchainImagesEXT: PFN_vkReleaseSwapchainImagesEXT;
vkGetGeneratedCommandsMemoryRequirementsNV: PFN_vkGetGeneratedCommandsMemoryRequirementsNV;
vkCmdPreprocessGeneratedCommandsNV: PFN_vkCmdPreprocessGeneratedCommandsNV;
vkCmdExecuteGeneratedCommandsNV: PFN_vkCmdExecuteGeneratedCommandsNV;
vkCmdBindPipelineShaderGroupNV: PFN_vkCmdBindPipelineShaderGroupNV;
vkCreateIndirectCommandsLayoutNV: PFN_vkCreateIndirectCommandsLayoutNV;
vkDestroyIndirectCommandsLayoutNV: PFN_vkDestroyIndirectCommandsLayoutNV;
vkCmdSetDepthBias2EXT: PFN_vkCmdSetDepthBias2EXT;
vkCreatePrivateDataSlotEXT: PFN_vkCreatePrivateDataSlotEXT;
vkDestroyPrivateDataSlotEXT: PFN_vkDestroyPrivateDataSlotEXT;
vkSetPrivateDataEXT: PFN_vkSetPrivateDataEXT;
vkGetPrivateDataEXT: PFN_vkGetPrivateDataEXT;
vkCreateCudaModuleNV: PFN_vkCreateCudaModuleNV;
vkGetCudaModuleCacheNV: PFN_vkGetCudaModuleCacheNV;
vkCreateCudaFunctionNV: PFN_vkCreateCudaFunctionNV;
vkDestroyCudaModuleNV: PFN_vkDestroyCudaModuleNV;
vkDestroyCudaFunctionNV: PFN_vkDestroyCudaFunctionNV;
vkCmdCudaLaunchKernelNV: PFN_vkCmdCudaLaunchKernelNV;
vkCmdDispatchTileQCOM: PFN_vkCmdDispatchTileQCOM;
vkCmdBeginPerTileExecutionQCOM: PFN_vkCmdBeginPerTileExecutionQCOM;
vkCmdEndPerTileExecutionQCOM: PFN_vkCmdEndPerTileExecutionQCOM;
vkGetDescriptorSetLayoutSizeEXT: PFN_vkGetDescriptorSetLayoutSizeEXT;
vkGetDescriptorSetLayoutBindingOffsetEXT: PFN_vkGetDescriptorSetLayoutBindingOffsetEXT;
vkGetDescriptorEXT: PFN_vkGetDescriptorEXT;
vkCmdBindDescriptorBuffersEXT: PFN_vkCmdBindDescriptorBuffersEXT;
vkCmdSetDescriptorBufferOffsetsEXT: PFN_vkCmdSetDescriptorBufferOffsetsEXT;
vkCmdBindDescriptorBufferEmbeddedSamplersEXT: PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
vkGetBufferOpaqueCaptureDescriptorDataEXT: PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT;
vkGetImageOpaqueCaptureDescriptorDataEXT: PFN_vkGetImageOpaqueCaptureDescriptorDataEXT;
vkGetImageViewOpaqueCaptureDescriptorDataEXT: PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT;
vkGetSamplerOpaqueCaptureDescriptorDataEXT: PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT;
vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT: PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
vkCmdSetFragmentShadingRateEnumNV: PFN_vkCmdSetFragmentShadingRateEnumNV;
vkGetDeviceFaultInfoEXT: PFN_vkGetDeviceFaultInfoEXT;
vkCmdSetVertexInputEXT: PFN_vkCmdSetVertexInputEXT;
vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI: PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
vkCmdSubpassShadingHUAWEI: PFN_vkCmdSubpassShadingHUAWEI;
vkCmdBindInvocationMaskHUAWEI: PFN_vkCmdBindInvocationMaskHUAWEI;
vkGetMemoryRemoteAddressNV: PFN_vkGetMemoryRemoteAddressNV;
vkGetPipelinePropertiesEXT: PFN_vkGetPipelinePropertiesEXT;
vkCmdSetPatchControlPointsEXT: PFN_vkCmdSetPatchControlPointsEXT;
vkCmdSetRasterizerDiscardEnableEXT: PFN_vkCmdSetRasterizerDiscardEnableEXT;
vkCmdSetDepthBiasEnableEXT: PFN_vkCmdSetDepthBiasEnableEXT;
vkCmdSetLogicOpEXT: PFN_vkCmdSetLogicOpEXT;
vkCmdSetPrimitiveRestartEnableEXT: PFN_vkCmdSetPrimitiveRestartEnableEXT;
vkCmdSetColorWriteEnableEXT: PFN_vkCmdSetColorWriteEnableEXT;
vkCmdDrawMultiEXT: PFN_vkCmdDrawMultiEXT;
vkCmdDrawMultiIndexedEXT: PFN_vkCmdDrawMultiIndexedEXT;
vkCreateMicromapEXT: PFN_vkCreateMicromapEXT;
vkDestroyMicromapEXT: PFN_vkDestroyMicromapEXT;
vkCmdBuildMicromapsEXT: PFN_vkCmdBuildMicromapsEXT;
vkBuildMicromapsEXT: PFN_vkBuildMicromapsEXT;
vkCopyMicromapEXT: PFN_vkCopyMicromapEXT;
vkCopyMicromapToMemoryEXT: PFN_vkCopyMicromapToMemoryEXT;
vkCopyMemoryToMicromapEXT: PFN_vkCopyMemoryToMicromapEXT;
vkWriteMicromapsPropertiesEXT: PFN_vkWriteMicromapsPropertiesEXT;
vkCmdCopyMicromapEXT: PFN_vkCmdCopyMicromapEXT;
vkCmdCopyMicromapToMemoryEXT: PFN_vkCmdCopyMicromapToMemoryEXT;
vkCmdCopyMemoryToMicromapEXT: PFN_vkCmdCopyMemoryToMicromapEXT;
vkCmdWriteMicromapsPropertiesEXT: PFN_vkCmdWriteMicromapsPropertiesEXT;
vkGetDeviceMicromapCompatibilityEXT: PFN_vkGetDeviceMicromapCompatibilityEXT;
vkGetMicromapBuildSizesEXT: PFN_vkGetMicromapBuildSizesEXT;
vkCmdDrawClusterHUAWEI: PFN_vkCmdDrawClusterHUAWEI;
vkCmdDrawClusterIndirectHUAWEI: PFN_vkCmdDrawClusterIndirectHUAWEI;
vkSetDeviceMemoryPriorityEXT: PFN_vkSetDeviceMemoryPriorityEXT;
vkGetDescriptorSetLayoutHostMappingInfoVALVE: PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE;
vkGetDescriptorSetHostMappingVALVE: PFN_vkGetDescriptorSetHostMappingVALVE;
vkCmdCopyMemoryIndirectNV: PFN_vkCmdCopyMemoryIndirectNV;
vkCmdCopyMemoryToImageIndirectNV: PFN_vkCmdCopyMemoryToImageIndirectNV;
vkCmdDecompressMemoryNV: PFN_vkCmdDecompressMemoryNV;
vkCmdDecompressMemoryIndirectCountNV: PFN_vkCmdDecompressMemoryIndirectCountNV;
vkGetPipelineIndirectMemoryRequirementsNV: PFN_vkGetPipelineIndirectMemoryRequirementsNV;
vkCmdUpdatePipelineIndirectBufferNV: PFN_vkCmdUpdatePipelineIndirectBufferNV;
vkGetPipelineIndirectDeviceAddressNV: PFN_vkGetPipelineIndirectDeviceAddressNV;
vkCmdSetDepthClampEnableEXT: PFN_vkCmdSetDepthClampEnableEXT;
vkCmdSetPolygonModeEXT: PFN_vkCmdSetPolygonModeEXT;
vkCmdSetRasterizationSamplesEXT: PFN_vkCmdSetRasterizationSamplesEXT;
vkCmdSetSampleMaskEXT: PFN_vkCmdSetSampleMaskEXT;
vkCmdSetAlphaToCoverageEnableEXT: PFN_vkCmdSetAlphaToCoverageEnableEXT;
vkCmdSetAlphaToOneEnableEXT: PFN_vkCmdSetAlphaToOneEnableEXT;
vkCmdSetLogicOpEnableEXT: PFN_vkCmdSetLogicOpEnableEXT;
vkCmdSetColorBlendEnableEXT: PFN_vkCmdSetColorBlendEnableEXT;
vkCmdSetColorBlendEquationEXT: PFN_vkCmdSetColorBlendEquationEXT;
vkCmdSetColorWriteMaskEXT: PFN_vkCmdSetColorWriteMaskEXT;
vkCmdSetTessellationDomainOriginEXT: PFN_vkCmdSetTessellationDomainOriginEXT;
vkCmdSetRasterizationStreamEXT: PFN_vkCmdSetRasterizationStreamEXT;
vkCmdSetConservativeRasterizationModeEXT: PFN_vkCmdSetConservativeRasterizationModeEXT;
vkCmdSetExtraPrimitiveOverestimationSizeEXT: PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT;
vkCmdSetDepthClipEnableEXT: PFN_vkCmdSetDepthClipEnableEXT;
vkCmdSetSampleLocationsEnableEXT: PFN_vkCmdSetSampleLocationsEnableEXT;
vkCmdSetColorBlendAdvancedEXT: PFN_vkCmdSetColorBlendAdvancedEXT;
vkCmdSetProvokingVertexModeEXT: PFN_vkCmdSetProvokingVertexModeEXT;
vkCmdSetLineRasterizationModeEXT: PFN_vkCmdSetLineRasterizationModeEXT;
vkCmdSetLineStippleEnableEXT: PFN_vkCmdSetLineStippleEnableEXT;
vkCmdSetDepthClipNegativeOneToOneEXT: PFN_vkCmdSetDepthClipNegativeOneToOneEXT;
vkCmdSetViewportWScalingEnableNV: PFN_vkCmdSetViewportWScalingEnableNV;
vkCmdSetViewportSwizzleNV: PFN_vkCmdSetViewportSwizzleNV;
vkCmdSetCoverageToColorEnableNV: PFN_vkCmdSetCoverageToColorEnableNV;
vkCmdSetCoverageToColorLocationNV: PFN_vkCmdSetCoverageToColorLocationNV;
vkCmdSetCoverageModulationModeNV: PFN_vkCmdSetCoverageModulationModeNV;
vkCmdSetCoverageModulationTableEnableNV: PFN_vkCmdSetCoverageModulationTableEnableNV;
vkCmdSetCoverageModulationTableNV: PFN_vkCmdSetCoverageModulationTableNV;
vkCmdSetShadingRateImageEnableNV: PFN_vkCmdSetShadingRateImageEnableNV;
vkCmdSetRepresentativeFragmentTestEnableNV: PFN_vkCmdSetRepresentativeFragmentTestEnableNV;
vkCmdSetCoverageReductionModeNV: PFN_vkCmdSetCoverageReductionModeNV;
vkGetShaderModuleIdentifierEXT: PFN_vkGetShaderModuleIdentifierEXT;
vkGetShaderModuleCreateInfoIdentifierEXT: PFN_vkGetShaderModuleCreateInfoIdentifierEXT;
vkCreateOpticalFlowSessionNV: PFN_vkCreateOpticalFlowSessionNV;
vkDestroyOpticalFlowSessionNV: PFN_vkDestroyOpticalFlowSessionNV;
vkBindOpticalFlowSessionImageNV: PFN_vkBindOpticalFlowSessionImageNV;
vkCmdOpticalFlowExecuteNV: PFN_vkCmdOpticalFlowExecuteNV;
vkAntiLagUpdateAMD: PFN_vkAntiLagUpdateAMD;
vkCreateShadersEXT: PFN_vkCreateShadersEXT;
vkDestroyShaderEXT: PFN_vkDestroyShaderEXT;
vkGetShaderBinaryDataEXT: PFN_vkGetShaderBinaryDataEXT;
vkCmdBindShadersEXT: PFN_vkCmdBindShadersEXT;
vkCmdSetDepthClampRangeEXT: PFN_vkCmdSetDepthClampRangeEXT;
vkGetFramebufferTilePropertiesQCOM: PFN_vkGetFramebufferTilePropertiesQCOM;
vkGetDynamicRenderingTilePropertiesQCOM: PFN_vkGetDynamicRenderingTilePropertiesQCOM;
vkConvertCooperativeVectorMatrixNV: PFN_vkConvertCooperativeVectorMatrixNV;
vkCmdConvertCooperativeVectorMatrixNV: PFN_vkCmdConvertCooperativeVectorMatrixNV;
vkSetLatencySleepModeNV: PFN_vkSetLatencySleepModeNV;
vkLatencySleepNV: PFN_vkLatencySleepNV;
vkSetLatencyMarkerNV: PFN_vkSetLatencyMarkerNV;
vkGetLatencyTimingsNV: PFN_vkGetLatencyTimingsNV;
vkQueueNotifyOutOfBandNV: PFN_vkQueueNotifyOutOfBandNV;
vkCmdSetAttachmentFeedbackLoopEnableEXT: PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT;
vkCmdBindTileMemoryQCOM: PFN_vkCmdBindTileMemoryQCOM;
vkCreateExternalComputeQueueNV: PFN_vkCreateExternalComputeQueueNV;
vkDestroyExternalComputeQueueNV: PFN_vkDestroyExternalComputeQueueNV;
vkGetClusterAccelerationStructureBuildSizesNV: PFN_vkGetClusterAccelerationStructureBuildSizesNV;
vkCmdBuildClusterAccelerationStructureIndirectNV: PFN_vkCmdBuildClusterAccelerationStructureIndirectNV;
vkGetPartitionedAccelerationStructuresBuildSizesNV: PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV;
vkCmdBuildPartitionedAccelerationStructuresNV: PFN_vkCmdBuildPartitionedAccelerationStructuresNV;
vkGetGeneratedCommandsMemoryRequirementsEXT: PFN_vkGetGeneratedCommandsMemoryRequirementsEXT;
vkCmdPreprocessGeneratedCommandsEXT: PFN_vkCmdPreprocessGeneratedCommandsEXT;
vkCmdExecuteGeneratedCommandsEXT: PFN_vkCmdExecuteGeneratedCommandsEXT;
vkCreateIndirectCommandsLayoutEXT: PFN_vkCreateIndirectCommandsLayoutEXT;
vkDestroyIndirectCommandsLayoutEXT: PFN_vkDestroyIndirectCommandsLayoutEXT;
vkCreateIndirectExecutionSetEXT: PFN_vkCreateIndirectExecutionSetEXT;
vkDestroyIndirectExecutionSetEXT: PFN_vkDestroyIndirectExecutionSetEXT;
vkUpdateIndirectExecutionSetPipelineEXT: PFN_vkUpdateIndirectExecutionSetPipelineEXT;
vkUpdateIndirectExecutionSetShaderEXT: PFN_vkUpdateIndirectExecutionSetShaderEXT;
vkCmdEndRendering2EXT: PFN_vkCmdEndRendering2EXT;
vkCreateAccelerationStructureKHR: PFN_vkCreateAccelerationStructureKHR;
vkDestroyAccelerationStructureKHR: PFN_vkDestroyAccelerationStructureKHR;
vkCmdBuildAccelerationStructuresKHR: PFN_vkCmdBuildAccelerationStructuresKHR;
vkCmdBuildAccelerationStructuresIndirectKHR: PFN_vkCmdBuildAccelerationStructuresIndirectKHR;
vkBuildAccelerationStructuresKHR: PFN_vkBuildAccelerationStructuresKHR;
vkCopyAccelerationStructureKHR: PFN_vkCopyAccelerationStructureKHR;
vkCopyAccelerationStructureToMemoryKHR: PFN_vkCopyAccelerationStructureToMemoryKHR;
vkCopyMemoryToAccelerationStructureKHR: PFN_vkCopyMemoryToAccelerationStructureKHR;
vkWriteAccelerationStructuresPropertiesKHR: PFN_vkWriteAccelerationStructuresPropertiesKHR;
vkCmdCopyAccelerationStructureKHR: PFN_vkCmdCopyAccelerationStructureKHR;
vkCmdCopyAccelerationStructureToMemoryKHR: PFN_vkCmdCopyAccelerationStructureToMemoryKHR;
vkCmdCopyMemoryToAccelerationStructureKHR: PFN_vkCmdCopyMemoryToAccelerationStructureKHR;
vkGetAccelerationStructureDeviceAddressKHR: PFN_vkGetAccelerationStructureDeviceAddressKHR;
vkCmdWriteAccelerationStructuresPropertiesKHR: PFN_vkCmdWriteAccelerationStructuresPropertiesKHR;
vkGetDeviceAccelerationStructureCompatibilityKHR: PFN_vkGetDeviceAccelerationStructureCompatibilityKHR;
vkGetAccelerationStructureBuildSizesKHR: PFN_vkGetAccelerationStructureBuildSizesKHR;
vkCmdTraceRaysKHR: PFN_vkCmdTraceRaysKHR;
vkCreateRayTracingPipelinesKHR: PFN_vkCreateRayTracingPipelinesKHR;
vkGetRayTracingCaptureReplayShaderGroupHandlesKHR: PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
vkCmdTraceRaysIndirectKHR: PFN_vkCmdTraceRaysIndirectKHR;
vkGetRayTracingShaderGroupStackSizeKHR: PFN_vkGetRayTracingShaderGroupStackSizeKHR;
vkCmdSetRayTracingPipelineStackSizeKHR: PFN_vkCmdSetRayTracingPipelineStackSizeKHR;
vkCmdDrawMeshTasksEXT: PFN_vkCmdDrawMeshTasksEXT;
vkCmdDrawMeshTasksIndirectEXT: PFN_vkCmdDrawMeshTasksIndirectEXT;
vkCmdDrawMeshTasksIndirectCountEXT: PFN_vkCmdDrawMeshTasksIndirectCountEXT;
vkGetAndroidHardwareBufferPropertiesANDROID: PFN_vkGetAndroidHardwareBufferPropertiesANDROID;
vkGetMemoryAndroidHardwareBufferANDROID: PFN_vkGetMemoryAndroidHardwareBufferANDROID;
vkCreateExecutionGraphPipelinesAMDX: PFN_vkCreateExecutionGraphPipelinesAMDX;
vkGetExecutionGraphPipelineScratchSizeAMDX: PFN_vkGetExecutionGraphPipelineScratchSizeAMDX;
vkGetExecutionGraphPipelineNodeIndexAMDX: PFN_vkGetExecutionGraphPipelineNodeIndexAMDX;
vkCmdInitializeGraphScratchMemoryAMDX: PFN_vkCmdInitializeGraphScratchMemoryAMDX;
vkCmdDispatchGraphAMDX: PFN_vkCmdDispatchGraphAMDX;
vkCmdDispatchGraphIndirectAMDX: PFN_vkCmdDispatchGraphIndirectAMDX;
vkCmdDispatchGraphIndirectCountAMDX: PFN_vkCmdDispatchGraphIndirectCountAMDX;


Device_VTable :: struct {
    vkDestroyDevice: PFN_vkDestroyDevice;
    vkGetDeviceQueue: PFN_vkGetDeviceQueue;
    vkQueueSubmit: PFN_vkQueueSubmit;
    vkQueueWaitIdle: PFN_vkQueueWaitIdle;
    vkDeviceWaitIdle: PFN_vkDeviceWaitIdle;
    vkAllocateMemory: PFN_vkAllocateMemory;
    vkFreeMemory: PFN_vkFreeMemory;
    vkMapMemory: PFN_vkMapMemory;
    vkUnmapMemory: PFN_vkUnmapMemory;
    vkFlushMappedMemoryRanges: PFN_vkFlushMappedMemoryRanges;
    vkInvalidateMappedMemoryRanges: PFN_vkInvalidateMappedMemoryRanges;
    vkGetDeviceMemoryCommitment: PFN_vkGetDeviceMemoryCommitment;
    vkBindBufferMemory: PFN_vkBindBufferMemory;
    vkBindImageMemory: PFN_vkBindImageMemory;
    vkGetBufferMemoryRequirements: PFN_vkGetBufferMemoryRequirements;
    vkGetImageMemoryRequirements: PFN_vkGetImageMemoryRequirements;
    vkGetImageSparseMemoryRequirements: PFN_vkGetImageSparseMemoryRequirements;
    vkQueueBindSparse: PFN_vkQueueBindSparse;
    vkCreateFence: PFN_vkCreateFence;
    vkDestroyFence: PFN_vkDestroyFence;
    vkResetFences: PFN_vkResetFences;
    vkGetFenceStatus: PFN_vkGetFenceStatus;
    vkWaitForFences: PFN_vkWaitForFences;
    vkCreateSemaphore: PFN_vkCreateSemaphore;
    vkDestroySemaphore: PFN_vkDestroySemaphore;
    vkCreateEvent: PFN_vkCreateEvent;
    vkDestroyEvent: PFN_vkDestroyEvent;
    vkGetEventStatus: PFN_vkGetEventStatus;
    vkSetEvent: PFN_vkSetEvent;
    vkResetEvent: PFN_vkResetEvent;
    vkCreateQueryPool: PFN_vkCreateQueryPool;
    vkDestroyQueryPool: PFN_vkDestroyQueryPool;
    vkGetQueryPoolResults: PFN_vkGetQueryPoolResults;
    vkCreateBuffer: PFN_vkCreateBuffer;
    vkDestroyBuffer: PFN_vkDestroyBuffer;
    vkCreateBufferView: PFN_vkCreateBufferView;
    vkDestroyBufferView: PFN_vkDestroyBufferView;
    vkCreateImage: PFN_vkCreateImage;
    vkDestroyImage: PFN_vkDestroyImage;
    vkGetImageSubresourceLayout: PFN_vkGetImageSubresourceLayout;
    vkCreateImageView: PFN_vkCreateImageView;
    vkDestroyImageView: PFN_vkDestroyImageView;
    vkCreateShaderModule: PFN_vkCreateShaderModule;
    vkDestroyShaderModule: PFN_vkDestroyShaderModule;
    vkCreatePipelineCache: PFN_vkCreatePipelineCache;
    vkDestroyPipelineCache: PFN_vkDestroyPipelineCache;
    vkGetPipelineCacheData: PFN_vkGetPipelineCacheData;
    vkMergePipelineCaches: PFN_vkMergePipelineCaches;
    vkCreateGraphicsPipelines: PFN_vkCreateGraphicsPipelines;
    vkCreateComputePipelines: PFN_vkCreateComputePipelines;
    vkDestroyPipeline: PFN_vkDestroyPipeline;
    vkCreatePipelineLayout: PFN_vkCreatePipelineLayout;
    vkDestroyPipelineLayout: PFN_vkDestroyPipelineLayout;
    vkCreateSampler: PFN_vkCreateSampler;
    vkDestroySampler: PFN_vkDestroySampler;
    vkCreateDescriptorSetLayout: PFN_vkCreateDescriptorSetLayout;
    vkDestroyDescriptorSetLayout: PFN_vkDestroyDescriptorSetLayout;
    vkCreateDescriptorPool: PFN_vkCreateDescriptorPool;
    vkDestroyDescriptorPool: PFN_vkDestroyDescriptorPool;
    vkResetDescriptorPool: PFN_vkResetDescriptorPool;
    vkAllocateDescriptorSets: PFN_vkAllocateDescriptorSets;
    vkFreeDescriptorSets: PFN_vkFreeDescriptorSets;
    vkUpdateDescriptorSets: PFN_vkUpdateDescriptorSets;
    vkCreateFramebuffer: PFN_vkCreateFramebuffer;
    vkDestroyFramebuffer: PFN_vkDestroyFramebuffer;
    vkCreateRenderPass: PFN_vkCreateRenderPass;
    vkDestroyRenderPass: PFN_vkDestroyRenderPass;
    vkGetRenderAreaGranularity: PFN_vkGetRenderAreaGranularity;
    vkCreateCommandPool: PFN_vkCreateCommandPool;
    vkDestroyCommandPool: PFN_vkDestroyCommandPool;
    vkResetCommandPool: PFN_vkResetCommandPool;
    vkAllocateCommandBuffers: PFN_vkAllocateCommandBuffers;
    vkFreeCommandBuffers: PFN_vkFreeCommandBuffers;
    vkBeginCommandBuffer: PFN_vkBeginCommandBuffer;
    vkEndCommandBuffer: PFN_vkEndCommandBuffer;
    vkResetCommandBuffer: PFN_vkResetCommandBuffer;
    vkCmdBindPipeline: PFN_vkCmdBindPipeline;
    vkCmdSetViewport: PFN_vkCmdSetViewport;
    vkCmdSetScissor: PFN_vkCmdSetScissor;
    vkCmdSetLineWidth: PFN_vkCmdSetLineWidth;
    vkCmdSetDepthBias: PFN_vkCmdSetDepthBias;
    vkCmdSetBlendConstants: PFN_vkCmdSetBlendConstants;
    vkCmdSetDepthBounds: PFN_vkCmdSetDepthBounds;
    vkCmdSetStencilCompareMask: PFN_vkCmdSetStencilCompareMask;
    vkCmdSetStencilWriteMask: PFN_vkCmdSetStencilWriteMask;
    vkCmdSetStencilReference: PFN_vkCmdSetStencilReference;
    vkCmdBindDescriptorSets: PFN_vkCmdBindDescriptorSets;
    vkCmdBindIndexBuffer: PFN_vkCmdBindIndexBuffer;
    vkCmdBindVertexBuffers: PFN_vkCmdBindVertexBuffers;
    vkCmdDraw: PFN_vkCmdDraw;
    vkCmdDrawIndexed: PFN_vkCmdDrawIndexed;
    vkCmdDrawIndirect: PFN_vkCmdDrawIndirect;
    vkCmdDrawIndexedIndirect: PFN_vkCmdDrawIndexedIndirect;
    vkCmdDispatch: PFN_vkCmdDispatch;
    vkCmdDispatchIndirect: PFN_vkCmdDispatchIndirect;
    vkCmdCopyBuffer: PFN_vkCmdCopyBuffer;
    vkCmdCopyImage: PFN_vkCmdCopyImage;
    vkCmdBlitImage: PFN_vkCmdBlitImage;
    vkCmdCopyBufferToImage: PFN_vkCmdCopyBufferToImage;
    vkCmdCopyImageToBuffer: PFN_vkCmdCopyImageToBuffer;
    vkCmdUpdateBuffer: PFN_vkCmdUpdateBuffer;
    vkCmdFillBuffer: PFN_vkCmdFillBuffer;
    vkCmdClearColorImage: PFN_vkCmdClearColorImage;
    vkCmdClearDepthStencilImage: PFN_vkCmdClearDepthStencilImage;
    vkCmdClearAttachments: PFN_vkCmdClearAttachments;
    vkCmdResolveImage: PFN_vkCmdResolveImage;
    vkCmdSetEvent: PFN_vkCmdSetEvent;
    vkCmdResetEvent: PFN_vkCmdResetEvent;
    vkCmdWaitEvents: PFN_vkCmdWaitEvents;
    vkCmdPipelineBarrier: PFN_vkCmdPipelineBarrier;
    vkCmdBeginQuery: PFN_vkCmdBeginQuery;
    vkCmdEndQuery: PFN_vkCmdEndQuery;
    vkCmdResetQueryPool: PFN_vkCmdResetQueryPool;
    vkCmdWriteTimestamp: PFN_vkCmdWriteTimestamp;
    vkCmdCopyQueryPoolResults: PFN_vkCmdCopyQueryPoolResults;
    vkCmdPushConstants: PFN_vkCmdPushConstants;
    vkCmdBeginRenderPass: PFN_vkCmdBeginRenderPass;
    vkCmdNextSubpass: PFN_vkCmdNextSubpass;
    vkCmdEndRenderPass: PFN_vkCmdEndRenderPass;
    vkCmdExecuteCommands: PFN_vkCmdExecuteCommands;
    vkBindBufferMemory2: PFN_vkBindBufferMemory2;
    vkBindImageMemory2: PFN_vkBindImageMemory2;
    vkGetDeviceGroupPeerMemoryFeatures: PFN_vkGetDeviceGroupPeerMemoryFeatures;
    vkCmdSetDeviceMask: PFN_vkCmdSetDeviceMask;
    vkCmdDispatchBase: PFN_vkCmdDispatchBase;
    vkGetImageMemoryRequirements2: PFN_vkGetImageMemoryRequirements2;
    vkGetBufferMemoryRequirements2: PFN_vkGetBufferMemoryRequirements2;
    vkGetImageSparseMemoryRequirements2: PFN_vkGetImageSparseMemoryRequirements2;
    vkTrimCommandPool: PFN_vkTrimCommandPool;
    vkGetDeviceQueue2: PFN_vkGetDeviceQueue2;
    vkCreateSamplerYcbcrConversion: PFN_vkCreateSamplerYcbcrConversion;
    vkDestroySamplerYcbcrConversion: PFN_vkDestroySamplerYcbcrConversion;
    vkCreateDescriptorUpdateTemplate: PFN_vkCreateDescriptorUpdateTemplate;
    vkDestroyDescriptorUpdateTemplate: PFN_vkDestroyDescriptorUpdateTemplate;
    vkUpdateDescriptorSetWithTemplate: PFN_vkUpdateDescriptorSetWithTemplate;
    vkGetDescriptorSetLayoutSupport: PFN_vkGetDescriptorSetLayoutSupport;
    vkCmdDrawIndirectCount: PFN_vkCmdDrawIndirectCount;
    vkCmdDrawIndexedIndirectCount: PFN_vkCmdDrawIndexedIndirectCount;
    vkCreateRenderPass2: PFN_vkCreateRenderPass2;
    vkCmdBeginRenderPass2: PFN_vkCmdBeginRenderPass2;
    vkCmdNextSubpass2: PFN_vkCmdNextSubpass2;
    vkCmdEndRenderPass2: PFN_vkCmdEndRenderPass2;
    vkResetQueryPool: PFN_vkResetQueryPool;
    vkGetSemaphoreCounterValue: PFN_vkGetSemaphoreCounterValue;
    vkWaitSemaphores: PFN_vkWaitSemaphores;
    vkSignalSemaphore: PFN_vkSignalSemaphore;
    vkGetBufferDeviceAddress: PFN_vkGetBufferDeviceAddress;
    vkGetBufferOpaqueCaptureAddress: PFN_vkGetBufferOpaqueCaptureAddress;
    vkGetDeviceMemoryOpaqueCaptureAddress: PFN_vkGetDeviceMemoryOpaqueCaptureAddress;
    vkCreatePrivateDataSlot: PFN_vkCreatePrivateDataSlot;
    vkDestroyPrivateDataSlot: PFN_vkDestroyPrivateDataSlot;
    vkSetPrivateData: PFN_vkSetPrivateData;
    vkGetPrivateData: PFN_vkGetPrivateData;
    vkCmdSetEvent2: PFN_vkCmdSetEvent2;
    vkCmdResetEvent2: PFN_vkCmdResetEvent2;
    vkCmdWaitEvents2: PFN_vkCmdWaitEvents2;
    vkCmdPipelineBarrier2: PFN_vkCmdPipelineBarrier2;
    vkCmdWriteTimestamp2: PFN_vkCmdWriteTimestamp2;
    vkQueueSubmit2: PFN_vkQueueSubmit2;
    vkCmdCopyBuffer2: PFN_vkCmdCopyBuffer2;
    vkCmdCopyImage2: PFN_vkCmdCopyImage2;
    vkCmdCopyBufferToImage2: PFN_vkCmdCopyBufferToImage2;
    vkCmdCopyImageToBuffer2: PFN_vkCmdCopyImageToBuffer2;
    vkCmdBlitImage2: PFN_vkCmdBlitImage2;
    vkCmdResolveImage2: PFN_vkCmdResolveImage2;
    vkCmdBeginRendering: PFN_vkCmdBeginRendering;
    vkCmdEndRendering: PFN_vkCmdEndRendering;
    vkCmdSetCullMode: PFN_vkCmdSetCullMode;
    vkCmdSetFrontFace: PFN_vkCmdSetFrontFace;
    vkCmdSetPrimitiveTopology: PFN_vkCmdSetPrimitiveTopology;
    vkCmdSetViewportWithCount: PFN_vkCmdSetViewportWithCount;
    vkCmdSetScissorWithCount: PFN_vkCmdSetScissorWithCount;
    vkCmdBindVertexBuffers2: PFN_vkCmdBindVertexBuffers2;
    vkCmdSetDepthTestEnable: PFN_vkCmdSetDepthTestEnable;
    vkCmdSetDepthWriteEnable: PFN_vkCmdSetDepthWriteEnable;
    vkCmdSetDepthCompareOp: PFN_vkCmdSetDepthCompareOp;
    vkCmdSetDepthBoundsTestEnable: PFN_vkCmdSetDepthBoundsTestEnable;
    vkCmdSetStencilTestEnable: PFN_vkCmdSetStencilTestEnable;
    vkCmdSetStencilOp: PFN_vkCmdSetStencilOp;
    vkCmdSetRasterizerDiscardEnable: PFN_vkCmdSetRasterizerDiscardEnable;
    vkCmdSetDepthBiasEnable: PFN_vkCmdSetDepthBiasEnable;
    vkCmdSetPrimitiveRestartEnable: PFN_vkCmdSetPrimitiveRestartEnable;
    vkGetDeviceBufferMemoryRequirements: PFN_vkGetDeviceBufferMemoryRequirements;
    vkGetDeviceImageMemoryRequirements: PFN_vkGetDeviceImageMemoryRequirements;
    vkGetDeviceImageSparseMemoryRequirements: PFN_vkGetDeviceImageSparseMemoryRequirements;
    vkCmdSetLineStipple: PFN_vkCmdSetLineStipple;
    vkMapMemory2: PFN_vkMapMemory2;
    vkUnmapMemory2: PFN_vkUnmapMemory2;
    vkCmdBindIndexBuffer2: PFN_vkCmdBindIndexBuffer2;
    vkGetRenderingAreaGranularity: PFN_vkGetRenderingAreaGranularity;
    vkGetDeviceImageSubresourceLayout: PFN_vkGetDeviceImageSubresourceLayout;
    vkGetImageSubresourceLayout2: PFN_vkGetImageSubresourceLayout2;
    vkCmdPushDescriptorSet: PFN_vkCmdPushDescriptorSet;
    vkCmdPushDescriptorSetWithTemplate: PFN_vkCmdPushDescriptorSetWithTemplate;
    vkCmdSetRenderingAttachmentLocations: PFN_vkCmdSetRenderingAttachmentLocations;
    vkCmdSetRenderingInputAttachmentIndices: PFN_vkCmdSetRenderingInputAttachmentIndices;
    vkCmdBindDescriptorSets2: PFN_vkCmdBindDescriptorSets2;
    vkCmdPushConstants2: PFN_vkCmdPushConstants2;
    vkCmdPushDescriptorSet2: PFN_vkCmdPushDescriptorSet2;
    vkCmdPushDescriptorSetWithTemplate2: PFN_vkCmdPushDescriptorSetWithTemplate2;
    vkCopyMemoryToImage: PFN_vkCopyMemoryToImage;
    vkCopyImageToMemory: PFN_vkCopyImageToMemory;
    vkCopyImageToImage: PFN_vkCopyImageToImage;
    vkTransitionImageLayout: PFN_vkTransitionImageLayout;
    vkCreateSwapchainKHR: PFN_vkCreateSwapchainKHR;
    vkDestroySwapchainKHR: PFN_vkDestroySwapchainKHR;
    vkGetSwapchainImagesKHR: PFN_vkGetSwapchainImagesKHR;
    vkAcquireNextImageKHR: PFN_vkAcquireNextImageKHR;
    vkQueuePresentKHR: PFN_vkQueuePresentKHR;
    vkGetDeviceGroupPresentCapabilitiesKHR: PFN_vkGetDeviceGroupPresentCapabilitiesKHR;
    vkGetDeviceGroupSurfacePresentModesKHR: PFN_vkGetDeviceGroupSurfacePresentModesKHR;
    vkAcquireNextImage2KHR: PFN_vkAcquireNextImage2KHR;
    vkCreateSharedSwapchainsKHR: PFN_vkCreateSharedSwapchainsKHR;
    vkCreateVideoSessionKHR: PFN_vkCreateVideoSessionKHR;
    vkDestroyVideoSessionKHR: PFN_vkDestroyVideoSessionKHR;
    vkGetVideoSessionMemoryRequirementsKHR: PFN_vkGetVideoSessionMemoryRequirementsKHR;
    vkBindVideoSessionMemoryKHR: PFN_vkBindVideoSessionMemoryKHR;
    vkCreateVideoSessionParametersKHR: PFN_vkCreateVideoSessionParametersKHR;
    vkUpdateVideoSessionParametersKHR: PFN_vkUpdateVideoSessionParametersKHR;
    vkDestroyVideoSessionParametersKHR: PFN_vkDestroyVideoSessionParametersKHR;
    vkCmdBeginVideoCodingKHR: PFN_vkCmdBeginVideoCodingKHR;
    vkCmdEndVideoCodingKHR: PFN_vkCmdEndVideoCodingKHR;
    vkCmdControlVideoCodingKHR: PFN_vkCmdControlVideoCodingKHR;
    vkCmdDecodeVideoKHR: PFN_vkCmdDecodeVideoKHR;
    vkCmdBeginRenderingKHR: PFN_vkCmdBeginRenderingKHR;
    vkCmdEndRenderingKHR: PFN_vkCmdEndRenderingKHR;
    vkGetDeviceGroupPeerMemoryFeaturesKHR: PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR;
    vkCmdSetDeviceMaskKHR: PFN_vkCmdSetDeviceMaskKHR;
    vkCmdDispatchBaseKHR: PFN_vkCmdDispatchBaseKHR;
    vkTrimCommandPoolKHR: PFN_vkTrimCommandPoolKHR;
    vkGetMemoryFdKHR: PFN_vkGetMemoryFdKHR;
    vkGetMemoryFdPropertiesKHR: PFN_vkGetMemoryFdPropertiesKHR;
    vkImportSemaphoreFdKHR: PFN_vkImportSemaphoreFdKHR;
    vkGetSemaphoreFdKHR: PFN_vkGetSemaphoreFdKHR;
    vkCmdPushDescriptorSetKHR: PFN_vkCmdPushDescriptorSetKHR;
    vkCmdPushDescriptorSetWithTemplateKHR: PFN_vkCmdPushDescriptorSetWithTemplateKHR;
    vkCreateDescriptorUpdateTemplateKHR: PFN_vkCreateDescriptorUpdateTemplateKHR;
    vkDestroyDescriptorUpdateTemplateKHR: PFN_vkDestroyDescriptorUpdateTemplateKHR;
    vkUpdateDescriptorSetWithTemplateKHR: PFN_vkUpdateDescriptorSetWithTemplateKHR;
    vkCreateRenderPass2KHR: PFN_vkCreateRenderPass2KHR;
    vkCmdBeginRenderPass2KHR: PFN_vkCmdBeginRenderPass2KHR;
    vkCmdNextSubpass2KHR: PFN_vkCmdNextSubpass2KHR;
    vkCmdEndRenderPass2KHR: PFN_vkCmdEndRenderPass2KHR;
    vkGetSwapchainStatusKHR: PFN_vkGetSwapchainStatusKHR;
    vkImportFenceFdKHR: PFN_vkImportFenceFdKHR;
    vkGetFenceFdKHR: PFN_vkGetFenceFdKHR;
    vkAcquireProfilingLockKHR: PFN_vkAcquireProfilingLockKHR;
    vkReleaseProfilingLockKHR: PFN_vkReleaseProfilingLockKHR;
    vkGetImageMemoryRequirements2KHR: PFN_vkGetImageMemoryRequirements2KHR;
    vkGetBufferMemoryRequirements2KHR: PFN_vkGetBufferMemoryRequirements2KHR;
    vkGetImageSparseMemoryRequirements2KHR: PFN_vkGetImageSparseMemoryRequirements2KHR;
    vkCreateSamplerYcbcrConversionKHR: PFN_vkCreateSamplerYcbcrConversionKHR;
    vkDestroySamplerYcbcrConversionKHR: PFN_vkDestroySamplerYcbcrConversionKHR;
    vkBindBufferMemory2KHR: PFN_vkBindBufferMemory2KHR;
    vkBindImageMemory2KHR: PFN_vkBindImageMemory2KHR;
    vkGetDescriptorSetLayoutSupportKHR: PFN_vkGetDescriptorSetLayoutSupportKHR;
    vkCmdDrawIndirectCountKHR: PFN_vkCmdDrawIndirectCountKHR;
    vkCmdDrawIndexedIndirectCountKHR: PFN_vkCmdDrawIndexedIndirectCountKHR;
    vkGetSemaphoreCounterValueKHR: PFN_vkGetSemaphoreCounterValueKHR;
    vkWaitSemaphoresKHR: PFN_vkWaitSemaphoresKHR;
    vkSignalSemaphoreKHR: PFN_vkSignalSemaphoreKHR;
    vkCmdSetFragmentShadingRateKHR: PFN_vkCmdSetFragmentShadingRateKHR;
    vkCmdSetRenderingAttachmentLocationsKHR: PFN_vkCmdSetRenderingAttachmentLocationsKHR;
    vkCmdSetRenderingInputAttachmentIndicesKHR: PFN_vkCmdSetRenderingInputAttachmentIndicesKHR;
    vkWaitForPresentKHR: PFN_vkWaitForPresentKHR;
    vkGetBufferDeviceAddressKHR: PFN_vkGetBufferDeviceAddressKHR;
    vkGetBufferOpaqueCaptureAddressKHR: PFN_vkGetBufferOpaqueCaptureAddressKHR;
    vkGetDeviceMemoryOpaqueCaptureAddressKHR: PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR;
    vkCreateDeferredOperationKHR: PFN_vkCreateDeferredOperationKHR;
    vkDestroyDeferredOperationKHR: PFN_vkDestroyDeferredOperationKHR;
    vkGetDeferredOperationMaxConcurrencyKHR: PFN_vkGetDeferredOperationMaxConcurrencyKHR;
    vkGetDeferredOperationResultKHR: PFN_vkGetDeferredOperationResultKHR;
    vkDeferredOperationJoinKHR: PFN_vkDeferredOperationJoinKHR;
    vkGetPipelineExecutablePropertiesKHR: PFN_vkGetPipelineExecutablePropertiesKHR;
    vkGetPipelineExecutableStatisticsKHR: PFN_vkGetPipelineExecutableStatisticsKHR;
    vkGetPipelineExecutableInternalRepresentationsKHR: PFN_vkGetPipelineExecutableInternalRepresentationsKHR;
    vkMapMemory2KHR: PFN_vkMapMemory2KHR;
    vkUnmapMemory2KHR: PFN_vkUnmapMemory2KHR;
    vkGetEncodedVideoSessionParametersKHR: PFN_vkGetEncodedVideoSessionParametersKHR;
    vkCmdEncodeVideoKHR: PFN_vkCmdEncodeVideoKHR;
    vkCmdSetEvent2KHR: PFN_vkCmdSetEvent2KHR;
    vkCmdResetEvent2KHR: PFN_vkCmdResetEvent2KHR;
    vkCmdWaitEvents2KHR: PFN_vkCmdWaitEvents2KHR;
    vkCmdPipelineBarrier2KHR: PFN_vkCmdPipelineBarrier2KHR;
    vkCmdWriteTimestamp2KHR: PFN_vkCmdWriteTimestamp2KHR;
    vkQueueSubmit2KHR: PFN_vkQueueSubmit2KHR;
    vkCmdCopyBuffer2KHR: PFN_vkCmdCopyBuffer2KHR;
    vkCmdCopyImage2KHR: PFN_vkCmdCopyImage2KHR;
    vkCmdCopyBufferToImage2KHR: PFN_vkCmdCopyBufferToImage2KHR;
    vkCmdCopyImageToBuffer2KHR: PFN_vkCmdCopyImageToBuffer2KHR;
    vkCmdBlitImage2KHR: PFN_vkCmdBlitImage2KHR;
    vkCmdResolveImage2KHR: PFN_vkCmdResolveImage2KHR;
    vkCmdTraceRaysIndirect2KHR: PFN_vkCmdTraceRaysIndirect2KHR;
    vkGetDeviceBufferMemoryRequirementsKHR: PFN_vkGetDeviceBufferMemoryRequirementsKHR;
    vkGetDeviceImageMemoryRequirementsKHR: PFN_vkGetDeviceImageMemoryRequirementsKHR;
    vkGetDeviceImageSparseMemoryRequirementsKHR: PFN_vkGetDeviceImageSparseMemoryRequirementsKHR;
    vkCmdBindIndexBuffer2KHR: PFN_vkCmdBindIndexBuffer2KHR;
    vkGetRenderingAreaGranularityKHR: PFN_vkGetRenderingAreaGranularityKHR;
    vkGetDeviceImageSubresourceLayoutKHR: PFN_vkGetDeviceImageSubresourceLayoutKHR;
    vkGetImageSubresourceLayout2KHR: PFN_vkGetImageSubresourceLayout2KHR;
    vkCreatePipelineBinariesKHR: PFN_vkCreatePipelineBinariesKHR;
    vkDestroyPipelineBinaryKHR: PFN_vkDestroyPipelineBinaryKHR;
    vkGetPipelineKeyKHR: PFN_vkGetPipelineKeyKHR;
    vkGetPipelineBinaryDataKHR: PFN_vkGetPipelineBinaryDataKHR;
    vkReleaseCapturedPipelineDataKHR: PFN_vkReleaseCapturedPipelineDataKHR;
    vkCmdSetLineStippleKHR: PFN_vkCmdSetLineStippleKHR;
    vkGetCalibratedTimestampsKHR: PFN_vkGetCalibratedTimestampsKHR;
    vkCmdBindDescriptorSets2KHR: PFN_vkCmdBindDescriptorSets2KHR;
    vkCmdPushConstants2KHR: PFN_vkCmdPushConstants2KHR;
    vkCmdPushDescriptorSet2KHR: PFN_vkCmdPushDescriptorSet2KHR;
    vkCmdPushDescriptorSetWithTemplate2KHR: PFN_vkCmdPushDescriptorSetWithTemplate2KHR;
    vkCmdSetDescriptorBufferOffsets2EXT: PFN_vkCmdSetDescriptorBufferOffsets2EXT;
    vkCmdBindDescriptorBufferEmbeddedSamplers2EXT: PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
    vkDebugMarkerSetObjectTagEXT: PFN_vkDebugMarkerSetObjectTagEXT;
    vkDebugMarkerSetObjectNameEXT: PFN_vkDebugMarkerSetObjectNameEXT;
    vkCmdDebugMarkerBeginEXT: PFN_vkCmdDebugMarkerBeginEXT;
    vkCmdDebugMarkerEndEXT: PFN_vkCmdDebugMarkerEndEXT;
    vkCmdDebugMarkerInsertEXT: PFN_vkCmdDebugMarkerInsertEXT;
    vkCmdBindTransformFeedbackBuffersEXT: PFN_vkCmdBindTransformFeedbackBuffersEXT;
    vkCmdBeginTransformFeedbackEXT: PFN_vkCmdBeginTransformFeedbackEXT;
    vkCmdEndTransformFeedbackEXT: PFN_vkCmdEndTransformFeedbackEXT;
    vkCmdBeginQueryIndexedEXT: PFN_vkCmdBeginQueryIndexedEXT;
    vkCmdEndQueryIndexedEXT: PFN_vkCmdEndQueryIndexedEXT;
    vkCmdDrawIndirectByteCountEXT: PFN_vkCmdDrawIndirectByteCountEXT;
    vkCreateCuModuleNVX: PFN_vkCreateCuModuleNVX;
    vkCreateCuFunctionNVX: PFN_vkCreateCuFunctionNVX;
    vkDestroyCuModuleNVX: PFN_vkDestroyCuModuleNVX;
    vkDestroyCuFunctionNVX: PFN_vkDestroyCuFunctionNVX;
    vkCmdCuLaunchKernelNVX: PFN_vkCmdCuLaunchKernelNVX;
    vkGetImageViewHandleNVX: PFN_vkGetImageViewHandleNVX;
    vkGetImageViewHandle64NVX: PFN_vkGetImageViewHandle64NVX;
    vkGetImageViewAddressNVX: PFN_vkGetImageViewAddressNVX;
    vkCmdDrawIndirectCountAMD: PFN_vkCmdDrawIndirectCountAMD;
    vkCmdDrawIndexedIndirectCountAMD: PFN_vkCmdDrawIndexedIndirectCountAMD;
    vkGetShaderInfoAMD: PFN_vkGetShaderInfoAMD;
    vkCmdBeginConditionalRenderingEXT: PFN_vkCmdBeginConditionalRenderingEXT;
    vkCmdEndConditionalRenderingEXT: PFN_vkCmdEndConditionalRenderingEXT;
    vkCmdSetViewportWScalingNV: PFN_vkCmdSetViewportWScalingNV;
    vkDisplayPowerControlEXT: PFN_vkDisplayPowerControlEXT;
    vkRegisterDeviceEventEXT: PFN_vkRegisterDeviceEventEXT;
    vkRegisterDisplayEventEXT: PFN_vkRegisterDisplayEventEXT;
    vkGetSwapchainCounterEXT: PFN_vkGetSwapchainCounterEXT;
    vkGetRefreshCycleDurationGOOGLE: PFN_vkGetRefreshCycleDurationGOOGLE;
    vkGetPastPresentationTimingGOOGLE: PFN_vkGetPastPresentationTimingGOOGLE;
    vkCmdSetDiscardRectangleEXT: PFN_vkCmdSetDiscardRectangleEXT;
    vkCmdSetDiscardRectangleEnableEXT: PFN_vkCmdSetDiscardRectangleEnableEXT;
    vkCmdSetDiscardRectangleModeEXT: PFN_vkCmdSetDiscardRectangleModeEXT;
    vkSetHdrMetadataEXT: PFN_vkSetHdrMetadataEXT;
    vkSetDebugUtilsObjectNameEXT: PFN_vkSetDebugUtilsObjectNameEXT;
    vkSetDebugUtilsObjectTagEXT: PFN_vkSetDebugUtilsObjectTagEXT;
    vkQueueBeginDebugUtilsLabelEXT: PFN_vkQueueBeginDebugUtilsLabelEXT;
    vkQueueEndDebugUtilsLabelEXT: PFN_vkQueueEndDebugUtilsLabelEXT;
    vkQueueInsertDebugUtilsLabelEXT: PFN_vkQueueInsertDebugUtilsLabelEXT;
    vkCmdBeginDebugUtilsLabelEXT: PFN_vkCmdBeginDebugUtilsLabelEXT;
    vkCmdEndDebugUtilsLabelEXT: PFN_vkCmdEndDebugUtilsLabelEXT;
    vkCmdInsertDebugUtilsLabelEXT: PFN_vkCmdInsertDebugUtilsLabelEXT;
    vkCmdSetSampleLocationsEXT: PFN_vkCmdSetSampleLocationsEXT;
    vkGetImageDrmFormatModifierPropertiesEXT: PFN_vkGetImageDrmFormatModifierPropertiesEXT;
    vkCreateValidationCacheEXT: PFN_vkCreateValidationCacheEXT;
    vkDestroyValidationCacheEXT: PFN_vkDestroyValidationCacheEXT;
    vkMergeValidationCachesEXT: PFN_vkMergeValidationCachesEXT;
    vkGetValidationCacheDataEXT: PFN_vkGetValidationCacheDataEXT;
    vkCmdBindShadingRateImageNV: PFN_vkCmdBindShadingRateImageNV;
    vkCmdSetViewportShadingRatePaletteNV: PFN_vkCmdSetViewportShadingRatePaletteNV;
    vkCmdSetCoarseSampleOrderNV: PFN_vkCmdSetCoarseSampleOrderNV;
    vkCreateAccelerationStructureNV: PFN_vkCreateAccelerationStructureNV;
    vkDestroyAccelerationStructureNV: PFN_vkDestroyAccelerationStructureNV;
    vkGetAccelerationStructureMemoryRequirementsNV: PFN_vkGetAccelerationStructureMemoryRequirementsNV;
    vkBindAccelerationStructureMemoryNV: PFN_vkBindAccelerationStructureMemoryNV;
    vkCmdBuildAccelerationStructureNV: PFN_vkCmdBuildAccelerationStructureNV;
    vkCmdCopyAccelerationStructureNV: PFN_vkCmdCopyAccelerationStructureNV;
    vkCmdTraceRaysNV: PFN_vkCmdTraceRaysNV;
    vkCreateRayTracingPipelinesNV: PFN_vkCreateRayTracingPipelinesNV;
    vkGetRayTracingShaderGroupHandlesKHR: PFN_vkGetRayTracingShaderGroupHandlesKHR;
    vkGetRayTracingShaderGroupHandlesNV: PFN_vkGetRayTracingShaderGroupHandlesNV;
    vkGetAccelerationStructureHandleNV: PFN_vkGetAccelerationStructureHandleNV;
    vkCmdWriteAccelerationStructuresPropertiesNV: PFN_vkCmdWriteAccelerationStructuresPropertiesNV;
    vkCompileDeferredNV: PFN_vkCompileDeferredNV;
    vkGetMemoryHostPointerPropertiesEXT: PFN_vkGetMemoryHostPointerPropertiesEXT;
    vkCmdWriteBufferMarkerAMD: PFN_vkCmdWriteBufferMarkerAMD;
    vkCmdWriteBufferMarker2AMD: PFN_vkCmdWriteBufferMarker2AMD;
    vkGetCalibratedTimestampsEXT: PFN_vkGetCalibratedTimestampsEXT;
    vkCmdDrawMeshTasksNV: PFN_vkCmdDrawMeshTasksNV;
    vkCmdDrawMeshTasksIndirectNV: PFN_vkCmdDrawMeshTasksIndirectNV;
    vkCmdDrawMeshTasksIndirectCountNV: PFN_vkCmdDrawMeshTasksIndirectCountNV;
    vkCmdSetExclusiveScissorEnableNV: PFN_vkCmdSetExclusiveScissorEnableNV;
    vkCmdSetExclusiveScissorNV: PFN_vkCmdSetExclusiveScissorNV;
    vkCmdSetCheckpointNV: PFN_vkCmdSetCheckpointNV;
    vkGetQueueCheckpointDataNV: PFN_vkGetQueueCheckpointDataNV;
    vkGetQueueCheckpointData2NV: PFN_vkGetQueueCheckpointData2NV;
    vkInitializePerformanceApiINTEL: PFN_vkInitializePerformanceApiINTEL;
    vkUninitializePerformanceApiINTEL: PFN_vkUninitializePerformanceApiINTEL;
    vkCmdSetPerformanceMarkerINTEL: PFN_vkCmdSetPerformanceMarkerINTEL;
    vkCmdSetPerformanceStreamMarkerINTEL: PFN_vkCmdSetPerformanceStreamMarkerINTEL;
    vkCmdSetPerformanceOverrideINTEL: PFN_vkCmdSetPerformanceOverrideINTEL;
    vkAcquirePerformanceConfigurationINTEL: PFN_vkAcquirePerformanceConfigurationINTEL;
    vkReleasePerformanceConfigurationINTEL: PFN_vkReleasePerformanceConfigurationINTEL;
    vkQueueSetPerformanceConfigurationINTEL: PFN_vkQueueSetPerformanceConfigurationINTEL;
    vkGetPerformanceParameterINTEL: PFN_vkGetPerformanceParameterINTEL;
    vkSetLocalDimmingAMD: PFN_vkSetLocalDimmingAMD;
    vkGetBufferDeviceAddressEXT: PFN_vkGetBufferDeviceAddressEXT;
    vkCmdSetLineStippleEXT: PFN_vkCmdSetLineStippleEXT;
    vkResetQueryPoolEXT: PFN_vkResetQueryPoolEXT;
    vkCmdSetCullModeEXT: PFN_vkCmdSetCullModeEXT;
    vkCmdSetFrontFaceEXT: PFN_vkCmdSetFrontFaceEXT;
    vkCmdSetPrimitiveTopologyEXT: PFN_vkCmdSetPrimitiveTopologyEXT;
    vkCmdSetViewportWithCountEXT: PFN_vkCmdSetViewportWithCountEXT;
    vkCmdSetScissorWithCountEXT: PFN_vkCmdSetScissorWithCountEXT;
    vkCmdBindVertexBuffers2EXT: PFN_vkCmdBindVertexBuffers2EXT;
    vkCmdSetDepthTestEnableEXT: PFN_vkCmdSetDepthTestEnableEXT;
    vkCmdSetDepthWriteEnableEXT: PFN_vkCmdSetDepthWriteEnableEXT;
    vkCmdSetDepthCompareOpEXT: PFN_vkCmdSetDepthCompareOpEXT;
    vkCmdSetDepthBoundsTestEnableEXT: PFN_vkCmdSetDepthBoundsTestEnableEXT;
    vkCmdSetStencilTestEnableEXT: PFN_vkCmdSetStencilTestEnableEXT;
    vkCmdSetStencilOpEXT: PFN_vkCmdSetStencilOpEXT;
    vkCopyMemoryToImageEXT: PFN_vkCopyMemoryToImageEXT;
    vkCopyImageToMemoryEXT: PFN_vkCopyImageToMemoryEXT;
    vkCopyImageToImageEXT: PFN_vkCopyImageToImageEXT;
    vkTransitionImageLayoutEXT: PFN_vkTransitionImageLayoutEXT;
    vkGetImageSubresourceLayout2EXT: PFN_vkGetImageSubresourceLayout2EXT;
    vkReleaseSwapchainImagesEXT: PFN_vkReleaseSwapchainImagesEXT;
    vkGetGeneratedCommandsMemoryRequirementsNV: PFN_vkGetGeneratedCommandsMemoryRequirementsNV;
    vkCmdPreprocessGeneratedCommandsNV: PFN_vkCmdPreprocessGeneratedCommandsNV;
    vkCmdExecuteGeneratedCommandsNV: PFN_vkCmdExecuteGeneratedCommandsNV;
    vkCmdBindPipelineShaderGroupNV: PFN_vkCmdBindPipelineShaderGroupNV;
    vkCreateIndirectCommandsLayoutNV: PFN_vkCreateIndirectCommandsLayoutNV;
    vkDestroyIndirectCommandsLayoutNV: PFN_vkDestroyIndirectCommandsLayoutNV;
    vkCmdSetDepthBias2EXT: PFN_vkCmdSetDepthBias2EXT;
    vkCreatePrivateDataSlotEXT: PFN_vkCreatePrivateDataSlotEXT;
    vkDestroyPrivateDataSlotEXT: PFN_vkDestroyPrivateDataSlotEXT;
    vkSetPrivateDataEXT: PFN_vkSetPrivateDataEXT;
    vkGetPrivateDataEXT: PFN_vkGetPrivateDataEXT;
    vkCreateCudaModuleNV: PFN_vkCreateCudaModuleNV;
    vkGetCudaModuleCacheNV: PFN_vkGetCudaModuleCacheNV;
    vkCreateCudaFunctionNV: PFN_vkCreateCudaFunctionNV;
    vkDestroyCudaModuleNV: PFN_vkDestroyCudaModuleNV;
    vkDestroyCudaFunctionNV: PFN_vkDestroyCudaFunctionNV;
    vkCmdCudaLaunchKernelNV: PFN_vkCmdCudaLaunchKernelNV;
    vkCmdDispatchTileQCOM: PFN_vkCmdDispatchTileQCOM;
    vkCmdBeginPerTileExecutionQCOM: PFN_vkCmdBeginPerTileExecutionQCOM;
    vkCmdEndPerTileExecutionQCOM: PFN_vkCmdEndPerTileExecutionQCOM;
    vkGetDescriptorSetLayoutSizeEXT: PFN_vkGetDescriptorSetLayoutSizeEXT;
    vkGetDescriptorSetLayoutBindingOffsetEXT: PFN_vkGetDescriptorSetLayoutBindingOffsetEXT;
    vkGetDescriptorEXT: PFN_vkGetDescriptorEXT;
    vkCmdBindDescriptorBuffersEXT: PFN_vkCmdBindDescriptorBuffersEXT;
    vkCmdSetDescriptorBufferOffsetsEXT: PFN_vkCmdSetDescriptorBufferOffsetsEXT;
    vkCmdBindDescriptorBufferEmbeddedSamplersEXT: PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
    vkGetBufferOpaqueCaptureDescriptorDataEXT: PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT;
    vkGetImageOpaqueCaptureDescriptorDataEXT: PFN_vkGetImageOpaqueCaptureDescriptorDataEXT;
    vkGetImageViewOpaqueCaptureDescriptorDataEXT: PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT;
    vkGetSamplerOpaqueCaptureDescriptorDataEXT: PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT;
    vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT: PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
    vkCmdSetFragmentShadingRateEnumNV: PFN_vkCmdSetFragmentShadingRateEnumNV;
    vkGetDeviceFaultInfoEXT: PFN_vkGetDeviceFaultInfoEXT;
    vkCmdSetVertexInputEXT: PFN_vkCmdSetVertexInputEXT;
    vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI: PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
    vkCmdSubpassShadingHUAWEI: PFN_vkCmdSubpassShadingHUAWEI;
    vkCmdBindInvocationMaskHUAWEI: PFN_vkCmdBindInvocationMaskHUAWEI;
    vkGetMemoryRemoteAddressNV: PFN_vkGetMemoryRemoteAddressNV;
    vkGetPipelinePropertiesEXT: PFN_vkGetPipelinePropertiesEXT;
    vkCmdSetPatchControlPointsEXT: PFN_vkCmdSetPatchControlPointsEXT;
    vkCmdSetRasterizerDiscardEnableEXT: PFN_vkCmdSetRasterizerDiscardEnableEXT;
    vkCmdSetDepthBiasEnableEXT: PFN_vkCmdSetDepthBiasEnableEXT;
    vkCmdSetLogicOpEXT: PFN_vkCmdSetLogicOpEXT;
    vkCmdSetPrimitiveRestartEnableEXT: PFN_vkCmdSetPrimitiveRestartEnableEXT;
    vkCmdSetColorWriteEnableEXT: PFN_vkCmdSetColorWriteEnableEXT;
    vkCmdDrawMultiEXT: PFN_vkCmdDrawMultiEXT;
    vkCmdDrawMultiIndexedEXT: PFN_vkCmdDrawMultiIndexedEXT;
    vkCreateMicromapEXT: PFN_vkCreateMicromapEXT;
    vkDestroyMicromapEXT: PFN_vkDestroyMicromapEXT;
    vkCmdBuildMicromapsEXT: PFN_vkCmdBuildMicromapsEXT;
    vkBuildMicromapsEXT: PFN_vkBuildMicromapsEXT;
    vkCopyMicromapEXT: PFN_vkCopyMicromapEXT;
    vkCopyMicromapToMemoryEXT: PFN_vkCopyMicromapToMemoryEXT;
    vkCopyMemoryToMicromapEXT: PFN_vkCopyMemoryToMicromapEXT;
    vkWriteMicromapsPropertiesEXT: PFN_vkWriteMicromapsPropertiesEXT;
    vkCmdCopyMicromapEXT: PFN_vkCmdCopyMicromapEXT;
    vkCmdCopyMicromapToMemoryEXT: PFN_vkCmdCopyMicromapToMemoryEXT;
    vkCmdCopyMemoryToMicromapEXT: PFN_vkCmdCopyMemoryToMicromapEXT;
    vkCmdWriteMicromapsPropertiesEXT: PFN_vkCmdWriteMicromapsPropertiesEXT;
    vkGetDeviceMicromapCompatibilityEXT: PFN_vkGetDeviceMicromapCompatibilityEXT;
    vkGetMicromapBuildSizesEXT: PFN_vkGetMicromapBuildSizesEXT;
    vkCmdDrawClusterHUAWEI: PFN_vkCmdDrawClusterHUAWEI;
    vkCmdDrawClusterIndirectHUAWEI: PFN_vkCmdDrawClusterIndirectHUAWEI;
    vkSetDeviceMemoryPriorityEXT: PFN_vkSetDeviceMemoryPriorityEXT;
    vkGetDescriptorSetLayoutHostMappingInfoVALVE: PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE;
    vkGetDescriptorSetHostMappingVALVE: PFN_vkGetDescriptorSetHostMappingVALVE;
    vkCmdCopyMemoryIndirectNV: PFN_vkCmdCopyMemoryIndirectNV;
    vkCmdCopyMemoryToImageIndirectNV: PFN_vkCmdCopyMemoryToImageIndirectNV;
    vkCmdDecompressMemoryNV: PFN_vkCmdDecompressMemoryNV;
    vkCmdDecompressMemoryIndirectCountNV: PFN_vkCmdDecompressMemoryIndirectCountNV;
    vkGetPipelineIndirectMemoryRequirementsNV: PFN_vkGetPipelineIndirectMemoryRequirementsNV;
    vkCmdUpdatePipelineIndirectBufferNV: PFN_vkCmdUpdatePipelineIndirectBufferNV;
    vkGetPipelineIndirectDeviceAddressNV: PFN_vkGetPipelineIndirectDeviceAddressNV;
    vkCmdSetDepthClampEnableEXT: PFN_vkCmdSetDepthClampEnableEXT;
    vkCmdSetPolygonModeEXT: PFN_vkCmdSetPolygonModeEXT;
    vkCmdSetRasterizationSamplesEXT: PFN_vkCmdSetRasterizationSamplesEXT;
    vkCmdSetSampleMaskEXT: PFN_vkCmdSetSampleMaskEXT;
    vkCmdSetAlphaToCoverageEnableEXT: PFN_vkCmdSetAlphaToCoverageEnableEXT;
    vkCmdSetAlphaToOneEnableEXT: PFN_vkCmdSetAlphaToOneEnableEXT;
    vkCmdSetLogicOpEnableEXT: PFN_vkCmdSetLogicOpEnableEXT;
    vkCmdSetColorBlendEnableEXT: PFN_vkCmdSetColorBlendEnableEXT;
    vkCmdSetColorBlendEquationEXT: PFN_vkCmdSetColorBlendEquationEXT;
    vkCmdSetColorWriteMaskEXT: PFN_vkCmdSetColorWriteMaskEXT;
    vkCmdSetTessellationDomainOriginEXT: PFN_vkCmdSetTessellationDomainOriginEXT;
    vkCmdSetRasterizationStreamEXT: PFN_vkCmdSetRasterizationStreamEXT;
    vkCmdSetConservativeRasterizationModeEXT: PFN_vkCmdSetConservativeRasterizationModeEXT;
    vkCmdSetExtraPrimitiveOverestimationSizeEXT: PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT;
    vkCmdSetDepthClipEnableEXT: PFN_vkCmdSetDepthClipEnableEXT;
    vkCmdSetSampleLocationsEnableEXT: PFN_vkCmdSetSampleLocationsEnableEXT;
    vkCmdSetColorBlendAdvancedEXT: PFN_vkCmdSetColorBlendAdvancedEXT;
    vkCmdSetProvokingVertexModeEXT: PFN_vkCmdSetProvokingVertexModeEXT;
    vkCmdSetLineRasterizationModeEXT: PFN_vkCmdSetLineRasterizationModeEXT;
    vkCmdSetLineStippleEnableEXT: PFN_vkCmdSetLineStippleEnableEXT;
    vkCmdSetDepthClipNegativeOneToOneEXT: PFN_vkCmdSetDepthClipNegativeOneToOneEXT;
    vkCmdSetViewportWScalingEnableNV: PFN_vkCmdSetViewportWScalingEnableNV;
    vkCmdSetViewportSwizzleNV: PFN_vkCmdSetViewportSwizzleNV;
    vkCmdSetCoverageToColorEnableNV: PFN_vkCmdSetCoverageToColorEnableNV;
    vkCmdSetCoverageToColorLocationNV: PFN_vkCmdSetCoverageToColorLocationNV;
    vkCmdSetCoverageModulationModeNV: PFN_vkCmdSetCoverageModulationModeNV;
    vkCmdSetCoverageModulationTableEnableNV: PFN_vkCmdSetCoverageModulationTableEnableNV;
    vkCmdSetCoverageModulationTableNV: PFN_vkCmdSetCoverageModulationTableNV;
    vkCmdSetShadingRateImageEnableNV: PFN_vkCmdSetShadingRateImageEnableNV;
    vkCmdSetRepresentativeFragmentTestEnableNV: PFN_vkCmdSetRepresentativeFragmentTestEnableNV;
    vkCmdSetCoverageReductionModeNV: PFN_vkCmdSetCoverageReductionModeNV;
    vkGetShaderModuleIdentifierEXT: PFN_vkGetShaderModuleIdentifierEXT;
    vkGetShaderModuleCreateInfoIdentifierEXT: PFN_vkGetShaderModuleCreateInfoIdentifierEXT;
    vkCreateOpticalFlowSessionNV: PFN_vkCreateOpticalFlowSessionNV;
    vkDestroyOpticalFlowSessionNV: PFN_vkDestroyOpticalFlowSessionNV;
    vkBindOpticalFlowSessionImageNV: PFN_vkBindOpticalFlowSessionImageNV;
    vkCmdOpticalFlowExecuteNV: PFN_vkCmdOpticalFlowExecuteNV;
    vkAntiLagUpdateAMD: PFN_vkAntiLagUpdateAMD;
    vkCreateShadersEXT: PFN_vkCreateShadersEXT;
    vkDestroyShaderEXT: PFN_vkDestroyShaderEXT;
    vkGetShaderBinaryDataEXT: PFN_vkGetShaderBinaryDataEXT;
    vkCmdBindShadersEXT: PFN_vkCmdBindShadersEXT;
    vkCmdSetDepthClampRangeEXT: PFN_vkCmdSetDepthClampRangeEXT;
    vkGetFramebufferTilePropertiesQCOM: PFN_vkGetFramebufferTilePropertiesQCOM;
    vkGetDynamicRenderingTilePropertiesQCOM: PFN_vkGetDynamicRenderingTilePropertiesQCOM;
    vkConvertCooperativeVectorMatrixNV: PFN_vkConvertCooperativeVectorMatrixNV;
    vkCmdConvertCooperativeVectorMatrixNV: PFN_vkCmdConvertCooperativeVectorMatrixNV;
    vkSetLatencySleepModeNV: PFN_vkSetLatencySleepModeNV;
    vkLatencySleepNV: PFN_vkLatencySleepNV;
    vkSetLatencyMarkerNV: PFN_vkSetLatencyMarkerNV;
    vkGetLatencyTimingsNV: PFN_vkGetLatencyTimingsNV;
    vkQueueNotifyOutOfBandNV: PFN_vkQueueNotifyOutOfBandNV;
    vkCmdSetAttachmentFeedbackLoopEnableEXT: PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT;
    vkCmdBindTileMemoryQCOM: PFN_vkCmdBindTileMemoryQCOM;
    vkCreateExternalComputeQueueNV: PFN_vkCreateExternalComputeQueueNV;
    vkDestroyExternalComputeQueueNV: PFN_vkDestroyExternalComputeQueueNV;
    vkGetClusterAccelerationStructureBuildSizesNV: PFN_vkGetClusterAccelerationStructureBuildSizesNV;
    vkCmdBuildClusterAccelerationStructureIndirectNV: PFN_vkCmdBuildClusterAccelerationStructureIndirectNV;
    vkGetPartitionedAccelerationStructuresBuildSizesNV: PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV;
    vkCmdBuildPartitionedAccelerationStructuresNV: PFN_vkCmdBuildPartitionedAccelerationStructuresNV;
    vkGetGeneratedCommandsMemoryRequirementsEXT: PFN_vkGetGeneratedCommandsMemoryRequirementsEXT;
    vkCmdPreprocessGeneratedCommandsEXT: PFN_vkCmdPreprocessGeneratedCommandsEXT;
    vkCmdExecuteGeneratedCommandsEXT: PFN_vkCmdExecuteGeneratedCommandsEXT;
    vkCreateIndirectCommandsLayoutEXT: PFN_vkCreateIndirectCommandsLayoutEXT;
    vkDestroyIndirectCommandsLayoutEXT: PFN_vkDestroyIndirectCommandsLayoutEXT;
    vkCreateIndirectExecutionSetEXT: PFN_vkCreateIndirectExecutionSetEXT;
    vkDestroyIndirectExecutionSetEXT: PFN_vkDestroyIndirectExecutionSetEXT;
    vkUpdateIndirectExecutionSetPipelineEXT: PFN_vkUpdateIndirectExecutionSetPipelineEXT;
    vkUpdateIndirectExecutionSetShaderEXT: PFN_vkUpdateIndirectExecutionSetShaderEXT;
    vkCmdEndRendering2EXT: PFN_vkCmdEndRendering2EXT;
    vkCreateAccelerationStructureKHR: PFN_vkCreateAccelerationStructureKHR;
    vkDestroyAccelerationStructureKHR: PFN_vkDestroyAccelerationStructureKHR;
    vkCmdBuildAccelerationStructuresKHR: PFN_vkCmdBuildAccelerationStructuresKHR;
    vkCmdBuildAccelerationStructuresIndirectKHR: PFN_vkCmdBuildAccelerationStructuresIndirectKHR;
    vkBuildAccelerationStructuresKHR: PFN_vkBuildAccelerationStructuresKHR;
    vkCopyAccelerationStructureKHR: PFN_vkCopyAccelerationStructureKHR;
    vkCopyAccelerationStructureToMemoryKHR: PFN_vkCopyAccelerationStructureToMemoryKHR;
    vkCopyMemoryToAccelerationStructureKHR: PFN_vkCopyMemoryToAccelerationStructureKHR;
    vkWriteAccelerationStructuresPropertiesKHR: PFN_vkWriteAccelerationStructuresPropertiesKHR;
    vkCmdCopyAccelerationStructureKHR: PFN_vkCmdCopyAccelerationStructureKHR;
    vkCmdCopyAccelerationStructureToMemoryKHR: PFN_vkCmdCopyAccelerationStructureToMemoryKHR;
    vkCmdCopyMemoryToAccelerationStructureKHR: PFN_vkCmdCopyMemoryToAccelerationStructureKHR;
    vkGetAccelerationStructureDeviceAddressKHR: PFN_vkGetAccelerationStructureDeviceAddressKHR;
    vkCmdWriteAccelerationStructuresPropertiesKHR: PFN_vkCmdWriteAccelerationStructuresPropertiesKHR;
    vkGetDeviceAccelerationStructureCompatibilityKHR: PFN_vkGetDeviceAccelerationStructureCompatibilityKHR;
    vkGetAccelerationStructureBuildSizesKHR: PFN_vkGetAccelerationStructureBuildSizesKHR;
    vkCmdTraceRaysKHR: PFN_vkCmdTraceRaysKHR;
    vkCreateRayTracingPipelinesKHR: PFN_vkCreateRayTracingPipelinesKHR;
    vkGetRayTracingCaptureReplayShaderGroupHandlesKHR: PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
    vkCmdTraceRaysIndirectKHR: PFN_vkCmdTraceRaysIndirectKHR;
    vkGetRayTracingShaderGroupStackSizeKHR: PFN_vkGetRayTracingShaderGroupStackSizeKHR;
    vkCmdSetRayTracingPipelineStackSizeKHR: PFN_vkCmdSetRayTracingPipelineStackSizeKHR;
    vkCmdDrawMeshTasksEXT: PFN_vkCmdDrawMeshTasksEXT;
    vkCmdDrawMeshTasksIndirectEXT: PFN_vkCmdDrawMeshTasksIndirectEXT;
    vkCmdDrawMeshTasksIndirectCountEXT: PFN_vkCmdDrawMeshTasksIndirectCountEXT;
    vkGetAndroidHardwareBufferPropertiesANDROID: PFN_vkGetAndroidHardwareBufferPropertiesANDROID;
    vkGetMemoryAndroidHardwareBufferANDROID: PFN_vkGetMemoryAndroidHardwareBufferANDROID;
    vkCreateExecutionGraphPipelinesAMDX: PFN_vkCreateExecutionGraphPipelinesAMDX;
    vkGetExecutionGraphPipelineScratchSizeAMDX: PFN_vkGetExecutionGraphPipelineScratchSizeAMDX;
    vkGetExecutionGraphPipelineNodeIndexAMDX: PFN_vkGetExecutionGraphPipelineNodeIndexAMDX;
    vkCmdInitializeGraphScratchMemoryAMDX: PFN_vkCmdInitializeGraphScratchMemoryAMDX;
    vkCmdDispatchGraphAMDX: PFN_vkCmdDispatchGraphAMDX;
    vkCmdDispatchGraphIndirectAMDX: PFN_vkCmdDispatchGraphIndirectAMDX;
    vkCmdDispatchGraphIndirectCountAMDX: PFN_vkCmdDispatchGraphIndirectCountAMDX;
};

load_proc_addresses_vtable :: (device: VkDevice, vtable: *Device_VTable) {
    vtable.vkDestroyDevice = xx vkGetDeviceProcAddr(device, "vkDestroyDevice");
    vtable.vkGetDeviceQueue = xx vkGetDeviceProcAddr(device, "vkGetDeviceQueue");
    vtable.vkQueueSubmit = xx vkGetDeviceProcAddr(device, "vkQueueSubmit");
    vtable.vkQueueWaitIdle = xx vkGetDeviceProcAddr(device, "vkQueueWaitIdle");
    vtable.vkDeviceWaitIdle = xx vkGetDeviceProcAddr(device, "vkDeviceWaitIdle");
    vtable.vkAllocateMemory = xx vkGetDeviceProcAddr(device, "vkAllocateMemory");
    vtable.vkFreeMemory = xx vkGetDeviceProcAddr(device, "vkFreeMemory");
    vtable.vkMapMemory = xx vkGetDeviceProcAddr(device, "vkMapMemory");
    vtable.vkUnmapMemory = xx vkGetDeviceProcAddr(device, "vkUnmapMemory");
    vtable.vkFlushMappedMemoryRanges = xx vkGetDeviceProcAddr(device, "vkFlushMappedMemoryRanges");
    vtable.vkInvalidateMappedMemoryRanges = xx vkGetDeviceProcAddr(device, "vkInvalidateMappedMemoryRanges");
    vtable.vkGetDeviceMemoryCommitment = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryCommitment");
    vtable.vkBindBufferMemory = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory");
    vtable.vkBindImageMemory = xx vkGetDeviceProcAddr(device, "vkBindImageMemory");
    vtable.vkGetBufferMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements");
    vtable.vkGetImageMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements");
    vtable.vkGetImageSparseMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements");
    vtable.vkQueueBindSparse = xx vkGetDeviceProcAddr(device, "vkQueueBindSparse");
    vtable.vkCreateFence = xx vkGetDeviceProcAddr(device, "vkCreateFence");
    vtable.vkDestroyFence = xx vkGetDeviceProcAddr(device, "vkDestroyFence");
    vtable.vkResetFences = xx vkGetDeviceProcAddr(device, "vkResetFences");
    vtable.vkGetFenceStatus = xx vkGetDeviceProcAddr(device, "vkGetFenceStatus");
    vtable.vkWaitForFences = xx vkGetDeviceProcAddr(device, "vkWaitForFences");
    vtable.vkCreateSemaphore = xx vkGetDeviceProcAddr(device, "vkCreateSemaphore");
    vtable.vkDestroySemaphore = xx vkGetDeviceProcAddr(device, "vkDestroySemaphore");
    vtable.vkCreateEvent = xx vkGetDeviceProcAddr(device, "vkCreateEvent");
    vtable.vkDestroyEvent = xx vkGetDeviceProcAddr(device, "vkDestroyEvent");
    vtable.vkGetEventStatus = xx vkGetDeviceProcAddr(device, "vkGetEventStatus");
    vtable.vkSetEvent = xx vkGetDeviceProcAddr(device, "vkSetEvent");
    vtable.vkResetEvent = xx vkGetDeviceProcAddr(device, "vkResetEvent");
    vtable.vkCreateQueryPool = xx vkGetDeviceProcAddr(device, "vkCreateQueryPool");
    vtable.vkDestroyQueryPool = xx vkGetDeviceProcAddr(device, "vkDestroyQueryPool");
    vtable.vkGetQueryPoolResults = xx vkGetDeviceProcAddr(device, "vkGetQueryPoolResults");
    vtable.vkCreateBuffer = xx vkGetDeviceProcAddr(device, "vkCreateBuffer");
    vtable.vkDestroyBuffer = xx vkGetDeviceProcAddr(device, "vkDestroyBuffer");
    vtable.vkCreateBufferView = xx vkGetDeviceProcAddr(device, "vkCreateBufferView");
    vtable.vkDestroyBufferView = xx vkGetDeviceProcAddr(device, "vkDestroyBufferView");
    vtable.vkCreateImage = xx vkGetDeviceProcAddr(device, "vkCreateImage");
    vtable.vkDestroyImage = xx vkGetDeviceProcAddr(device, "vkDestroyImage");
    vtable.vkGetImageSubresourceLayout = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout");
    vtable.vkCreateImageView = xx vkGetDeviceProcAddr(device, "vkCreateImageView");
    vtable.vkDestroyImageView = xx vkGetDeviceProcAddr(device, "vkDestroyImageView");
    vtable.vkCreateShaderModule = xx vkGetDeviceProcAddr(device, "vkCreateShaderModule");
    vtable.vkDestroyShaderModule = xx vkGetDeviceProcAddr(device, "vkDestroyShaderModule");
    vtable.vkCreatePipelineCache = xx vkGetDeviceProcAddr(device, "vkCreatePipelineCache");
    vtable.vkDestroyPipelineCache = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineCache");
    vtable.vkGetPipelineCacheData = xx vkGetDeviceProcAddr(device, "vkGetPipelineCacheData");
    vtable.vkMergePipelineCaches = xx vkGetDeviceProcAddr(device, "vkMergePipelineCaches");
    vtable.vkCreateGraphicsPipelines = xx vkGetDeviceProcAddr(device, "vkCreateGraphicsPipelines");
    vtable.vkCreateComputePipelines = xx vkGetDeviceProcAddr(device, "vkCreateComputePipelines");
    vtable.vkDestroyPipeline = xx vkGetDeviceProcAddr(device, "vkDestroyPipeline");
    vtable.vkCreatePipelineLayout = xx vkGetDeviceProcAddr(device, "vkCreatePipelineLayout");
    vtable.vkDestroyPipelineLayout = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineLayout");
    vtable.vkCreateSampler = xx vkGetDeviceProcAddr(device, "vkCreateSampler");
    vtable.vkDestroySampler = xx vkGetDeviceProcAddr(device, "vkDestroySampler");
    vtable.vkCreateDescriptorSetLayout = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorSetLayout");
    vtable.vkDestroyDescriptorSetLayout = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorSetLayout");
    vtable.vkCreateDescriptorPool = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorPool");
    vtable.vkDestroyDescriptorPool = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorPool");
    vtable.vkResetDescriptorPool = xx vkGetDeviceProcAddr(device, "vkResetDescriptorPool");
    vtable.vkAllocateDescriptorSets = xx vkGetDeviceProcAddr(device, "vkAllocateDescriptorSets");
    vtable.vkFreeDescriptorSets = xx vkGetDeviceProcAddr(device, "vkFreeDescriptorSets");
    vtable.vkUpdateDescriptorSets = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSets");
    vtable.vkCreateFramebuffer = xx vkGetDeviceProcAddr(device, "vkCreateFramebuffer");
    vtable.vkDestroyFramebuffer = xx vkGetDeviceProcAddr(device, "vkDestroyFramebuffer");
    vtable.vkCreateRenderPass = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass");
    vtable.vkDestroyRenderPass = xx vkGetDeviceProcAddr(device, "vkDestroyRenderPass");
    vtable.vkGetRenderAreaGranularity = xx vkGetDeviceProcAddr(device, "vkGetRenderAreaGranularity");
    vtable.vkCreateCommandPool = xx vkGetDeviceProcAddr(device, "vkCreateCommandPool");
    vtable.vkDestroyCommandPool = xx vkGetDeviceProcAddr(device, "vkDestroyCommandPool");
    vtable.vkResetCommandPool = xx vkGetDeviceProcAddr(device, "vkResetCommandPool");
    vtable.vkAllocateCommandBuffers = xx vkGetDeviceProcAddr(device, "vkAllocateCommandBuffers");
    vtable.vkFreeCommandBuffers = xx vkGetDeviceProcAddr(device, "vkFreeCommandBuffers");
    vtable.vkBeginCommandBuffer = xx vkGetDeviceProcAddr(device, "vkBeginCommandBuffer");
    vtable.vkEndCommandBuffer = xx vkGetDeviceProcAddr(device, "vkEndCommandBuffer");
    vtable.vkResetCommandBuffer = xx vkGetDeviceProcAddr(device, "vkResetCommandBuffer");
    vtable.vkCmdBindPipeline = xx vkGetDeviceProcAddr(device, "vkCmdBindPipeline");
    vtable.vkCmdSetViewport = xx vkGetDeviceProcAddr(device, "vkCmdSetViewport");
    vtable.vkCmdSetScissor = xx vkGetDeviceProcAddr(device, "vkCmdSetScissor");
    vtable.vkCmdSetLineWidth = xx vkGetDeviceProcAddr(device, "vkCmdSetLineWidth");
    vtable.vkCmdSetDepthBias = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBias");
    vtable.vkCmdSetBlendConstants = xx vkGetDeviceProcAddr(device, "vkCmdSetBlendConstants");
    vtable.vkCmdSetDepthBounds = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBounds");
    vtable.vkCmdSetStencilCompareMask = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilCompareMask");
    vtable.vkCmdSetStencilWriteMask = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilWriteMask");
    vtable.vkCmdSetStencilReference = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilReference");
    vtable.vkCmdBindDescriptorSets = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets");
    vtable.vkCmdBindIndexBuffer = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer");
    vtable.vkCmdBindVertexBuffers = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers");
    vtable.vkCmdDraw = xx vkGetDeviceProcAddr(device, "vkCmdDraw");
    vtable.vkCmdDrawIndexed = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexed");
    vtable.vkCmdDrawIndirect = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirect");
    vtable.vkCmdDrawIndexedIndirect = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirect");
    vtable.vkCmdDispatch = xx vkGetDeviceProcAddr(device, "vkCmdDispatch");
    vtable.vkCmdDispatchIndirect = xx vkGetDeviceProcAddr(device, "vkCmdDispatchIndirect");
    vtable.vkCmdCopyBuffer = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer");
    vtable.vkCmdCopyImage = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage");
    vtable.vkCmdBlitImage = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage");
    vtable.vkCmdCopyBufferToImage = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage");
    vtable.vkCmdCopyImageToBuffer = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer");
    vtable.vkCmdUpdateBuffer = xx vkGetDeviceProcAddr(device, "vkCmdUpdateBuffer");
    vtable.vkCmdFillBuffer = xx vkGetDeviceProcAddr(device, "vkCmdFillBuffer");
    vtable.vkCmdClearColorImage = xx vkGetDeviceProcAddr(device, "vkCmdClearColorImage");
    vtable.vkCmdClearDepthStencilImage = xx vkGetDeviceProcAddr(device, "vkCmdClearDepthStencilImage");
    vtable.vkCmdClearAttachments = xx vkGetDeviceProcAddr(device, "vkCmdClearAttachments");
    vtable.vkCmdResolveImage = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage");
    vtable.vkCmdSetEvent = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent");
    vtable.vkCmdResetEvent = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent");
    vtable.vkCmdWaitEvents = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents");
    vtable.vkCmdPipelineBarrier = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier");
    vtable.vkCmdBeginQuery = xx vkGetDeviceProcAddr(device, "vkCmdBeginQuery");
    vtable.vkCmdEndQuery = xx vkGetDeviceProcAddr(device, "vkCmdEndQuery");
    vtable.vkCmdResetQueryPool = xx vkGetDeviceProcAddr(device, "vkCmdResetQueryPool");
    vtable.vkCmdWriteTimestamp = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp");
    vtable.vkCmdCopyQueryPoolResults = xx vkGetDeviceProcAddr(device, "vkCmdCopyQueryPoolResults");
    vtable.vkCmdPushConstants = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants");
    vtable.vkCmdBeginRenderPass = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass");
    vtable.vkCmdNextSubpass = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass");
    vtable.vkCmdEndRenderPass = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass");
    vtable.vkCmdExecuteCommands = xx vkGetDeviceProcAddr(device, "vkCmdExecuteCommands");
    vtable.vkBindBufferMemory2 = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory2");
    vtable.vkBindImageMemory2 = xx vkGetDeviceProcAddr(device, "vkBindImageMemory2");
    vtable.vkGetDeviceGroupPeerMemoryFeatures = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeatures");
    vtable.vkCmdSetDeviceMask = xx vkGetDeviceProcAddr(device, "vkCmdSetDeviceMask");
    vtable.vkCmdDispatchBase = xx vkGetDeviceProcAddr(device, "vkCmdDispatchBase");
    vtable.vkGetImageMemoryRequirements2 = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2");
    vtable.vkGetBufferMemoryRequirements2 = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2");
    vtable.vkGetImageSparseMemoryRequirements2 = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2");
    vtable.vkTrimCommandPool = xx vkGetDeviceProcAddr(device, "vkTrimCommandPool");
    vtable.vkGetDeviceQueue2 = xx vkGetDeviceProcAddr(device, "vkGetDeviceQueue2");
    vtable.vkCreateSamplerYcbcrConversion = xx vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversion");
    vtable.vkDestroySamplerYcbcrConversion = xx vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversion");
    vtable.vkCreateDescriptorUpdateTemplate = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplate");
    vtable.vkDestroyDescriptorUpdateTemplate = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplate");
    vtable.vkUpdateDescriptorSetWithTemplate = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplate");
    vtable.vkGetDescriptorSetLayoutSupport = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSupport");
    vtable.vkCmdDrawIndirectCount = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCount");
    vtable.vkCmdDrawIndexedIndirectCount = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCount");
    vtable.vkCreateRenderPass2 = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass2");
    vtable.vkCmdBeginRenderPass2 = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass2");
    vtable.vkCmdNextSubpass2 = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass2");
    vtable.vkCmdEndRenderPass2 = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass2");
    vtable.vkResetQueryPool = xx vkGetDeviceProcAddr(device, "vkResetQueryPool");
    vtable.vkGetSemaphoreCounterValue = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreCounterValue");
    vtable.vkWaitSemaphores = xx vkGetDeviceProcAddr(device, "vkWaitSemaphores");
    vtable.vkSignalSemaphore = xx vkGetDeviceProcAddr(device, "vkSignalSemaphore");
    vtable.vkGetBufferDeviceAddress = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddress");
    vtable.vkGetBufferOpaqueCaptureAddress = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureAddress");
    vtable.vkGetDeviceMemoryOpaqueCaptureAddress = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryOpaqueCaptureAddress");
    vtable.vkCreatePrivateDataSlot = xx vkGetDeviceProcAddr(device, "vkCreatePrivateDataSlot");
    vtable.vkDestroyPrivateDataSlot = xx vkGetDeviceProcAddr(device, "vkDestroyPrivateDataSlot");
    vtable.vkSetPrivateData = xx vkGetDeviceProcAddr(device, "vkSetPrivateData");
    vtable.vkGetPrivateData = xx vkGetDeviceProcAddr(device, "vkGetPrivateData");
    vtable.vkCmdSetEvent2 = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent2");
    vtable.vkCmdResetEvent2 = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent2");
    vtable.vkCmdWaitEvents2 = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents2");
    vtable.vkCmdPipelineBarrier2 = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier2");
    vtable.vkCmdWriteTimestamp2 = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp2");
    vtable.vkQueueSubmit2 = xx vkGetDeviceProcAddr(device, "vkQueueSubmit2");
    vtable.vkCmdCopyBuffer2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer2");
    vtable.vkCmdCopyImage2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage2");
    vtable.vkCmdCopyBufferToImage2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage2");
    vtable.vkCmdCopyImageToBuffer2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer2");
    vtable.vkCmdBlitImage2 = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage2");
    vtable.vkCmdResolveImage2 = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage2");
    vtable.vkCmdBeginRendering = xx vkGetDeviceProcAddr(device, "vkCmdBeginRendering");
    vtable.vkCmdEndRendering = xx vkGetDeviceProcAddr(device, "vkCmdEndRendering");
    vtable.vkCmdSetCullMode = xx vkGetDeviceProcAddr(device, "vkCmdSetCullMode");
    vtable.vkCmdSetFrontFace = xx vkGetDeviceProcAddr(device, "vkCmdSetFrontFace");
    vtable.vkCmdSetPrimitiveTopology = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveTopology");
    vtable.vkCmdSetViewportWithCount = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWithCount");
    vtable.vkCmdSetScissorWithCount = xx vkGetDeviceProcAddr(device, "vkCmdSetScissorWithCount");
    vtable.vkCmdBindVertexBuffers2 = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers2");
    vtable.vkCmdSetDepthTestEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthTestEnable");
    vtable.vkCmdSetDepthWriteEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthWriteEnable");
    vtable.vkCmdSetDepthCompareOp = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthCompareOp");
    vtable.vkCmdSetDepthBoundsTestEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBoundsTestEnable");
    vtable.vkCmdSetStencilTestEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilTestEnable");
    vtable.vkCmdSetStencilOp = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilOp");
    vtable.vkCmdSetRasterizerDiscardEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizerDiscardEnable");
    vtable.vkCmdSetDepthBiasEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBiasEnable");
    vtable.vkCmdSetPrimitiveRestartEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveRestartEnable");
    vtable.vkGetDeviceBufferMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetDeviceBufferMemoryRequirements");
    vtable.vkGetDeviceImageMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageMemoryRequirements");
    vtable.vkGetDeviceImageSparseMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSparseMemoryRequirements");
    vtable.vkCmdSetLineStipple = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStipple");
    vtable.vkMapMemory2 = xx vkGetDeviceProcAddr(device, "vkMapMemory2");
    vtable.vkUnmapMemory2 = xx vkGetDeviceProcAddr(device, "vkUnmapMemory2");
    vtable.vkCmdBindIndexBuffer2 = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer2");
    vtable.vkGetRenderingAreaGranularity = xx vkGetDeviceProcAddr(device, "vkGetRenderingAreaGranularity");
    vtable.vkGetDeviceImageSubresourceLayout = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSubresourceLayout");
    vtable.vkGetImageSubresourceLayout2 = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2");
    vtable.vkCmdPushDescriptorSet = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet");
    vtable.vkCmdPushDescriptorSetWithTemplate = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate");
    vtable.vkCmdSetRenderingAttachmentLocations = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingAttachmentLocations");
    vtable.vkCmdSetRenderingInputAttachmentIndices = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingInputAttachmentIndices");
    vtable.vkCmdBindDescriptorSets2 = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets2");
    vtable.vkCmdPushConstants2 = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants2");
    vtable.vkCmdPushDescriptorSet2 = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet2");
    vtable.vkCmdPushDescriptorSetWithTemplate2 = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate2");
    vtable.vkCopyMemoryToImage = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToImage");
    vtable.vkCopyImageToMemory = xx vkGetDeviceProcAddr(device, "vkCopyImageToMemory");
    vtable.vkCopyImageToImage = xx vkGetDeviceProcAddr(device, "vkCopyImageToImage");
    vtable.vkTransitionImageLayout = xx vkGetDeviceProcAddr(device, "vkTransitionImageLayout");
    vtable.vkCreateSwapchainKHR = xx vkGetDeviceProcAddr(device, "vkCreateSwapchainKHR");
    vtable.vkDestroySwapchainKHR = xx vkGetDeviceProcAddr(device, "vkDestroySwapchainKHR");
    vtable.vkGetSwapchainImagesKHR = xx vkGetDeviceProcAddr(device, "vkGetSwapchainImagesKHR");
    vtable.vkAcquireNextImageKHR = xx vkGetDeviceProcAddr(device, "vkAcquireNextImageKHR");
    vtable.vkQueuePresentKHR = xx vkGetDeviceProcAddr(device, "vkQueuePresentKHR");
    vtable.vkGetDeviceGroupPresentCapabilitiesKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPresentCapabilitiesKHR");
    vtable.vkGetDeviceGroupSurfacePresentModesKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupSurfacePresentModesKHR");
    vtable.vkAcquireNextImage2KHR = xx vkGetDeviceProcAddr(device, "vkAcquireNextImage2KHR");
    vtable.vkCreateSharedSwapchainsKHR = xx vkGetDeviceProcAddr(device, "vkCreateSharedSwapchainsKHR");
    vtable.vkCreateVideoSessionKHR = xx vkGetDeviceProcAddr(device, "vkCreateVideoSessionKHR");
    vtable.vkDestroyVideoSessionKHR = xx vkGetDeviceProcAddr(device, "vkDestroyVideoSessionKHR");
    vtable.vkGetVideoSessionMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetVideoSessionMemoryRequirementsKHR");
    vtable.vkBindVideoSessionMemoryKHR = xx vkGetDeviceProcAddr(device, "vkBindVideoSessionMemoryKHR");
    vtable.vkCreateVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkCreateVideoSessionParametersKHR");
    vtable.vkUpdateVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkUpdateVideoSessionParametersKHR");
    vtable.vkDestroyVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkDestroyVideoSessionParametersKHR");
    vtable.vkCmdBeginVideoCodingKHR = xx vkGetDeviceProcAddr(device, "vkCmdBeginVideoCodingKHR");
    vtable.vkCmdEndVideoCodingKHR = xx vkGetDeviceProcAddr(device, "vkCmdEndVideoCodingKHR");
    vtable.vkCmdControlVideoCodingKHR = xx vkGetDeviceProcAddr(device, "vkCmdControlVideoCodingKHR");
    vtable.vkCmdDecodeVideoKHR = xx vkGetDeviceProcAddr(device, "vkCmdDecodeVideoKHR");
    vtable.vkCmdBeginRenderingKHR = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderingKHR");
    vtable.vkCmdEndRenderingKHR = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderingKHR");
    vtable.vkGetDeviceGroupPeerMemoryFeaturesKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeaturesKHR");
    vtable.vkCmdSetDeviceMaskKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetDeviceMaskKHR");
    vtable.vkCmdDispatchBaseKHR = xx vkGetDeviceProcAddr(device, "vkCmdDispatchBaseKHR");
    vtable.vkTrimCommandPoolKHR = xx vkGetDeviceProcAddr(device, "vkTrimCommandPoolKHR");
    vtable.vkGetMemoryFdKHR = xx vkGetDeviceProcAddr(device, "vkGetMemoryFdKHR");
    vtable.vkGetMemoryFdPropertiesKHR = xx vkGetDeviceProcAddr(device, "vkGetMemoryFdPropertiesKHR");
    vtable.vkImportSemaphoreFdKHR = xx vkGetDeviceProcAddr(device, "vkImportSemaphoreFdKHR");
    vtable.vkGetSemaphoreFdKHR = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreFdKHR");
    vtable.vkCmdPushDescriptorSetKHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetKHR");
    vtable.vkCmdPushDescriptorSetWithTemplateKHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplateKHR");
    vtable.vkCreateDescriptorUpdateTemplateKHR = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplateKHR");
    vtable.vkDestroyDescriptorUpdateTemplateKHR = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplateKHR");
    vtable.vkUpdateDescriptorSetWithTemplateKHR = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplateKHR");
    vtable.vkCreateRenderPass2KHR = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass2KHR");
    vtable.vkCmdBeginRenderPass2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass2KHR");
    vtable.vkCmdNextSubpass2KHR = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass2KHR");
    vtable.vkCmdEndRenderPass2KHR = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass2KHR");
    vtable.vkGetSwapchainStatusKHR = xx vkGetDeviceProcAddr(device, "vkGetSwapchainStatusKHR");
    vtable.vkImportFenceFdKHR = xx vkGetDeviceProcAddr(device, "vkImportFenceFdKHR");
    vtable.vkGetFenceFdKHR = xx vkGetDeviceProcAddr(device, "vkGetFenceFdKHR");
    vtable.vkAcquireProfilingLockKHR = xx vkGetDeviceProcAddr(device, "vkAcquireProfilingLockKHR");
    vtable.vkReleaseProfilingLockKHR = xx vkGetDeviceProcAddr(device, "vkReleaseProfilingLockKHR");
    vtable.vkGetImageMemoryRequirements2KHR = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2KHR");
    vtable.vkGetBufferMemoryRequirements2KHR = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2KHR");
    vtable.vkGetImageSparseMemoryRequirements2KHR = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2KHR");
    vtable.vkCreateSamplerYcbcrConversionKHR = xx vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversionKHR");
    vtable.vkDestroySamplerYcbcrConversionKHR = xx vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversionKHR");
    vtable.vkBindBufferMemory2KHR = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory2KHR");
    vtable.vkBindImageMemory2KHR = xx vkGetDeviceProcAddr(device, "vkBindImageMemory2KHR");
    vtable.vkGetDescriptorSetLayoutSupportKHR = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSupportKHR");
    vtable.vkCmdDrawIndirectCountKHR = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountKHR");
    vtable.vkCmdDrawIndexedIndirectCountKHR = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountKHR");
    vtable.vkGetSemaphoreCounterValueKHR = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreCounterValueKHR");
    vtable.vkWaitSemaphoresKHR = xx vkGetDeviceProcAddr(device, "vkWaitSemaphoresKHR");
    vtable.vkSignalSemaphoreKHR = xx vkGetDeviceProcAddr(device, "vkSignalSemaphoreKHR");
    vtable.vkCmdSetFragmentShadingRateKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateKHR");
    vtable.vkCmdSetRenderingAttachmentLocationsKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingAttachmentLocationsKHR");
    vtable.vkCmdSetRenderingInputAttachmentIndicesKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingInputAttachmentIndicesKHR");
    vtable.vkWaitForPresentKHR = xx vkGetDeviceProcAddr(device, "vkWaitForPresentKHR");
    vtable.vkGetBufferDeviceAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddressKHR");
    vtable.vkGetBufferOpaqueCaptureAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureAddressKHR");
    vtable.vkGetDeviceMemoryOpaqueCaptureAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryOpaqueCaptureAddressKHR");
    vtable.vkCreateDeferredOperationKHR = xx vkGetDeviceProcAddr(device, "vkCreateDeferredOperationKHR");
    vtable.vkDestroyDeferredOperationKHR = xx vkGetDeviceProcAddr(device, "vkDestroyDeferredOperationKHR");
    vtable.vkGetDeferredOperationMaxConcurrencyKHR = xx vkGetDeviceProcAddr(device, "vkGetDeferredOperationMaxConcurrencyKHR");
    vtable.vkGetDeferredOperationResultKHR = xx vkGetDeviceProcAddr(device, "vkGetDeferredOperationResultKHR");
    vtable.vkDeferredOperationJoinKHR = xx vkGetDeviceProcAddr(device, "vkDeferredOperationJoinKHR");
    vtable.vkGetPipelineExecutablePropertiesKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutablePropertiesKHR");
    vtable.vkGetPipelineExecutableStatisticsKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutableStatisticsKHR");
    vtable.vkGetPipelineExecutableInternalRepresentationsKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutableInternalRepresentationsKHR");
    vtable.vkMapMemory2KHR = xx vkGetDeviceProcAddr(device, "vkMapMemory2KHR");
    vtable.vkUnmapMemory2KHR = xx vkGetDeviceProcAddr(device, "vkUnmapMemory2KHR");
    vtable.vkGetEncodedVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkGetEncodedVideoSessionParametersKHR");
    vtable.vkCmdEncodeVideoKHR = xx vkGetDeviceProcAddr(device, "vkCmdEncodeVideoKHR");
    vtable.vkCmdSetEvent2KHR = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent2KHR");
    vtable.vkCmdResetEvent2KHR = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent2KHR");
    vtable.vkCmdWaitEvents2KHR = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents2KHR");
    vtable.vkCmdPipelineBarrier2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier2KHR");
    vtable.vkCmdWriteTimestamp2KHR = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp2KHR");
    vtable.vkQueueSubmit2KHR = xx vkGetDeviceProcAddr(device, "vkQueueSubmit2KHR");
    vtable.vkCmdCopyBuffer2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer2KHR");
    vtable.vkCmdCopyImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage2KHR");
    vtable.vkCmdCopyBufferToImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage2KHR");
    vtable.vkCmdCopyImageToBuffer2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer2KHR");
    vtable.vkCmdBlitImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage2KHR");
    vtable.vkCmdResolveImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage2KHR");
    vtable.vkCmdTraceRaysIndirect2KHR = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirect2KHR");
    vtable.vkGetDeviceBufferMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceBufferMemoryRequirementsKHR");
    vtable.vkGetDeviceImageMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageMemoryRequirementsKHR");
    vtable.vkGetDeviceImageSparseMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSparseMemoryRequirementsKHR");
    vtable.vkCmdBindIndexBuffer2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer2KHR");
    vtable.vkGetRenderingAreaGranularityKHR = xx vkGetDeviceProcAddr(device, "vkGetRenderingAreaGranularityKHR");
    vtable.vkGetDeviceImageSubresourceLayoutKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSubresourceLayoutKHR");
    vtable.vkGetImageSubresourceLayout2KHR = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2KHR");
    vtable.vkCreatePipelineBinariesKHR = xx vkGetDeviceProcAddr(device, "vkCreatePipelineBinariesKHR");
    vtable.vkDestroyPipelineBinaryKHR = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineBinaryKHR");
    vtable.vkGetPipelineKeyKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineKeyKHR");
    vtable.vkGetPipelineBinaryDataKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineBinaryDataKHR");
    vtable.vkReleaseCapturedPipelineDataKHR = xx vkGetDeviceProcAddr(device, "vkReleaseCapturedPipelineDataKHR");
    vtable.vkCmdSetLineStippleKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleKHR");
    vtable.vkGetCalibratedTimestampsKHR = xx vkGetDeviceProcAddr(device, "vkGetCalibratedTimestampsKHR");
    vtable.vkCmdBindDescriptorSets2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets2KHR");
    vtable.vkCmdPushConstants2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants2KHR");
    vtable.vkCmdPushDescriptorSet2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet2KHR");
    vtable.vkCmdPushDescriptorSetWithTemplate2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate2KHR");
    vtable.vkCmdSetDescriptorBufferOffsets2EXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDescriptorBufferOffsets2EXT");
    vtable.vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT");
    vtable.vkDebugMarkerSetObjectTagEXT = xx vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectTagEXT");
    vtable.vkDebugMarkerSetObjectNameEXT = xx vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectNameEXT");
    vtable.vkCmdDebugMarkerBeginEXT = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerBeginEXT");
    vtable.vkCmdDebugMarkerEndEXT = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerEndEXT");
    vtable.vkCmdDebugMarkerInsertEXT = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerInsertEXT");
    vtable.vkCmdBindTransformFeedbackBuffersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindTransformFeedbackBuffersEXT");
    vtable.vkCmdBeginTransformFeedbackEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginTransformFeedbackEXT");
    vtable.vkCmdEndTransformFeedbackEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndTransformFeedbackEXT");
    vtable.vkCmdBeginQueryIndexedEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginQueryIndexedEXT");
    vtable.vkCmdEndQueryIndexedEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndQueryIndexedEXT");
    vtable.vkCmdDrawIndirectByteCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectByteCountEXT");
    vtable.vkCreateCuModuleNVX = xx vkGetDeviceProcAddr(device, "vkCreateCuModuleNVX");
    vtable.vkCreateCuFunctionNVX = xx vkGetDeviceProcAddr(device, "vkCreateCuFunctionNVX");
    vtable.vkDestroyCuModuleNVX = xx vkGetDeviceProcAddr(device, "vkDestroyCuModuleNVX");
    vtable.vkDestroyCuFunctionNVX = xx vkGetDeviceProcAddr(device, "vkDestroyCuFunctionNVX");
    vtable.vkCmdCuLaunchKernelNVX = xx vkGetDeviceProcAddr(device, "vkCmdCuLaunchKernelNVX");
    vtable.vkGetImageViewHandleNVX = xx vkGetDeviceProcAddr(device, "vkGetImageViewHandleNVX");
    vtable.vkGetImageViewHandle64NVX = xx vkGetDeviceProcAddr(device, "vkGetImageViewHandle64NVX");
    vtable.vkGetImageViewAddressNVX = xx vkGetDeviceProcAddr(device, "vkGetImageViewAddressNVX");
    vtable.vkCmdDrawIndirectCountAMD = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountAMD");
    vtable.vkCmdDrawIndexedIndirectCountAMD = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountAMD");
    vtable.vkGetShaderInfoAMD = xx vkGetDeviceProcAddr(device, "vkGetShaderInfoAMD");
    vtable.vkCmdBeginConditionalRenderingEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginConditionalRenderingEXT");
    vtable.vkCmdEndConditionalRenderingEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndConditionalRenderingEXT");
    vtable.vkCmdSetViewportWScalingNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingNV");
    vtable.vkDisplayPowerControlEXT = xx vkGetDeviceProcAddr(device, "vkDisplayPowerControlEXT");
    vtable.vkRegisterDeviceEventEXT = xx vkGetDeviceProcAddr(device, "vkRegisterDeviceEventEXT");
    vtable.vkRegisterDisplayEventEXT = xx vkGetDeviceProcAddr(device, "vkRegisterDisplayEventEXT");
    vtable.vkGetSwapchainCounterEXT = xx vkGetDeviceProcAddr(device, "vkGetSwapchainCounterEXT");
    vtable.vkGetRefreshCycleDurationGOOGLE = xx vkGetDeviceProcAddr(device, "vkGetRefreshCycleDurationGOOGLE");
    vtable.vkGetPastPresentationTimingGOOGLE = xx vkGetDeviceProcAddr(device, "vkGetPastPresentationTimingGOOGLE");
    vtable.vkCmdSetDiscardRectangleEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEXT");
    vtable.vkCmdSetDiscardRectangleEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEnableEXT");
    vtable.vkCmdSetDiscardRectangleModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleModeEXT");
    vtable.vkSetHdrMetadataEXT = xx vkGetDeviceProcAddr(device, "vkSetHdrMetadataEXT");
    vtable.vkSetDebugUtilsObjectNameEXT = xx vkGetDeviceProcAddr(device, "vkSetDebugUtilsObjectNameEXT");
    vtable.vkSetDebugUtilsObjectTagEXT = xx vkGetDeviceProcAddr(device, "vkSetDebugUtilsObjectTagEXT");
    vtable.vkQueueBeginDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkQueueBeginDebugUtilsLabelEXT");
    vtable.vkQueueEndDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkQueueEndDebugUtilsLabelEXT");
    vtable.vkQueueInsertDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkQueueInsertDebugUtilsLabelEXT");
    vtable.vkCmdBeginDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginDebugUtilsLabelEXT");
    vtable.vkCmdEndDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndDebugUtilsLabelEXT");
    vtable.vkCmdInsertDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkCmdInsertDebugUtilsLabelEXT");
    vtable.vkCmdSetSampleLocationsEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEXT");
    vtable.vkGetImageDrmFormatModifierPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkGetImageDrmFormatModifierPropertiesEXT");
    vtable.vkCreateValidationCacheEXT = xx vkGetDeviceProcAddr(device, "vkCreateValidationCacheEXT");
    vtable.vkDestroyValidationCacheEXT = xx vkGetDeviceProcAddr(device, "vkDestroyValidationCacheEXT");
    vtable.vkMergeValidationCachesEXT = xx vkGetDeviceProcAddr(device, "vkMergeValidationCachesEXT");
    vtable.vkGetValidationCacheDataEXT = xx vkGetDeviceProcAddr(device, "vkGetValidationCacheDataEXT");
    vtable.vkCmdBindShadingRateImageNV = xx vkGetDeviceProcAddr(device, "vkCmdBindShadingRateImageNV");
    vtable.vkCmdSetViewportShadingRatePaletteNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportShadingRatePaletteNV");
    vtable.vkCmdSetCoarseSampleOrderNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoarseSampleOrderNV");
    vtable.vkCreateAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureNV");
    vtable.vkDestroyAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureNV");
    vtable.vkGetAccelerationStructureMemoryRequirementsNV = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureMemoryRequirementsNV");
    vtable.vkBindAccelerationStructureMemoryNV = xx vkGetDeviceProcAddr(device, "vkBindAccelerationStructureMemoryNV");
    vtable.vkCmdBuildAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructureNV");
    vtable.vkCmdCopyAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureNV");
    vtable.vkCmdTraceRaysNV = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysNV");
    vtable.vkCreateRayTracingPipelinesNV = xx vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesNV");
    vtable.vkGetRayTracingShaderGroupHandlesKHR = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesKHR");
    vtable.vkGetRayTracingShaderGroupHandlesNV = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesNV");
    vtable.vkGetAccelerationStructureHandleNV = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureHandleNV");
    vtable.vkCmdWriteAccelerationStructuresPropertiesNV = xx vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesNV");
    vtable.vkCompileDeferredNV = xx vkGetDeviceProcAddr(device, "vkCompileDeferredNV");
    vtable.vkGetMemoryHostPointerPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkGetMemoryHostPointerPropertiesEXT");
    vtable.vkCmdWriteBufferMarkerAMD = xx vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarkerAMD");
    vtable.vkCmdWriteBufferMarker2AMD = xx vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarker2AMD");
    vtable.vkGetCalibratedTimestampsEXT = xx vkGetDeviceProcAddr(device, "vkGetCalibratedTimestampsEXT");
    vtable.vkCmdDrawMeshTasksNV = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksNV");
    vtable.vkCmdDrawMeshTasksIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectNV");
    vtable.vkCmdDrawMeshTasksIndirectCountNV = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountNV");
    vtable.vkCmdSetExclusiveScissorEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorEnableNV");
    vtable.vkCmdSetExclusiveScissorNV = xx vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorNV");
    vtable.vkCmdSetCheckpointNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCheckpointNV");
    vtable.vkGetQueueCheckpointDataNV = xx vkGetDeviceProcAddr(device, "vkGetQueueCheckpointDataNV");
    vtable.vkGetQueueCheckpointData2NV = xx vkGetDeviceProcAddr(device, "vkGetQueueCheckpointData2NV");
    vtable.vkInitializePerformanceApiINTEL = xx vkGetDeviceProcAddr(device, "vkInitializePerformanceApiINTEL");
    vtable.vkUninitializePerformanceApiINTEL = xx vkGetDeviceProcAddr(device, "vkUninitializePerformanceApiINTEL");
    vtable.vkCmdSetPerformanceMarkerINTEL = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceMarkerINTEL");
    vtable.vkCmdSetPerformanceStreamMarkerINTEL = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceStreamMarkerINTEL");
    vtable.vkCmdSetPerformanceOverrideINTEL = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceOverrideINTEL");
    vtable.vkAcquirePerformanceConfigurationINTEL = xx vkGetDeviceProcAddr(device, "vkAcquirePerformanceConfigurationINTEL");
    vtable.vkReleasePerformanceConfigurationINTEL = xx vkGetDeviceProcAddr(device, "vkReleasePerformanceConfigurationINTEL");
    vtable.vkQueueSetPerformanceConfigurationINTEL = xx vkGetDeviceProcAddr(device, "vkQueueSetPerformanceConfigurationINTEL");
    vtable.vkGetPerformanceParameterINTEL = xx vkGetDeviceProcAddr(device, "vkGetPerformanceParameterINTEL");
    vtable.vkSetLocalDimmingAMD = xx vkGetDeviceProcAddr(device, "vkSetLocalDimmingAMD");
    vtable.vkGetBufferDeviceAddressEXT = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddressEXT");
    vtable.vkCmdSetLineStippleEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleEXT");
    vtable.vkResetQueryPoolEXT = xx vkGetDeviceProcAddr(device, "vkResetQueryPoolEXT");
    vtable.vkCmdSetCullModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetCullModeEXT");
    vtable.vkCmdSetFrontFaceEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetFrontFaceEXT");
    vtable.vkCmdSetPrimitiveTopologyEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveTopologyEXT");
    vtable.vkCmdSetViewportWithCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWithCountEXT");
    vtable.vkCmdSetScissorWithCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetScissorWithCountEXT");
    vtable.vkCmdBindVertexBuffers2EXT = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers2EXT");
    vtable.vkCmdSetDepthTestEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthTestEnableEXT");
    vtable.vkCmdSetDepthWriteEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthWriteEnableEXT");
    vtable.vkCmdSetDepthCompareOpEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthCompareOpEXT");
    vtable.vkCmdSetDepthBoundsTestEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBoundsTestEnableEXT");
    vtable.vkCmdSetStencilTestEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilTestEnableEXT");
    vtable.vkCmdSetStencilOpEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilOpEXT");
    vtable.vkCopyMemoryToImageEXT = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToImageEXT");
    vtable.vkCopyImageToMemoryEXT = xx vkGetDeviceProcAddr(device, "vkCopyImageToMemoryEXT");
    vtable.vkCopyImageToImageEXT = xx vkGetDeviceProcAddr(device, "vkCopyImageToImageEXT");
    vtable.vkTransitionImageLayoutEXT = xx vkGetDeviceProcAddr(device, "vkTransitionImageLayoutEXT");
    vtable.vkGetImageSubresourceLayout2EXT = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2EXT");
    vtable.vkReleaseSwapchainImagesEXT = xx vkGetDeviceProcAddr(device, "vkReleaseSwapchainImagesEXT");
    vtable.vkGetGeneratedCommandsMemoryRequirementsNV = xx vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsNV");
    vtable.vkCmdPreprocessGeneratedCommandsNV = xx vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsNV");
    vtable.vkCmdExecuteGeneratedCommandsNV = xx vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsNV");
    vtable.vkCmdBindPipelineShaderGroupNV = xx vkGetDeviceProcAddr(device, "vkCmdBindPipelineShaderGroupNV");
    vtable.vkCreateIndirectCommandsLayoutNV = xx vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutNV");
    vtable.vkDestroyIndirectCommandsLayoutNV = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutNV");
    vtable.vkCmdSetDepthBias2EXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBias2EXT");
    vtable.vkCreatePrivateDataSlotEXT = xx vkGetDeviceProcAddr(device, "vkCreatePrivateDataSlotEXT");
    vtable.vkDestroyPrivateDataSlotEXT = xx vkGetDeviceProcAddr(device, "vkDestroyPrivateDataSlotEXT");
    vtable.vkSetPrivateDataEXT = xx vkGetDeviceProcAddr(device, "vkSetPrivateDataEXT");
    vtable.vkGetPrivateDataEXT = xx vkGetDeviceProcAddr(device, "vkGetPrivateDataEXT");
    vtable.vkCreateCudaModuleNV = xx vkGetDeviceProcAddr(device, "vkCreateCudaModuleNV");
    vtable.vkGetCudaModuleCacheNV = xx vkGetDeviceProcAddr(device, "vkGetCudaModuleCacheNV");
    vtable.vkCreateCudaFunctionNV = xx vkGetDeviceProcAddr(device, "vkCreateCudaFunctionNV");
    vtable.vkDestroyCudaModuleNV = xx vkGetDeviceProcAddr(device, "vkDestroyCudaModuleNV");
    vtable.vkDestroyCudaFunctionNV = xx vkGetDeviceProcAddr(device, "vkDestroyCudaFunctionNV");
    vtable.vkCmdCudaLaunchKernelNV = xx vkGetDeviceProcAddr(device, "vkCmdCudaLaunchKernelNV");
    vtable.vkCmdDispatchTileQCOM = xx vkGetDeviceProcAddr(device, "vkCmdDispatchTileQCOM");
    vtable.vkCmdBeginPerTileExecutionQCOM = xx vkGetDeviceProcAddr(device, "vkCmdBeginPerTileExecutionQCOM");
    vtable.vkCmdEndPerTileExecutionQCOM = xx vkGetDeviceProcAddr(device, "vkCmdEndPerTileExecutionQCOM");
    vtable.vkGetDescriptorSetLayoutSizeEXT = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSizeEXT");
    vtable.vkGetDescriptorSetLayoutBindingOffsetEXT = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutBindingOffsetEXT");
    vtable.vkGetDescriptorEXT = xx vkGetDeviceProcAddr(device, "vkGetDescriptorEXT");
    vtable.vkCmdBindDescriptorBuffersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBuffersEXT");
    vtable.vkCmdSetDescriptorBufferOffsetsEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDescriptorBufferOffsetsEXT");
    vtable.vkCmdBindDescriptorBufferEmbeddedSamplersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT");
    vtable.vkGetBufferOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureDescriptorDataEXT");
    vtable.vkGetImageOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetImageOpaqueCaptureDescriptorDataEXT");
    vtable.vkGetImageViewOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetImageViewOpaqueCaptureDescriptorDataEXT");
    vtable.vkGetSamplerOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetSamplerOpaqueCaptureDescriptorDataEXT");
    vtable.vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");
    vtable.vkCmdSetFragmentShadingRateEnumNV = xx vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateEnumNV");
    vtable.vkGetDeviceFaultInfoEXT = xx vkGetDeviceProcAddr(device, "vkGetDeviceFaultInfoEXT");
    vtable.vkCmdSetVertexInputEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetVertexInputEXT");
    vtable.vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = xx vkGetDeviceProcAddr(device, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");
    vtable.vkCmdSubpassShadingHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdSubpassShadingHUAWEI");
    vtable.vkCmdBindInvocationMaskHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdBindInvocationMaskHUAWEI");
    vtable.vkGetMemoryRemoteAddressNV = xx vkGetDeviceProcAddr(device, "vkGetMemoryRemoteAddressNV");
    vtable.vkGetPipelinePropertiesEXT = xx vkGetDeviceProcAddr(device, "vkGetPipelinePropertiesEXT");
    vtable.vkCmdSetPatchControlPointsEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPatchControlPointsEXT");
    vtable.vkCmdSetRasterizerDiscardEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizerDiscardEnableEXT");
    vtable.vkCmdSetDepthBiasEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBiasEnableEXT");
    vtable.vkCmdSetLogicOpEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEXT");
    vtable.vkCmdSetPrimitiveRestartEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveRestartEnableEXT");
    vtable.vkCmdSetColorWriteEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorWriteEnableEXT");
    vtable.vkCmdDrawMultiEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMultiEXT");
    vtable.vkCmdDrawMultiIndexedEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMultiIndexedEXT");
    vtable.vkCreateMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCreateMicromapEXT");
    vtable.vkDestroyMicromapEXT = xx vkGetDeviceProcAddr(device, "vkDestroyMicromapEXT");
    vtable.vkCmdBuildMicromapsEXT = xx vkGetDeviceProcAddr(device, "vkCmdBuildMicromapsEXT");
    vtable.vkBuildMicromapsEXT = xx vkGetDeviceProcAddr(device, "vkBuildMicromapsEXT");
    vtable.vkCopyMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCopyMicromapEXT");
    vtable.vkCopyMicromapToMemoryEXT = xx vkGetDeviceProcAddr(device, "vkCopyMicromapToMemoryEXT");
    vtable.vkCopyMemoryToMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToMicromapEXT");
    vtable.vkWriteMicromapsPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkWriteMicromapsPropertiesEXT");
    vtable.vkCmdCopyMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCmdCopyMicromapEXT");
    vtable.vkCmdCopyMicromapToMemoryEXT = xx vkGetDeviceProcAddr(device, "vkCmdCopyMicromapToMemoryEXT");
    vtable.vkCmdCopyMemoryToMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToMicromapEXT");
    vtable.vkCmdWriteMicromapsPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkCmdWriteMicromapsPropertiesEXT");
    vtable.vkGetDeviceMicromapCompatibilityEXT = xx vkGetDeviceProcAddr(device, "vkGetDeviceMicromapCompatibilityEXT");
    vtable.vkGetMicromapBuildSizesEXT = xx vkGetDeviceProcAddr(device, "vkGetMicromapBuildSizesEXT");
    vtable.vkCmdDrawClusterHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdDrawClusterHUAWEI");
    vtable.vkCmdDrawClusterIndirectHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdDrawClusterIndirectHUAWEI");
    vtable.vkSetDeviceMemoryPriorityEXT = xx vkGetDeviceProcAddr(device, "vkSetDeviceMemoryPriorityEXT");
    vtable.vkGetDescriptorSetLayoutHostMappingInfoVALVE = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutHostMappingInfoVALVE");
    vtable.vkGetDescriptorSetHostMappingVALVE = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetHostMappingVALVE");
    vtable.vkCmdCopyMemoryIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryIndirectNV");
    vtable.vkCmdCopyMemoryToImageIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToImageIndirectNV");
    vtable.vkCmdDecompressMemoryNV = xx vkGetDeviceProcAddr(device, "vkCmdDecompressMemoryNV");
    vtable.vkCmdDecompressMemoryIndirectCountNV = xx vkGetDeviceProcAddr(device, "vkCmdDecompressMemoryIndirectCountNV");
    vtable.vkGetPipelineIndirectMemoryRequirementsNV = xx vkGetDeviceProcAddr(device, "vkGetPipelineIndirectMemoryRequirementsNV");
    vtable.vkCmdUpdatePipelineIndirectBufferNV = xx vkGetDeviceProcAddr(device, "vkCmdUpdatePipelineIndirectBufferNV");
    vtable.vkGetPipelineIndirectDeviceAddressNV = xx vkGetDeviceProcAddr(device, "vkGetPipelineIndirectDeviceAddressNV");
    vtable.vkCmdSetDepthClampEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClampEnableEXT");
    vtable.vkCmdSetPolygonModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPolygonModeEXT");
    vtable.vkCmdSetRasterizationSamplesEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizationSamplesEXT");
    vtable.vkCmdSetSampleMaskEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleMaskEXT");
    vtable.vkCmdSetAlphaToCoverageEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetAlphaToCoverageEnableEXT");
    vtable.vkCmdSetAlphaToOneEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetAlphaToOneEnableEXT");
    vtable.vkCmdSetLogicOpEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEnableEXT");
    vtable.vkCmdSetColorBlendEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendEnableEXT");
    vtable.vkCmdSetColorBlendEquationEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendEquationEXT");
    vtable.vkCmdSetColorWriteMaskEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorWriteMaskEXT");
    vtable.vkCmdSetTessellationDomainOriginEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetTessellationDomainOriginEXT");
    vtable.vkCmdSetRasterizationStreamEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizationStreamEXT");
    vtable.vkCmdSetConservativeRasterizationModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetConservativeRasterizationModeEXT");
    vtable.vkCmdSetExtraPrimitiveOverestimationSizeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetExtraPrimitiveOverestimationSizeEXT");
    vtable.vkCmdSetDepthClipEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClipEnableEXT");
    vtable.vkCmdSetSampleLocationsEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEnableEXT");
    vtable.vkCmdSetColorBlendAdvancedEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendAdvancedEXT");
    vtable.vkCmdSetProvokingVertexModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetProvokingVertexModeEXT");
    vtable.vkCmdSetLineRasterizationModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLineRasterizationModeEXT");
    vtable.vkCmdSetLineStippleEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleEnableEXT");
    vtable.vkCmdSetDepthClipNegativeOneToOneEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClipNegativeOneToOneEXT");
    vtable.vkCmdSetViewportWScalingEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingEnableNV");
    vtable.vkCmdSetViewportSwizzleNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportSwizzleNV");
    vtable.vkCmdSetCoverageToColorEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageToColorEnableNV");
    vtable.vkCmdSetCoverageToColorLocationNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageToColorLocationNV");
    vtable.vkCmdSetCoverageModulationModeNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationModeNV");
    vtable.vkCmdSetCoverageModulationTableEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationTableEnableNV");
    vtable.vkCmdSetCoverageModulationTableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationTableNV");
    vtable.vkCmdSetShadingRateImageEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetShadingRateImageEnableNV");
    vtable.vkCmdSetRepresentativeFragmentTestEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetRepresentativeFragmentTestEnableNV");
    vtable.vkCmdSetCoverageReductionModeNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageReductionModeNV");
    vtable.vkGetShaderModuleIdentifierEXT = xx vkGetDeviceProcAddr(device, "vkGetShaderModuleIdentifierEXT");
    vtable.vkGetShaderModuleCreateInfoIdentifierEXT = xx vkGetDeviceProcAddr(device, "vkGetShaderModuleCreateInfoIdentifierEXT");
    vtable.vkCreateOpticalFlowSessionNV = xx vkGetDeviceProcAddr(device, "vkCreateOpticalFlowSessionNV");
    vtable.vkDestroyOpticalFlowSessionNV = xx vkGetDeviceProcAddr(device, "vkDestroyOpticalFlowSessionNV");
    vtable.vkBindOpticalFlowSessionImageNV = xx vkGetDeviceProcAddr(device, "vkBindOpticalFlowSessionImageNV");
    vtable.vkCmdOpticalFlowExecuteNV = xx vkGetDeviceProcAddr(device, "vkCmdOpticalFlowExecuteNV");
    vtable.vkAntiLagUpdateAMD = xx vkGetDeviceProcAddr(device, "vkAntiLagUpdateAMD");
    vtable.vkCreateShadersEXT = xx vkGetDeviceProcAddr(device, "vkCreateShadersEXT");
    vtable.vkDestroyShaderEXT = xx vkGetDeviceProcAddr(device, "vkDestroyShaderEXT");
    vtable.vkGetShaderBinaryDataEXT = xx vkGetDeviceProcAddr(device, "vkGetShaderBinaryDataEXT");
    vtable.vkCmdBindShadersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindShadersEXT");
    vtable.vkCmdSetDepthClampRangeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClampRangeEXT");
    vtable.vkGetFramebufferTilePropertiesQCOM = xx vkGetDeviceProcAddr(device, "vkGetFramebufferTilePropertiesQCOM");
    vtable.vkGetDynamicRenderingTilePropertiesQCOM = xx vkGetDeviceProcAddr(device, "vkGetDynamicRenderingTilePropertiesQCOM");
    vtable.vkConvertCooperativeVectorMatrixNV = xx vkGetDeviceProcAddr(device, "vkConvertCooperativeVectorMatrixNV");
    vtable.vkCmdConvertCooperativeVectorMatrixNV = xx vkGetDeviceProcAddr(device, "vkCmdConvertCooperativeVectorMatrixNV");
    vtable.vkSetLatencySleepModeNV = xx vkGetDeviceProcAddr(device, "vkSetLatencySleepModeNV");
    vtable.vkLatencySleepNV = xx vkGetDeviceProcAddr(device, "vkLatencySleepNV");
    vtable.vkSetLatencyMarkerNV = xx vkGetDeviceProcAddr(device, "vkSetLatencyMarkerNV");
    vtable.vkGetLatencyTimingsNV = xx vkGetDeviceProcAddr(device, "vkGetLatencyTimingsNV");
    vtable.vkQueueNotifyOutOfBandNV = xx vkGetDeviceProcAddr(device, "vkQueueNotifyOutOfBandNV");
    vtable.vkCmdSetAttachmentFeedbackLoopEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetAttachmentFeedbackLoopEnableEXT");
    vtable.vkCmdBindTileMemoryQCOM = xx vkGetDeviceProcAddr(device, "vkCmdBindTileMemoryQCOM");
    vtable.vkCreateExternalComputeQueueNV = xx vkGetDeviceProcAddr(device, "vkCreateExternalComputeQueueNV");
    vtable.vkDestroyExternalComputeQueueNV = xx vkGetDeviceProcAddr(device, "vkDestroyExternalComputeQueueNV");
    vtable.vkGetClusterAccelerationStructureBuildSizesNV = xx vkGetDeviceProcAddr(device, "vkGetClusterAccelerationStructureBuildSizesNV");
    vtable.vkCmdBuildClusterAccelerationStructureIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdBuildClusterAccelerationStructureIndirectNV");
    vtable.vkGetPartitionedAccelerationStructuresBuildSizesNV = xx vkGetDeviceProcAddr(device, "vkGetPartitionedAccelerationStructuresBuildSizesNV");
    vtable.vkCmdBuildPartitionedAccelerationStructuresNV = xx vkGetDeviceProcAddr(device, "vkCmdBuildPartitionedAccelerationStructuresNV");
    vtable.vkGetGeneratedCommandsMemoryRequirementsEXT = xx vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsEXT");
    vtable.vkCmdPreprocessGeneratedCommandsEXT = xx vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsEXT");
    vtable.vkCmdExecuteGeneratedCommandsEXT = xx vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsEXT");
    vtable.vkCreateIndirectCommandsLayoutEXT = xx vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutEXT");
    vtable.vkDestroyIndirectCommandsLayoutEXT = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutEXT");
    vtable.vkCreateIndirectExecutionSetEXT = xx vkGetDeviceProcAddr(device, "vkCreateIndirectExecutionSetEXT");
    vtable.vkDestroyIndirectExecutionSetEXT = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectExecutionSetEXT");
    vtable.vkUpdateIndirectExecutionSetPipelineEXT = xx vkGetDeviceProcAddr(device, "vkUpdateIndirectExecutionSetPipelineEXT");
    vtable.vkUpdateIndirectExecutionSetShaderEXT = xx vkGetDeviceProcAddr(device, "vkUpdateIndirectExecutionSetShaderEXT");
    vtable.vkCmdEndRendering2EXT = xx vkGetDeviceProcAddr(device, "vkCmdEndRendering2EXT");
    vtable.vkCreateAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureKHR");
    vtable.vkDestroyAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureKHR");
    vtable.vkCmdBuildAccelerationStructuresKHR = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresKHR");
    vtable.vkCmdBuildAccelerationStructuresIndirectKHR = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresIndirectKHR");
    vtable.vkBuildAccelerationStructuresKHR = xx vkGetDeviceProcAddr(device, "vkBuildAccelerationStructuresKHR");
    vtable.vkCopyAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureKHR");
    vtable.vkCopyAccelerationStructureToMemoryKHR = xx vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureToMemoryKHR");
    vtable.vkCopyMemoryToAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToAccelerationStructureKHR");
    vtable.vkWriteAccelerationStructuresPropertiesKHR = xx vkGetDeviceProcAddr(device, "vkWriteAccelerationStructuresPropertiesKHR");
    vtable.vkCmdCopyAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureKHR");
    vtable.vkCmdCopyAccelerationStructureToMemoryKHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureToMemoryKHR");
    vtable.vkCmdCopyMemoryToAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToAccelerationStructureKHR");
    vtable.vkGetAccelerationStructureDeviceAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureDeviceAddressKHR");
    vtable.vkCmdWriteAccelerationStructuresPropertiesKHR = xx vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesKHR");
    vtable.vkGetDeviceAccelerationStructureCompatibilityKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceAccelerationStructureCompatibilityKHR");
    vtable.vkGetAccelerationStructureBuildSizesKHR = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureBuildSizesKHR");
    vtable.vkCmdTraceRaysKHR = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysKHR");
    vtable.vkCreateRayTracingPipelinesKHR = xx vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesKHR");
    vtable.vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = xx vkGetDeviceProcAddr(device, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");
    vtable.vkCmdTraceRaysIndirectKHR = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirectKHR");
    vtable.vkGetRayTracingShaderGroupStackSizeKHR = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupStackSizeKHR");
    vtable.vkCmdSetRayTracingPipelineStackSizeKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetRayTracingPipelineStackSizeKHR");
    vtable.vkCmdDrawMeshTasksEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksEXT");
    vtable.vkCmdDrawMeshTasksIndirectEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectEXT");
    vtable.vkCmdDrawMeshTasksIndirectCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountEXT");
    vtable.vkGetAndroidHardwareBufferPropertiesANDROID = xx vkGetDeviceProcAddr(device, "vkGetAndroidHardwareBufferPropertiesANDROID");
    vtable.vkGetMemoryAndroidHardwareBufferANDROID = xx vkGetDeviceProcAddr(device, "vkGetMemoryAndroidHardwareBufferANDROID");
    vtable.vkCreateExecutionGraphPipelinesAMDX = xx vkGetDeviceProcAddr(device, "vkCreateExecutionGraphPipelinesAMDX");
    vtable.vkGetExecutionGraphPipelineScratchSizeAMDX = xx vkGetDeviceProcAddr(device, "vkGetExecutionGraphPipelineScratchSizeAMDX");
    vtable.vkGetExecutionGraphPipelineNodeIndexAMDX = xx vkGetDeviceProcAddr(device, "vkGetExecutionGraphPipelineNodeIndexAMDX");
    vtable.vkCmdInitializeGraphScratchMemoryAMDX = xx vkGetDeviceProcAddr(device, "vkCmdInitializeGraphScratchMemoryAMDX");
    vtable.vkCmdDispatchGraphAMDX = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphAMDX");
    vtable.vkCmdDispatchGraphIndirectAMDX = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphIndirectAMDX");
    vtable.vkCmdDispatchGraphIndirectCountAMDX = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphIndirectCountAMDX");
}

load_device_proc_addresses :: (device: VkDevice) {
    vkDestroyDevice = xx vkGetDeviceProcAddr(device, "vkDestroyDevice");
    vkGetDeviceQueue = xx vkGetDeviceProcAddr(device, "vkGetDeviceQueue");
    vkQueueSubmit = xx vkGetDeviceProcAddr(device, "vkQueueSubmit");
    vkQueueWaitIdle = xx vkGetDeviceProcAddr(device, "vkQueueWaitIdle");
    vkDeviceWaitIdle = xx vkGetDeviceProcAddr(device, "vkDeviceWaitIdle");
    vkAllocateMemory = xx vkGetDeviceProcAddr(device, "vkAllocateMemory");
    vkFreeMemory = xx vkGetDeviceProcAddr(device, "vkFreeMemory");
    vkMapMemory = xx vkGetDeviceProcAddr(device, "vkMapMemory");
    vkUnmapMemory = xx vkGetDeviceProcAddr(device, "vkUnmapMemory");
    vkFlushMappedMemoryRanges = xx vkGetDeviceProcAddr(device, "vkFlushMappedMemoryRanges");
    vkInvalidateMappedMemoryRanges = xx vkGetDeviceProcAddr(device, "vkInvalidateMappedMemoryRanges");
    vkGetDeviceMemoryCommitment = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryCommitment");
    vkBindBufferMemory = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory");
    vkBindImageMemory = xx vkGetDeviceProcAddr(device, "vkBindImageMemory");
    vkGetBufferMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements");
    vkGetImageMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements");
    vkGetImageSparseMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements");
    vkQueueBindSparse = xx vkGetDeviceProcAddr(device, "vkQueueBindSparse");
    vkCreateFence = xx vkGetDeviceProcAddr(device, "vkCreateFence");
    vkDestroyFence = xx vkGetDeviceProcAddr(device, "vkDestroyFence");
    vkResetFences = xx vkGetDeviceProcAddr(device, "vkResetFences");
    vkGetFenceStatus = xx vkGetDeviceProcAddr(device, "vkGetFenceStatus");
    vkWaitForFences = xx vkGetDeviceProcAddr(device, "vkWaitForFences");
    vkCreateSemaphore = xx vkGetDeviceProcAddr(device, "vkCreateSemaphore");
    vkDestroySemaphore = xx vkGetDeviceProcAddr(device, "vkDestroySemaphore");
    vkCreateEvent = xx vkGetDeviceProcAddr(device, "vkCreateEvent");
    vkDestroyEvent = xx vkGetDeviceProcAddr(device, "vkDestroyEvent");
    vkGetEventStatus = xx vkGetDeviceProcAddr(device, "vkGetEventStatus");
    vkSetEvent = xx vkGetDeviceProcAddr(device, "vkSetEvent");
    vkResetEvent = xx vkGetDeviceProcAddr(device, "vkResetEvent");
    vkCreateQueryPool = xx vkGetDeviceProcAddr(device, "vkCreateQueryPool");
    vkDestroyQueryPool = xx vkGetDeviceProcAddr(device, "vkDestroyQueryPool");
    vkGetQueryPoolResults = xx vkGetDeviceProcAddr(device, "vkGetQueryPoolResults");
    vkCreateBuffer = xx vkGetDeviceProcAddr(device, "vkCreateBuffer");
    vkDestroyBuffer = xx vkGetDeviceProcAddr(device, "vkDestroyBuffer");
    vkCreateBufferView = xx vkGetDeviceProcAddr(device, "vkCreateBufferView");
    vkDestroyBufferView = xx vkGetDeviceProcAddr(device, "vkDestroyBufferView");
    vkCreateImage = xx vkGetDeviceProcAddr(device, "vkCreateImage");
    vkDestroyImage = xx vkGetDeviceProcAddr(device, "vkDestroyImage");
    vkGetImageSubresourceLayout = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout");
    vkCreateImageView = xx vkGetDeviceProcAddr(device, "vkCreateImageView");
    vkDestroyImageView = xx vkGetDeviceProcAddr(device, "vkDestroyImageView");
    vkCreateShaderModule = xx vkGetDeviceProcAddr(device, "vkCreateShaderModule");
    vkDestroyShaderModule = xx vkGetDeviceProcAddr(device, "vkDestroyShaderModule");
    vkCreatePipelineCache = xx vkGetDeviceProcAddr(device, "vkCreatePipelineCache");
    vkDestroyPipelineCache = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineCache");
    vkGetPipelineCacheData = xx vkGetDeviceProcAddr(device, "vkGetPipelineCacheData");
    vkMergePipelineCaches = xx vkGetDeviceProcAddr(device, "vkMergePipelineCaches");
    vkCreateGraphicsPipelines = xx vkGetDeviceProcAddr(device, "vkCreateGraphicsPipelines");
    vkCreateComputePipelines = xx vkGetDeviceProcAddr(device, "vkCreateComputePipelines");
    vkDestroyPipeline = xx vkGetDeviceProcAddr(device, "vkDestroyPipeline");
    vkCreatePipelineLayout = xx vkGetDeviceProcAddr(device, "vkCreatePipelineLayout");
    vkDestroyPipelineLayout = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineLayout");
    vkCreateSampler = xx vkGetDeviceProcAddr(device, "vkCreateSampler");
    vkDestroySampler = xx vkGetDeviceProcAddr(device, "vkDestroySampler");
    vkCreateDescriptorSetLayout = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorSetLayout");
    vkDestroyDescriptorSetLayout = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorSetLayout");
    vkCreateDescriptorPool = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorPool");
    vkDestroyDescriptorPool = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorPool");
    vkResetDescriptorPool = xx vkGetDeviceProcAddr(device, "vkResetDescriptorPool");
    vkAllocateDescriptorSets = xx vkGetDeviceProcAddr(device, "vkAllocateDescriptorSets");
    vkFreeDescriptorSets = xx vkGetDeviceProcAddr(device, "vkFreeDescriptorSets");
    vkUpdateDescriptorSets = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSets");
    vkCreateFramebuffer = xx vkGetDeviceProcAddr(device, "vkCreateFramebuffer");
    vkDestroyFramebuffer = xx vkGetDeviceProcAddr(device, "vkDestroyFramebuffer");
    vkCreateRenderPass = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass");
    vkDestroyRenderPass = xx vkGetDeviceProcAddr(device, "vkDestroyRenderPass");
    vkGetRenderAreaGranularity = xx vkGetDeviceProcAddr(device, "vkGetRenderAreaGranularity");
    vkCreateCommandPool = xx vkGetDeviceProcAddr(device, "vkCreateCommandPool");
    vkDestroyCommandPool = xx vkGetDeviceProcAddr(device, "vkDestroyCommandPool");
    vkResetCommandPool = xx vkGetDeviceProcAddr(device, "vkResetCommandPool");
    vkAllocateCommandBuffers = xx vkGetDeviceProcAddr(device, "vkAllocateCommandBuffers");
    vkFreeCommandBuffers = xx vkGetDeviceProcAddr(device, "vkFreeCommandBuffers");
    vkBeginCommandBuffer = xx vkGetDeviceProcAddr(device, "vkBeginCommandBuffer");
    vkEndCommandBuffer = xx vkGetDeviceProcAddr(device, "vkEndCommandBuffer");
    vkResetCommandBuffer = xx vkGetDeviceProcAddr(device, "vkResetCommandBuffer");
    vkCmdBindPipeline = xx vkGetDeviceProcAddr(device, "vkCmdBindPipeline");
    vkCmdSetViewport = xx vkGetDeviceProcAddr(device, "vkCmdSetViewport");
    vkCmdSetScissor = xx vkGetDeviceProcAddr(device, "vkCmdSetScissor");
    vkCmdSetLineWidth = xx vkGetDeviceProcAddr(device, "vkCmdSetLineWidth");
    vkCmdSetDepthBias = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBias");
    vkCmdSetBlendConstants = xx vkGetDeviceProcAddr(device, "vkCmdSetBlendConstants");
    vkCmdSetDepthBounds = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBounds");
    vkCmdSetStencilCompareMask = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilCompareMask");
    vkCmdSetStencilWriteMask = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilWriteMask");
    vkCmdSetStencilReference = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilReference");
    vkCmdBindDescriptorSets = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets");
    vkCmdBindIndexBuffer = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer");
    vkCmdBindVertexBuffers = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers");
    vkCmdDraw = xx vkGetDeviceProcAddr(device, "vkCmdDraw");
    vkCmdDrawIndexed = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexed");
    vkCmdDrawIndirect = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirect");
    vkCmdDrawIndexedIndirect = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirect");
    vkCmdDispatch = xx vkGetDeviceProcAddr(device, "vkCmdDispatch");
    vkCmdDispatchIndirect = xx vkGetDeviceProcAddr(device, "vkCmdDispatchIndirect");
    vkCmdCopyBuffer = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer");
    vkCmdCopyImage = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage");
    vkCmdBlitImage = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage");
    vkCmdCopyBufferToImage = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage");
    vkCmdCopyImageToBuffer = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer");
    vkCmdUpdateBuffer = xx vkGetDeviceProcAddr(device, "vkCmdUpdateBuffer");
    vkCmdFillBuffer = xx vkGetDeviceProcAddr(device, "vkCmdFillBuffer");
    vkCmdClearColorImage = xx vkGetDeviceProcAddr(device, "vkCmdClearColorImage");
    vkCmdClearDepthStencilImage = xx vkGetDeviceProcAddr(device, "vkCmdClearDepthStencilImage");
    vkCmdClearAttachments = xx vkGetDeviceProcAddr(device, "vkCmdClearAttachments");
    vkCmdResolveImage = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage");
    vkCmdSetEvent = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent");
    vkCmdResetEvent = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent");
    vkCmdWaitEvents = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents");
    vkCmdPipelineBarrier = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier");
    vkCmdBeginQuery = xx vkGetDeviceProcAddr(device, "vkCmdBeginQuery");
    vkCmdEndQuery = xx vkGetDeviceProcAddr(device, "vkCmdEndQuery");
    vkCmdResetQueryPool = xx vkGetDeviceProcAddr(device, "vkCmdResetQueryPool");
    vkCmdWriteTimestamp = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp");
    vkCmdCopyQueryPoolResults = xx vkGetDeviceProcAddr(device, "vkCmdCopyQueryPoolResults");
    vkCmdPushConstants = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants");
    vkCmdBeginRenderPass = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass");
    vkCmdNextSubpass = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass");
    vkCmdEndRenderPass = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass");
    vkCmdExecuteCommands = xx vkGetDeviceProcAddr(device, "vkCmdExecuteCommands");
    vkBindBufferMemory2 = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory2");
    vkBindImageMemory2 = xx vkGetDeviceProcAddr(device, "vkBindImageMemory2");
    vkGetDeviceGroupPeerMemoryFeatures = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeatures");
    vkCmdSetDeviceMask = xx vkGetDeviceProcAddr(device, "vkCmdSetDeviceMask");
    vkCmdDispatchBase = xx vkGetDeviceProcAddr(device, "vkCmdDispatchBase");
    vkGetImageMemoryRequirements2 = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2");
    vkGetBufferMemoryRequirements2 = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2");
    vkGetImageSparseMemoryRequirements2 = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2");
    vkTrimCommandPool = xx vkGetDeviceProcAddr(device, "vkTrimCommandPool");
    vkGetDeviceQueue2 = xx vkGetDeviceProcAddr(device, "vkGetDeviceQueue2");
    vkCreateSamplerYcbcrConversion = xx vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversion");
    vkDestroySamplerYcbcrConversion = xx vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversion");
    vkCreateDescriptorUpdateTemplate = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplate");
    vkDestroyDescriptorUpdateTemplate = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplate");
    vkUpdateDescriptorSetWithTemplate = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplate");
    vkGetDescriptorSetLayoutSupport = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSupport");
    vkCmdDrawIndirectCount = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCount");
    vkCmdDrawIndexedIndirectCount = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCount");
    vkCreateRenderPass2 = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass2");
    vkCmdBeginRenderPass2 = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass2");
    vkCmdNextSubpass2 = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass2");
    vkCmdEndRenderPass2 = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass2");
    vkResetQueryPool = xx vkGetDeviceProcAddr(device, "vkResetQueryPool");
    vkGetSemaphoreCounterValue = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreCounterValue");
    vkWaitSemaphores = xx vkGetDeviceProcAddr(device, "vkWaitSemaphores");
    vkSignalSemaphore = xx vkGetDeviceProcAddr(device, "vkSignalSemaphore");
    vkGetBufferDeviceAddress = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddress");
    vkGetBufferOpaqueCaptureAddress = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureAddress");
    vkGetDeviceMemoryOpaqueCaptureAddress = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryOpaqueCaptureAddress");
    vkCreatePrivateDataSlot = xx vkGetDeviceProcAddr(device, "vkCreatePrivateDataSlot");
    vkDestroyPrivateDataSlot = xx vkGetDeviceProcAddr(device, "vkDestroyPrivateDataSlot");
    vkSetPrivateData = xx vkGetDeviceProcAddr(device, "vkSetPrivateData");
    vkGetPrivateData = xx vkGetDeviceProcAddr(device, "vkGetPrivateData");
    vkCmdSetEvent2 = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent2");
    vkCmdResetEvent2 = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent2");
    vkCmdWaitEvents2 = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents2");
    vkCmdPipelineBarrier2 = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier2");
    vkCmdWriteTimestamp2 = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp2");
    vkQueueSubmit2 = xx vkGetDeviceProcAddr(device, "vkQueueSubmit2");
    vkCmdCopyBuffer2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer2");
    vkCmdCopyImage2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage2");
    vkCmdCopyBufferToImage2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage2");
    vkCmdCopyImageToBuffer2 = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer2");
    vkCmdBlitImage2 = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage2");
    vkCmdResolveImage2 = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage2");
    vkCmdBeginRendering = xx vkGetDeviceProcAddr(device, "vkCmdBeginRendering");
    vkCmdEndRendering = xx vkGetDeviceProcAddr(device, "vkCmdEndRendering");
    vkCmdSetCullMode = xx vkGetDeviceProcAddr(device, "vkCmdSetCullMode");
    vkCmdSetFrontFace = xx vkGetDeviceProcAddr(device, "vkCmdSetFrontFace");
    vkCmdSetPrimitiveTopology = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveTopology");
    vkCmdSetViewportWithCount = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWithCount");
    vkCmdSetScissorWithCount = xx vkGetDeviceProcAddr(device, "vkCmdSetScissorWithCount");
    vkCmdBindVertexBuffers2 = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers2");
    vkCmdSetDepthTestEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthTestEnable");
    vkCmdSetDepthWriteEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthWriteEnable");
    vkCmdSetDepthCompareOp = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthCompareOp");
    vkCmdSetDepthBoundsTestEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBoundsTestEnable");
    vkCmdSetStencilTestEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilTestEnable");
    vkCmdSetStencilOp = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilOp");
    vkCmdSetRasterizerDiscardEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizerDiscardEnable");
    vkCmdSetDepthBiasEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBiasEnable");
    vkCmdSetPrimitiveRestartEnable = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveRestartEnable");
    vkGetDeviceBufferMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetDeviceBufferMemoryRequirements");
    vkGetDeviceImageMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageMemoryRequirements");
    vkGetDeviceImageSparseMemoryRequirements = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSparseMemoryRequirements");
    vkCmdSetLineStipple = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStipple");
    vkMapMemory2 = xx vkGetDeviceProcAddr(device, "vkMapMemory2");
    vkUnmapMemory2 = xx vkGetDeviceProcAddr(device, "vkUnmapMemory2");
    vkCmdBindIndexBuffer2 = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer2");
    vkGetRenderingAreaGranularity = xx vkGetDeviceProcAddr(device, "vkGetRenderingAreaGranularity");
    vkGetDeviceImageSubresourceLayout = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSubresourceLayout");
    vkGetImageSubresourceLayout2 = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2");
    vkCmdPushDescriptorSet = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet");
    vkCmdPushDescriptorSetWithTemplate = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate");
    vkCmdSetRenderingAttachmentLocations = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingAttachmentLocations");
    vkCmdSetRenderingInputAttachmentIndices = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingInputAttachmentIndices");
    vkCmdBindDescriptorSets2 = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets2");
    vkCmdPushConstants2 = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants2");
    vkCmdPushDescriptorSet2 = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet2");
    vkCmdPushDescriptorSetWithTemplate2 = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate2");
    vkCopyMemoryToImage = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToImage");
    vkCopyImageToMemory = xx vkGetDeviceProcAddr(device, "vkCopyImageToMemory");
    vkCopyImageToImage = xx vkGetDeviceProcAddr(device, "vkCopyImageToImage");
    vkTransitionImageLayout = xx vkGetDeviceProcAddr(device, "vkTransitionImageLayout");
    vkCreateSwapchainKHR = xx vkGetDeviceProcAddr(device, "vkCreateSwapchainKHR");
    vkDestroySwapchainKHR = xx vkGetDeviceProcAddr(device, "vkDestroySwapchainKHR");
    vkGetSwapchainImagesKHR = xx vkGetDeviceProcAddr(device, "vkGetSwapchainImagesKHR");
    vkAcquireNextImageKHR = xx vkGetDeviceProcAddr(device, "vkAcquireNextImageKHR");
    vkQueuePresentKHR = xx vkGetDeviceProcAddr(device, "vkQueuePresentKHR");
    vkGetDeviceGroupPresentCapabilitiesKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPresentCapabilitiesKHR");
    vkGetDeviceGroupSurfacePresentModesKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupSurfacePresentModesKHR");
    vkAcquireNextImage2KHR = xx vkGetDeviceProcAddr(device, "vkAcquireNextImage2KHR");
    vkCreateSharedSwapchainsKHR = xx vkGetDeviceProcAddr(device, "vkCreateSharedSwapchainsKHR");
    vkCreateVideoSessionKHR = xx vkGetDeviceProcAddr(device, "vkCreateVideoSessionKHR");
    vkDestroyVideoSessionKHR = xx vkGetDeviceProcAddr(device, "vkDestroyVideoSessionKHR");
    vkGetVideoSessionMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetVideoSessionMemoryRequirementsKHR");
    vkBindVideoSessionMemoryKHR = xx vkGetDeviceProcAddr(device, "vkBindVideoSessionMemoryKHR");
    vkCreateVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkCreateVideoSessionParametersKHR");
    vkUpdateVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkUpdateVideoSessionParametersKHR");
    vkDestroyVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkDestroyVideoSessionParametersKHR");
    vkCmdBeginVideoCodingKHR = xx vkGetDeviceProcAddr(device, "vkCmdBeginVideoCodingKHR");
    vkCmdEndVideoCodingKHR = xx vkGetDeviceProcAddr(device, "vkCmdEndVideoCodingKHR");
    vkCmdControlVideoCodingKHR = xx vkGetDeviceProcAddr(device, "vkCmdControlVideoCodingKHR");
    vkCmdDecodeVideoKHR = xx vkGetDeviceProcAddr(device, "vkCmdDecodeVideoKHR");
    vkCmdBeginRenderingKHR = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderingKHR");
    vkCmdEndRenderingKHR = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderingKHR");
    vkGetDeviceGroupPeerMemoryFeaturesKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeaturesKHR");
    vkCmdSetDeviceMaskKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetDeviceMaskKHR");
    vkCmdDispatchBaseKHR = xx vkGetDeviceProcAddr(device, "vkCmdDispatchBaseKHR");
    vkTrimCommandPoolKHR = xx vkGetDeviceProcAddr(device, "vkTrimCommandPoolKHR");
    vkGetMemoryFdKHR = xx vkGetDeviceProcAddr(device, "vkGetMemoryFdKHR");
    vkGetMemoryFdPropertiesKHR = xx vkGetDeviceProcAddr(device, "vkGetMemoryFdPropertiesKHR");
    vkImportSemaphoreFdKHR = xx vkGetDeviceProcAddr(device, "vkImportSemaphoreFdKHR");
    vkGetSemaphoreFdKHR = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreFdKHR");
    vkCmdPushDescriptorSetKHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetKHR");
    vkCmdPushDescriptorSetWithTemplateKHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplateKHR");
    vkCreateDescriptorUpdateTemplateKHR = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplateKHR");
    vkDestroyDescriptorUpdateTemplateKHR = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplateKHR");
    vkUpdateDescriptorSetWithTemplateKHR = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplateKHR");
    vkCreateRenderPass2KHR = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass2KHR");
    vkCmdBeginRenderPass2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass2KHR");
    vkCmdNextSubpass2KHR = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass2KHR");
    vkCmdEndRenderPass2KHR = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass2KHR");
    vkGetSwapchainStatusKHR = xx vkGetDeviceProcAddr(device, "vkGetSwapchainStatusKHR");
    vkImportFenceFdKHR = xx vkGetDeviceProcAddr(device, "vkImportFenceFdKHR");
    vkGetFenceFdKHR = xx vkGetDeviceProcAddr(device, "vkGetFenceFdKHR");
    vkAcquireProfilingLockKHR = xx vkGetDeviceProcAddr(device, "vkAcquireProfilingLockKHR");
    vkReleaseProfilingLockKHR = xx vkGetDeviceProcAddr(device, "vkReleaseProfilingLockKHR");
    vkGetImageMemoryRequirements2KHR = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2KHR");
    vkGetBufferMemoryRequirements2KHR = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2KHR");
    vkGetImageSparseMemoryRequirements2KHR = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2KHR");
    vkCreateSamplerYcbcrConversionKHR = xx vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversionKHR");
    vkDestroySamplerYcbcrConversionKHR = xx vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversionKHR");
    vkBindBufferMemory2KHR = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory2KHR");
    vkBindImageMemory2KHR = xx vkGetDeviceProcAddr(device, "vkBindImageMemory2KHR");
    vkGetDescriptorSetLayoutSupportKHR = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSupportKHR");
    vkCmdDrawIndirectCountKHR = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountKHR");
    vkCmdDrawIndexedIndirectCountKHR = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountKHR");
    vkGetSemaphoreCounterValueKHR = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreCounterValueKHR");
    vkWaitSemaphoresKHR = xx vkGetDeviceProcAddr(device, "vkWaitSemaphoresKHR");
    vkSignalSemaphoreKHR = xx vkGetDeviceProcAddr(device, "vkSignalSemaphoreKHR");
    vkCmdSetFragmentShadingRateKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateKHR");
    vkCmdSetRenderingAttachmentLocationsKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingAttachmentLocationsKHR");
    vkCmdSetRenderingInputAttachmentIndicesKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingInputAttachmentIndicesKHR");
    vkWaitForPresentKHR = xx vkGetDeviceProcAddr(device, "vkWaitForPresentKHR");
    vkGetBufferDeviceAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddressKHR");
    vkGetBufferOpaqueCaptureAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureAddressKHR");
    vkGetDeviceMemoryOpaqueCaptureAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryOpaqueCaptureAddressKHR");
    vkCreateDeferredOperationKHR = xx vkGetDeviceProcAddr(device, "vkCreateDeferredOperationKHR");
    vkDestroyDeferredOperationKHR = xx vkGetDeviceProcAddr(device, "vkDestroyDeferredOperationKHR");
    vkGetDeferredOperationMaxConcurrencyKHR = xx vkGetDeviceProcAddr(device, "vkGetDeferredOperationMaxConcurrencyKHR");
    vkGetDeferredOperationResultKHR = xx vkGetDeviceProcAddr(device, "vkGetDeferredOperationResultKHR");
    vkDeferredOperationJoinKHR = xx vkGetDeviceProcAddr(device, "vkDeferredOperationJoinKHR");
    vkGetPipelineExecutablePropertiesKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutablePropertiesKHR");
    vkGetPipelineExecutableStatisticsKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutableStatisticsKHR");
    vkGetPipelineExecutableInternalRepresentationsKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutableInternalRepresentationsKHR");
    vkMapMemory2KHR = xx vkGetDeviceProcAddr(device, "vkMapMemory2KHR");
    vkUnmapMemory2KHR = xx vkGetDeviceProcAddr(device, "vkUnmapMemory2KHR");
    vkGetEncodedVideoSessionParametersKHR = xx vkGetDeviceProcAddr(device, "vkGetEncodedVideoSessionParametersKHR");
    vkCmdEncodeVideoKHR = xx vkGetDeviceProcAddr(device, "vkCmdEncodeVideoKHR");
    vkCmdSetEvent2KHR = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent2KHR");
    vkCmdResetEvent2KHR = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent2KHR");
    vkCmdWaitEvents2KHR = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents2KHR");
    vkCmdPipelineBarrier2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier2KHR");
    vkCmdWriteTimestamp2KHR = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp2KHR");
    vkQueueSubmit2KHR = xx vkGetDeviceProcAddr(device, "vkQueueSubmit2KHR");
    vkCmdCopyBuffer2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer2KHR");
    vkCmdCopyImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage2KHR");
    vkCmdCopyBufferToImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage2KHR");
    vkCmdCopyImageToBuffer2KHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer2KHR");
    vkCmdBlitImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage2KHR");
    vkCmdResolveImage2KHR = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage2KHR");
    vkCmdTraceRaysIndirect2KHR = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirect2KHR");
    vkGetDeviceBufferMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceBufferMemoryRequirementsKHR");
    vkGetDeviceImageMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageMemoryRequirementsKHR");
    vkGetDeviceImageSparseMemoryRequirementsKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSparseMemoryRequirementsKHR");
    vkCmdBindIndexBuffer2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer2KHR");
    vkGetRenderingAreaGranularityKHR = xx vkGetDeviceProcAddr(device, "vkGetRenderingAreaGranularityKHR");
    vkGetDeviceImageSubresourceLayoutKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSubresourceLayoutKHR");
    vkGetImageSubresourceLayout2KHR = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2KHR");
    vkCreatePipelineBinariesKHR = xx vkGetDeviceProcAddr(device, "vkCreatePipelineBinariesKHR");
    vkDestroyPipelineBinaryKHR = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineBinaryKHR");
    vkGetPipelineKeyKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineKeyKHR");
    vkGetPipelineBinaryDataKHR = xx vkGetDeviceProcAddr(device, "vkGetPipelineBinaryDataKHR");
    vkReleaseCapturedPipelineDataKHR = xx vkGetDeviceProcAddr(device, "vkReleaseCapturedPipelineDataKHR");
    vkCmdSetLineStippleKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleKHR");
    vkGetCalibratedTimestampsKHR = xx vkGetDeviceProcAddr(device, "vkGetCalibratedTimestampsKHR");
    vkCmdBindDescriptorSets2KHR = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets2KHR");
    vkCmdPushConstants2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants2KHR");
    vkCmdPushDescriptorSet2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet2KHR");
    vkCmdPushDescriptorSetWithTemplate2KHR = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate2KHR");
    vkCmdSetDescriptorBufferOffsets2EXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDescriptorBufferOffsets2EXT");
    vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT");
    vkDebugMarkerSetObjectTagEXT = xx vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectTagEXT");
    vkDebugMarkerSetObjectNameEXT = xx vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectNameEXT");
    vkCmdDebugMarkerBeginEXT = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerBeginEXT");
    vkCmdDebugMarkerEndEXT = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerEndEXT");
    vkCmdDebugMarkerInsertEXT = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerInsertEXT");
    vkCmdBindTransformFeedbackBuffersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindTransformFeedbackBuffersEXT");
    vkCmdBeginTransformFeedbackEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginTransformFeedbackEXT");
    vkCmdEndTransformFeedbackEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndTransformFeedbackEXT");
    vkCmdBeginQueryIndexedEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginQueryIndexedEXT");
    vkCmdEndQueryIndexedEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndQueryIndexedEXT");
    vkCmdDrawIndirectByteCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectByteCountEXT");
    vkCreateCuModuleNVX = xx vkGetDeviceProcAddr(device, "vkCreateCuModuleNVX");
    vkCreateCuFunctionNVX = xx vkGetDeviceProcAddr(device, "vkCreateCuFunctionNVX");
    vkDestroyCuModuleNVX = xx vkGetDeviceProcAddr(device, "vkDestroyCuModuleNVX");
    vkDestroyCuFunctionNVX = xx vkGetDeviceProcAddr(device, "vkDestroyCuFunctionNVX");
    vkCmdCuLaunchKernelNVX = xx vkGetDeviceProcAddr(device, "vkCmdCuLaunchKernelNVX");
    vkGetImageViewHandleNVX = xx vkGetDeviceProcAddr(device, "vkGetImageViewHandleNVX");
    vkGetImageViewHandle64NVX = xx vkGetDeviceProcAddr(device, "vkGetImageViewHandle64NVX");
    vkGetImageViewAddressNVX = xx vkGetDeviceProcAddr(device, "vkGetImageViewAddressNVX");
    vkCmdDrawIndirectCountAMD = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountAMD");
    vkCmdDrawIndexedIndirectCountAMD = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountAMD");
    vkGetShaderInfoAMD = xx vkGetDeviceProcAddr(device, "vkGetShaderInfoAMD");
    vkCmdBeginConditionalRenderingEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginConditionalRenderingEXT");
    vkCmdEndConditionalRenderingEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndConditionalRenderingEXT");
    vkCmdSetViewportWScalingNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingNV");
    vkDisplayPowerControlEXT = xx vkGetDeviceProcAddr(device, "vkDisplayPowerControlEXT");
    vkRegisterDeviceEventEXT = xx vkGetDeviceProcAddr(device, "vkRegisterDeviceEventEXT");
    vkRegisterDisplayEventEXT = xx vkGetDeviceProcAddr(device, "vkRegisterDisplayEventEXT");
    vkGetSwapchainCounterEXT = xx vkGetDeviceProcAddr(device, "vkGetSwapchainCounterEXT");
    vkGetRefreshCycleDurationGOOGLE = xx vkGetDeviceProcAddr(device, "vkGetRefreshCycleDurationGOOGLE");
    vkGetPastPresentationTimingGOOGLE = xx vkGetDeviceProcAddr(device, "vkGetPastPresentationTimingGOOGLE");
    vkCmdSetDiscardRectangleEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEXT");
    vkCmdSetDiscardRectangleEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEnableEXT");
    vkCmdSetDiscardRectangleModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleModeEXT");
    vkSetHdrMetadataEXT = xx vkGetDeviceProcAddr(device, "vkSetHdrMetadataEXT");
    vkSetDebugUtilsObjectNameEXT = xx vkGetDeviceProcAddr(device, "vkSetDebugUtilsObjectNameEXT");
    vkSetDebugUtilsObjectTagEXT = xx vkGetDeviceProcAddr(device, "vkSetDebugUtilsObjectTagEXT");
    vkQueueBeginDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkQueueBeginDebugUtilsLabelEXT");
    vkQueueEndDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkQueueEndDebugUtilsLabelEXT");
    vkQueueInsertDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkQueueInsertDebugUtilsLabelEXT");
    vkCmdBeginDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkCmdBeginDebugUtilsLabelEXT");
    vkCmdEndDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkCmdEndDebugUtilsLabelEXT");
    vkCmdInsertDebugUtilsLabelEXT = xx vkGetDeviceProcAddr(device, "vkCmdInsertDebugUtilsLabelEXT");
    vkCmdSetSampleLocationsEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEXT");
    vkGetImageDrmFormatModifierPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkGetImageDrmFormatModifierPropertiesEXT");
    vkCreateValidationCacheEXT = xx vkGetDeviceProcAddr(device, "vkCreateValidationCacheEXT");
    vkDestroyValidationCacheEXT = xx vkGetDeviceProcAddr(device, "vkDestroyValidationCacheEXT");
    vkMergeValidationCachesEXT = xx vkGetDeviceProcAddr(device, "vkMergeValidationCachesEXT");
    vkGetValidationCacheDataEXT = xx vkGetDeviceProcAddr(device, "vkGetValidationCacheDataEXT");
    vkCmdBindShadingRateImageNV = xx vkGetDeviceProcAddr(device, "vkCmdBindShadingRateImageNV");
    vkCmdSetViewportShadingRatePaletteNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportShadingRatePaletteNV");
    vkCmdSetCoarseSampleOrderNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoarseSampleOrderNV");
    vkCreateAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureNV");
    vkDestroyAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureNV");
    vkGetAccelerationStructureMemoryRequirementsNV = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureMemoryRequirementsNV");
    vkBindAccelerationStructureMemoryNV = xx vkGetDeviceProcAddr(device, "vkBindAccelerationStructureMemoryNV");
    vkCmdBuildAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructureNV");
    vkCmdCopyAccelerationStructureNV = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureNV");
    vkCmdTraceRaysNV = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysNV");
    vkCreateRayTracingPipelinesNV = xx vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesNV");
    vkGetRayTracingShaderGroupHandlesKHR = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesKHR");
    vkGetRayTracingShaderGroupHandlesNV = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesNV");
    vkGetAccelerationStructureHandleNV = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureHandleNV");
    vkCmdWriteAccelerationStructuresPropertiesNV = xx vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesNV");
    vkCompileDeferredNV = xx vkGetDeviceProcAddr(device, "vkCompileDeferredNV");
    vkGetMemoryHostPointerPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkGetMemoryHostPointerPropertiesEXT");
    vkCmdWriteBufferMarkerAMD = xx vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarkerAMD");
    vkCmdWriteBufferMarker2AMD = xx vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarker2AMD");
    vkGetCalibratedTimestampsEXT = xx vkGetDeviceProcAddr(device, "vkGetCalibratedTimestampsEXT");
    vkCmdDrawMeshTasksNV = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksNV");
    vkCmdDrawMeshTasksIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectNV");
    vkCmdDrawMeshTasksIndirectCountNV = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountNV");
    vkCmdSetExclusiveScissorEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorEnableNV");
    vkCmdSetExclusiveScissorNV = xx vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorNV");
    vkCmdSetCheckpointNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCheckpointNV");
    vkGetQueueCheckpointDataNV = xx vkGetDeviceProcAddr(device, "vkGetQueueCheckpointDataNV");
    vkGetQueueCheckpointData2NV = xx vkGetDeviceProcAddr(device, "vkGetQueueCheckpointData2NV");
    vkInitializePerformanceApiINTEL = xx vkGetDeviceProcAddr(device, "vkInitializePerformanceApiINTEL");
    vkUninitializePerformanceApiINTEL = xx vkGetDeviceProcAddr(device, "vkUninitializePerformanceApiINTEL");
    vkCmdSetPerformanceMarkerINTEL = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceMarkerINTEL");
    vkCmdSetPerformanceStreamMarkerINTEL = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceStreamMarkerINTEL");
    vkCmdSetPerformanceOverrideINTEL = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceOverrideINTEL");
    vkAcquirePerformanceConfigurationINTEL = xx vkGetDeviceProcAddr(device, "vkAcquirePerformanceConfigurationINTEL");
    vkReleasePerformanceConfigurationINTEL = xx vkGetDeviceProcAddr(device, "vkReleasePerformanceConfigurationINTEL");
    vkQueueSetPerformanceConfigurationINTEL = xx vkGetDeviceProcAddr(device, "vkQueueSetPerformanceConfigurationINTEL");
    vkGetPerformanceParameterINTEL = xx vkGetDeviceProcAddr(device, "vkGetPerformanceParameterINTEL");
    vkSetLocalDimmingAMD = xx vkGetDeviceProcAddr(device, "vkSetLocalDimmingAMD");
    vkGetBufferDeviceAddressEXT = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddressEXT");
    vkCmdSetLineStippleEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleEXT");
    vkResetQueryPoolEXT = xx vkGetDeviceProcAddr(device, "vkResetQueryPoolEXT");
    vkCmdSetCullModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetCullModeEXT");
    vkCmdSetFrontFaceEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetFrontFaceEXT");
    vkCmdSetPrimitiveTopologyEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveTopologyEXT");
    vkCmdSetViewportWithCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWithCountEXT");
    vkCmdSetScissorWithCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetScissorWithCountEXT");
    vkCmdBindVertexBuffers2EXT = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers2EXT");
    vkCmdSetDepthTestEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthTestEnableEXT");
    vkCmdSetDepthWriteEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthWriteEnableEXT");
    vkCmdSetDepthCompareOpEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthCompareOpEXT");
    vkCmdSetDepthBoundsTestEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBoundsTestEnableEXT");
    vkCmdSetStencilTestEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilTestEnableEXT");
    vkCmdSetStencilOpEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilOpEXT");
    vkCopyMemoryToImageEXT = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToImageEXT");
    vkCopyImageToMemoryEXT = xx vkGetDeviceProcAddr(device, "vkCopyImageToMemoryEXT");
    vkCopyImageToImageEXT = xx vkGetDeviceProcAddr(device, "vkCopyImageToImageEXT");
    vkTransitionImageLayoutEXT = xx vkGetDeviceProcAddr(device, "vkTransitionImageLayoutEXT");
    vkGetImageSubresourceLayout2EXT = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2EXT");
    vkReleaseSwapchainImagesEXT = xx vkGetDeviceProcAddr(device, "vkReleaseSwapchainImagesEXT");
    vkGetGeneratedCommandsMemoryRequirementsNV = xx vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsNV");
    vkCmdPreprocessGeneratedCommandsNV = xx vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsNV");
    vkCmdExecuteGeneratedCommandsNV = xx vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsNV");
    vkCmdBindPipelineShaderGroupNV = xx vkGetDeviceProcAddr(device, "vkCmdBindPipelineShaderGroupNV");
    vkCreateIndirectCommandsLayoutNV = xx vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutNV");
    vkDestroyIndirectCommandsLayoutNV = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutNV");
    vkCmdSetDepthBias2EXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBias2EXT");
    vkCreatePrivateDataSlotEXT = xx vkGetDeviceProcAddr(device, "vkCreatePrivateDataSlotEXT");
    vkDestroyPrivateDataSlotEXT = xx vkGetDeviceProcAddr(device, "vkDestroyPrivateDataSlotEXT");
    vkSetPrivateDataEXT = xx vkGetDeviceProcAddr(device, "vkSetPrivateDataEXT");
    vkGetPrivateDataEXT = xx vkGetDeviceProcAddr(device, "vkGetPrivateDataEXT");
    vkCreateCudaModuleNV = xx vkGetDeviceProcAddr(device, "vkCreateCudaModuleNV");
    vkGetCudaModuleCacheNV = xx vkGetDeviceProcAddr(device, "vkGetCudaModuleCacheNV");
    vkCreateCudaFunctionNV = xx vkGetDeviceProcAddr(device, "vkCreateCudaFunctionNV");
    vkDestroyCudaModuleNV = xx vkGetDeviceProcAddr(device, "vkDestroyCudaModuleNV");
    vkDestroyCudaFunctionNV = xx vkGetDeviceProcAddr(device, "vkDestroyCudaFunctionNV");
    vkCmdCudaLaunchKernelNV = xx vkGetDeviceProcAddr(device, "vkCmdCudaLaunchKernelNV");
    vkCmdDispatchTileQCOM = xx vkGetDeviceProcAddr(device, "vkCmdDispatchTileQCOM");
    vkCmdBeginPerTileExecutionQCOM = xx vkGetDeviceProcAddr(device, "vkCmdBeginPerTileExecutionQCOM");
    vkCmdEndPerTileExecutionQCOM = xx vkGetDeviceProcAddr(device, "vkCmdEndPerTileExecutionQCOM");
    vkGetDescriptorSetLayoutSizeEXT = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSizeEXT");
    vkGetDescriptorSetLayoutBindingOffsetEXT = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutBindingOffsetEXT");
    vkGetDescriptorEXT = xx vkGetDeviceProcAddr(device, "vkGetDescriptorEXT");
    vkCmdBindDescriptorBuffersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBuffersEXT");
    vkCmdSetDescriptorBufferOffsetsEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDescriptorBufferOffsetsEXT");
    vkCmdBindDescriptorBufferEmbeddedSamplersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT");
    vkGetBufferOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureDescriptorDataEXT");
    vkGetImageOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetImageOpaqueCaptureDescriptorDataEXT");
    vkGetImageViewOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetImageViewOpaqueCaptureDescriptorDataEXT");
    vkGetSamplerOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetSamplerOpaqueCaptureDescriptorDataEXT");
    vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");
    vkCmdSetFragmentShadingRateEnumNV = xx vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateEnumNV");
    vkGetDeviceFaultInfoEXT = xx vkGetDeviceProcAddr(device, "vkGetDeviceFaultInfoEXT");
    vkCmdSetVertexInputEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetVertexInputEXT");
    vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = xx vkGetDeviceProcAddr(device, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");
    vkCmdSubpassShadingHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdSubpassShadingHUAWEI");
    vkCmdBindInvocationMaskHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdBindInvocationMaskHUAWEI");
    vkGetMemoryRemoteAddressNV = xx vkGetDeviceProcAddr(device, "vkGetMemoryRemoteAddressNV");
    vkGetPipelinePropertiesEXT = xx vkGetDeviceProcAddr(device, "vkGetPipelinePropertiesEXT");
    vkCmdSetPatchControlPointsEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPatchControlPointsEXT");
    vkCmdSetRasterizerDiscardEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizerDiscardEnableEXT");
    vkCmdSetDepthBiasEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBiasEnableEXT");
    vkCmdSetLogicOpEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEXT");
    vkCmdSetPrimitiveRestartEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveRestartEnableEXT");
    vkCmdSetColorWriteEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorWriteEnableEXT");
    vkCmdDrawMultiEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMultiEXT");
    vkCmdDrawMultiIndexedEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMultiIndexedEXT");
    vkCreateMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCreateMicromapEXT");
    vkDestroyMicromapEXT = xx vkGetDeviceProcAddr(device, "vkDestroyMicromapEXT");
    vkCmdBuildMicromapsEXT = xx vkGetDeviceProcAddr(device, "vkCmdBuildMicromapsEXT");
    vkBuildMicromapsEXT = xx vkGetDeviceProcAddr(device, "vkBuildMicromapsEXT");
    vkCopyMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCopyMicromapEXT");
    vkCopyMicromapToMemoryEXT = xx vkGetDeviceProcAddr(device, "vkCopyMicromapToMemoryEXT");
    vkCopyMemoryToMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToMicromapEXT");
    vkWriteMicromapsPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkWriteMicromapsPropertiesEXT");
    vkCmdCopyMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCmdCopyMicromapEXT");
    vkCmdCopyMicromapToMemoryEXT = xx vkGetDeviceProcAddr(device, "vkCmdCopyMicromapToMemoryEXT");
    vkCmdCopyMemoryToMicromapEXT = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToMicromapEXT");
    vkCmdWriteMicromapsPropertiesEXT = xx vkGetDeviceProcAddr(device, "vkCmdWriteMicromapsPropertiesEXT");
    vkGetDeviceMicromapCompatibilityEXT = xx vkGetDeviceProcAddr(device, "vkGetDeviceMicromapCompatibilityEXT");
    vkGetMicromapBuildSizesEXT = xx vkGetDeviceProcAddr(device, "vkGetMicromapBuildSizesEXT");
    vkCmdDrawClusterHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdDrawClusterHUAWEI");
    vkCmdDrawClusterIndirectHUAWEI = xx vkGetDeviceProcAddr(device, "vkCmdDrawClusterIndirectHUAWEI");
    vkSetDeviceMemoryPriorityEXT = xx vkGetDeviceProcAddr(device, "vkSetDeviceMemoryPriorityEXT");
    vkGetDescriptorSetLayoutHostMappingInfoVALVE = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutHostMappingInfoVALVE");
    vkGetDescriptorSetHostMappingVALVE = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetHostMappingVALVE");
    vkCmdCopyMemoryIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryIndirectNV");
    vkCmdCopyMemoryToImageIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToImageIndirectNV");
    vkCmdDecompressMemoryNV = xx vkGetDeviceProcAddr(device, "vkCmdDecompressMemoryNV");
    vkCmdDecompressMemoryIndirectCountNV = xx vkGetDeviceProcAddr(device, "vkCmdDecompressMemoryIndirectCountNV");
    vkGetPipelineIndirectMemoryRequirementsNV = xx vkGetDeviceProcAddr(device, "vkGetPipelineIndirectMemoryRequirementsNV");
    vkCmdUpdatePipelineIndirectBufferNV = xx vkGetDeviceProcAddr(device, "vkCmdUpdatePipelineIndirectBufferNV");
    vkGetPipelineIndirectDeviceAddressNV = xx vkGetDeviceProcAddr(device, "vkGetPipelineIndirectDeviceAddressNV");
    vkCmdSetDepthClampEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClampEnableEXT");
    vkCmdSetPolygonModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetPolygonModeEXT");
    vkCmdSetRasterizationSamplesEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizationSamplesEXT");
    vkCmdSetSampleMaskEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleMaskEXT");
    vkCmdSetAlphaToCoverageEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetAlphaToCoverageEnableEXT");
    vkCmdSetAlphaToOneEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetAlphaToOneEnableEXT");
    vkCmdSetLogicOpEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEnableEXT");
    vkCmdSetColorBlendEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendEnableEXT");
    vkCmdSetColorBlendEquationEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendEquationEXT");
    vkCmdSetColorWriteMaskEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorWriteMaskEXT");
    vkCmdSetTessellationDomainOriginEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetTessellationDomainOriginEXT");
    vkCmdSetRasterizationStreamEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizationStreamEXT");
    vkCmdSetConservativeRasterizationModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetConservativeRasterizationModeEXT");
    vkCmdSetExtraPrimitiveOverestimationSizeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetExtraPrimitiveOverestimationSizeEXT");
    vkCmdSetDepthClipEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClipEnableEXT");
    vkCmdSetSampleLocationsEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEnableEXT");
    vkCmdSetColorBlendAdvancedEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendAdvancedEXT");
    vkCmdSetProvokingVertexModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetProvokingVertexModeEXT");
    vkCmdSetLineRasterizationModeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLineRasterizationModeEXT");
    vkCmdSetLineStippleEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleEnableEXT");
    vkCmdSetDepthClipNegativeOneToOneEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClipNegativeOneToOneEXT");
    vkCmdSetViewportWScalingEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingEnableNV");
    vkCmdSetViewportSwizzleNV = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportSwizzleNV");
    vkCmdSetCoverageToColorEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageToColorEnableNV");
    vkCmdSetCoverageToColorLocationNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageToColorLocationNV");
    vkCmdSetCoverageModulationModeNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationModeNV");
    vkCmdSetCoverageModulationTableEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationTableEnableNV");
    vkCmdSetCoverageModulationTableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationTableNV");
    vkCmdSetShadingRateImageEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetShadingRateImageEnableNV");
    vkCmdSetRepresentativeFragmentTestEnableNV = xx vkGetDeviceProcAddr(device, "vkCmdSetRepresentativeFragmentTestEnableNV");
    vkCmdSetCoverageReductionModeNV = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageReductionModeNV");
    vkGetShaderModuleIdentifierEXT = xx vkGetDeviceProcAddr(device, "vkGetShaderModuleIdentifierEXT");
    vkGetShaderModuleCreateInfoIdentifierEXT = xx vkGetDeviceProcAddr(device, "vkGetShaderModuleCreateInfoIdentifierEXT");
    vkCreateOpticalFlowSessionNV = xx vkGetDeviceProcAddr(device, "vkCreateOpticalFlowSessionNV");
    vkDestroyOpticalFlowSessionNV = xx vkGetDeviceProcAddr(device, "vkDestroyOpticalFlowSessionNV");
    vkBindOpticalFlowSessionImageNV = xx vkGetDeviceProcAddr(device, "vkBindOpticalFlowSessionImageNV");
    vkCmdOpticalFlowExecuteNV = xx vkGetDeviceProcAddr(device, "vkCmdOpticalFlowExecuteNV");
    vkAntiLagUpdateAMD = xx vkGetDeviceProcAddr(device, "vkAntiLagUpdateAMD");
    vkCreateShadersEXT = xx vkGetDeviceProcAddr(device, "vkCreateShadersEXT");
    vkDestroyShaderEXT = xx vkGetDeviceProcAddr(device, "vkDestroyShaderEXT");
    vkGetShaderBinaryDataEXT = xx vkGetDeviceProcAddr(device, "vkGetShaderBinaryDataEXT");
    vkCmdBindShadersEXT = xx vkGetDeviceProcAddr(device, "vkCmdBindShadersEXT");
    vkCmdSetDepthClampRangeEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClampRangeEXT");
    vkGetFramebufferTilePropertiesQCOM = xx vkGetDeviceProcAddr(device, "vkGetFramebufferTilePropertiesQCOM");
    vkGetDynamicRenderingTilePropertiesQCOM = xx vkGetDeviceProcAddr(device, "vkGetDynamicRenderingTilePropertiesQCOM");
    vkConvertCooperativeVectorMatrixNV = xx vkGetDeviceProcAddr(device, "vkConvertCooperativeVectorMatrixNV");
    vkCmdConvertCooperativeVectorMatrixNV = xx vkGetDeviceProcAddr(device, "vkCmdConvertCooperativeVectorMatrixNV");
    vkSetLatencySleepModeNV = xx vkGetDeviceProcAddr(device, "vkSetLatencySleepModeNV");
    vkLatencySleepNV = xx vkGetDeviceProcAddr(device, "vkLatencySleepNV");
    vkSetLatencyMarkerNV = xx vkGetDeviceProcAddr(device, "vkSetLatencyMarkerNV");
    vkGetLatencyTimingsNV = xx vkGetDeviceProcAddr(device, "vkGetLatencyTimingsNV");
    vkQueueNotifyOutOfBandNV = xx vkGetDeviceProcAddr(device, "vkQueueNotifyOutOfBandNV");
    vkCmdSetAttachmentFeedbackLoopEnableEXT = xx vkGetDeviceProcAddr(device, "vkCmdSetAttachmentFeedbackLoopEnableEXT");
    vkCmdBindTileMemoryQCOM = xx vkGetDeviceProcAddr(device, "vkCmdBindTileMemoryQCOM");
    vkCreateExternalComputeQueueNV = xx vkGetDeviceProcAddr(device, "vkCreateExternalComputeQueueNV");
    vkDestroyExternalComputeQueueNV = xx vkGetDeviceProcAddr(device, "vkDestroyExternalComputeQueueNV");
    vkGetClusterAccelerationStructureBuildSizesNV = xx vkGetDeviceProcAddr(device, "vkGetClusterAccelerationStructureBuildSizesNV");
    vkCmdBuildClusterAccelerationStructureIndirectNV = xx vkGetDeviceProcAddr(device, "vkCmdBuildClusterAccelerationStructureIndirectNV");
    vkGetPartitionedAccelerationStructuresBuildSizesNV = xx vkGetDeviceProcAddr(device, "vkGetPartitionedAccelerationStructuresBuildSizesNV");
    vkCmdBuildPartitionedAccelerationStructuresNV = xx vkGetDeviceProcAddr(device, "vkCmdBuildPartitionedAccelerationStructuresNV");
    vkGetGeneratedCommandsMemoryRequirementsEXT = xx vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsEXT");
    vkCmdPreprocessGeneratedCommandsEXT = xx vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsEXT");
    vkCmdExecuteGeneratedCommandsEXT = xx vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsEXT");
    vkCreateIndirectCommandsLayoutEXT = xx vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutEXT");
    vkDestroyIndirectCommandsLayoutEXT = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutEXT");
    vkCreateIndirectExecutionSetEXT = xx vkGetDeviceProcAddr(device, "vkCreateIndirectExecutionSetEXT");
    vkDestroyIndirectExecutionSetEXT = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectExecutionSetEXT");
    vkUpdateIndirectExecutionSetPipelineEXT = xx vkGetDeviceProcAddr(device, "vkUpdateIndirectExecutionSetPipelineEXT");
    vkUpdateIndirectExecutionSetShaderEXT = xx vkGetDeviceProcAddr(device, "vkUpdateIndirectExecutionSetShaderEXT");
    vkCmdEndRendering2EXT = xx vkGetDeviceProcAddr(device, "vkCmdEndRendering2EXT");
    vkCreateAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureKHR");
    vkDestroyAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureKHR");
    vkCmdBuildAccelerationStructuresKHR = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresKHR");
    vkCmdBuildAccelerationStructuresIndirectKHR = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresIndirectKHR");
    vkBuildAccelerationStructuresKHR = xx vkGetDeviceProcAddr(device, "vkBuildAccelerationStructuresKHR");
    vkCopyAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureKHR");
    vkCopyAccelerationStructureToMemoryKHR = xx vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureToMemoryKHR");
    vkCopyMemoryToAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToAccelerationStructureKHR");
    vkWriteAccelerationStructuresPropertiesKHR = xx vkGetDeviceProcAddr(device, "vkWriteAccelerationStructuresPropertiesKHR");
    vkCmdCopyAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureKHR");
    vkCmdCopyAccelerationStructureToMemoryKHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureToMemoryKHR");
    vkCmdCopyMemoryToAccelerationStructureKHR = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToAccelerationStructureKHR");
    vkGetAccelerationStructureDeviceAddressKHR = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureDeviceAddressKHR");
    vkCmdWriteAccelerationStructuresPropertiesKHR = xx vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesKHR");
    vkGetDeviceAccelerationStructureCompatibilityKHR = xx vkGetDeviceProcAddr(device, "vkGetDeviceAccelerationStructureCompatibilityKHR");
    vkGetAccelerationStructureBuildSizesKHR = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureBuildSizesKHR");
    vkCmdTraceRaysKHR = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysKHR");
    vkCreateRayTracingPipelinesKHR = xx vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesKHR");
    vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = xx vkGetDeviceProcAddr(device, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");
    vkCmdTraceRaysIndirectKHR = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirectKHR");
    vkGetRayTracingShaderGroupStackSizeKHR = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupStackSizeKHR");
    vkCmdSetRayTracingPipelineStackSizeKHR = xx vkGetDeviceProcAddr(device, "vkCmdSetRayTracingPipelineStackSizeKHR");
    vkCmdDrawMeshTasksEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksEXT");
    vkCmdDrawMeshTasksIndirectEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectEXT");
    vkCmdDrawMeshTasksIndirectCountEXT = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountEXT");
    vkGetAndroidHardwareBufferPropertiesANDROID = xx vkGetDeviceProcAddr(device, "vkGetAndroidHardwareBufferPropertiesANDROID");
    vkGetMemoryAndroidHardwareBufferANDROID = xx vkGetDeviceProcAddr(device, "vkGetMemoryAndroidHardwareBufferANDROID");
    vkCreateExecutionGraphPipelinesAMDX = xx vkGetDeviceProcAddr(device, "vkCreateExecutionGraphPipelinesAMDX");
    vkGetExecutionGraphPipelineScratchSizeAMDX = xx vkGetDeviceProcAddr(device, "vkGetExecutionGraphPipelineScratchSizeAMDX");
    vkGetExecutionGraphPipelineNodeIndexAMDX = xx vkGetDeviceProcAddr(device, "vkGetExecutionGraphPipelineNodeIndexAMDX");
    vkCmdInitializeGraphScratchMemoryAMDX = xx vkGetDeviceProcAddr(device, "vkCmdInitializeGraphScratchMemoryAMDX");
    vkCmdDispatchGraphAMDX = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphAMDX");
    vkCmdDispatchGraphIndirectAMDX = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphIndirectAMDX");
    vkCmdDispatchGraphIndirectCountAMDX = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphIndirectCountAMDX");
}

load_instance_proc_addresses :: (instance: VkInstance) {
    vkDestroyInstance = xx vkGetInstanceProcAddr(instance, "vkDestroyInstance");
    vkEnumeratePhysicalDevices = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDevices");
    vkGetPhysicalDeviceFeatures = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures");
    vkGetPhysicalDeviceFormatProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties");
    vkGetPhysicalDeviceImageFormatProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties");
    vkGetPhysicalDeviceProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties");
    vkGetPhysicalDeviceQueueFamilyProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties");
    vkGetPhysicalDeviceMemoryProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties");
    vkGetInstanceProcAddr = xx vkGetInstanceProcAddr(instance, "vkGetInstanceProcAddr");
    vkGetDeviceProcAddr = xx vkGetInstanceProcAddr(instance, "vkGetDeviceProcAddr");
    vkCreateDevice = xx vkGetInstanceProcAddr(instance, "vkCreateDevice");
    vkEnumerateDeviceExtensionProperties = xx vkGetInstanceProcAddr(instance, "vkEnumerateDeviceExtensionProperties");
    vkEnumerateDeviceLayerProperties = xx vkGetInstanceProcAddr(instance, "vkEnumerateDeviceLayerProperties");
    vkGetPhysicalDeviceSparseImageFormatProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties");
    vkEnumeratePhysicalDeviceGroups = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceGroups");
    vkGetPhysicalDeviceFeatures2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures2");
    vkGetPhysicalDeviceProperties2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties2");
    vkGetPhysicalDeviceFormatProperties2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties2");
    vkGetPhysicalDeviceImageFormatProperties2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties2");
    vkGetPhysicalDeviceQueueFamilyProperties2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties2");
    vkGetPhysicalDeviceMemoryProperties2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties2");
    vkGetPhysicalDeviceSparseImageFormatProperties2 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties2");
    vkGetPhysicalDeviceExternalBufferProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalBufferProperties");
    vkGetPhysicalDeviceExternalFenceProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalFenceProperties");
    vkGetPhysicalDeviceExternalSemaphoreProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalSemaphoreProperties");
    vkGetPhysicalDeviceToolProperties = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceToolProperties");
    vkDestroySurfaceKHR = xx vkGetInstanceProcAddr(instance, "vkDestroySurfaceKHR");
    vkGetPhysicalDeviceSurfaceSupportKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceSupportKHR");
    vkGetPhysicalDeviceSurfaceCapabilitiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR");
    vkGetPhysicalDeviceSurfaceFormatsKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormatsKHR");
    vkGetPhysicalDeviceSurfacePresentModesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfacePresentModesKHR");
    vkGetPhysicalDevicePresentRectanglesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDevicePresentRectanglesKHR");
    vkGetPhysicalDeviceDisplayPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPropertiesKHR");
    vkGetPhysicalDeviceDisplayPlanePropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR");
    vkGetDisplayPlaneSupportedDisplaysKHR = xx vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneSupportedDisplaysKHR");
    vkGetDisplayModePropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetDisplayModePropertiesKHR");
    vkCreateDisplayModeKHR = xx vkGetInstanceProcAddr(instance, "vkCreateDisplayModeKHR");
    vkGetDisplayPlaneCapabilitiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilitiesKHR");
    vkCreateDisplayPlaneSurfaceKHR = xx vkGetInstanceProcAddr(instance, "vkCreateDisplayPlaneSurfaceKHR");
    vkGetPhysicalDeviceVideoCapabilitiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceVideoCapabilitiesKHR");
    vkGetPhysicalDeviceVideoFormatPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceVideoFormatPropertiesKHR");
    vkGetPhysicalDeviceFeatures2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures2KHR");
    vkGetPhysicalDeviceProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties2KHR");
    vkGetPhysicalDeviceFormatProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties2KHR");
    vkGetPhysicalDeviceImageFormatProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties2KHR");
    vkGetPhysicalDeviceQueueFamilyProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties2KHR");
    vkGetPhysicalDeviceMemoryProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties2KHR");
    vkGetPhysicalDeviceSparseImageFormatProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR");
    vkEnumeratePhysicalDeviceGroupsKHR = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceGroupsKHR");
    vkGetPhysicalDeviceExternalBufferPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalBufferPropertiesKHR");
    vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR");
    vkGetPhysicalDeviceExternalFencePropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalFencePropertiesKHR");
    vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR");
    vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR");
    vkGetPhysicalDeviceSurfaceCapabilities2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR");
    vkGetPhysicalDeviceSurfaceFormats2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormats2KHR");
    vkGetPhysicalDeviceDisplayProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayProperties2KHR");
    vkGetPhysicalDeviceDisplayPlaneProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR");
    vkGetDisplayModeProperties2KHR = xx vkGetInstanceProcAddr(instance, "vkGetDisplayModeProperties2KHR");
    vkGetDisplayPlaneCapabilities2KHR = xx vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilities2KHR");
    vkGetPhysicalDeviceFragmentShadingRatesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFragmentShadingRatesKHR");
    vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR");
    vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR");
    vkGetPhysicalDeviceCalibrateableTimeDomainsKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR");
    vkCreateDebugReportCallbackEXT = xx vkGetInstanceProcAddr(instance, "vkCreateDebugReportCallbackEXT");
    vkDestroyDebugReportCallbackEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyDebugReportCallbackEXT");
    vkDebugReportMessageEXT = xx vkGetInstanceProcAddr(instance, "vkDebugReportMessageEXT");
    vkGetPhysicalDeviceExternalImageFormatPropertiesNV = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV");
    vkReleaseDisplayEXT = xx vkGetInstanceProcAddr(instance, "vkReleaseDisplayEXT");
    vkGetPhysicalDeviceSurfaceCapabilities2EXT = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT");
    vkCreateDebugUtilsMessengerEXT = xx vkGetInstanceProcAddr(instance, "vkCreateDebugUtilsMessengerEXT");
    vkDestroyDebugUtilsMessengerEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyDebugUtilsMessengerEXT");
    vkSubmitDebugUtilsMessageEXT = xx vkGetInstanceProcAddr(instance, "vkSubmitDebugUtilsMessageEXT");
    vkGetPhysicalDeviceMultisamplePropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMultisamplePropertiesEXT");
    vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT");
    vkGetPhysicalDeviceToolPropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceToolPropertiesEXT");
    vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV");
    vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV");
    vkCreateHeadlessSurfaceEXT = xx vkGetInstanceProcAddr(instance, "vkCreateHeadlessSurfaceEXT");
    vkAcquireDrmDisplayEXT = xx vkGetInstanceProcAddr(instance, "vkAcquireDrmDisplayEXT");
    vkGetDrmDisplayEXT = xx vkGetInstanceProcAddr(instance, "vkGetDrmDisplayEXT");
    vkGetPhysicalDeviceOpticalFlowImageFormatsNV = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceOpticalFlowImageFormatsNV");
    vkGetPhysicalDeviceCooperativeVectorPropertiesNV = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeVectorPropertiesNV");
    vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV");
    vkCreateAndroidSurfaceKHR = xx vkGetInstanceProcAddr(instance, "vkCreateAndroidSurfaceKHR");
    vkCreateWaylandSurfaceKHR = xx vkGetInstanceProcAddr(instance, "vkCreateWaylandSurfaceKHR");
    vkGetPhysicalDeviceWaylandPresentationSupportKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWaylandPresentationSupportKHR");
    vkCreateXcbSurfaceKHR = xx vkGetInstanceProcAddr(instance, "vkCreateXcbSurfaceKHR");
    vkGetPhysicalDeviceXcbPresentationSupportKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXcbPresentationSupportKHR");
    vkCreateXlibSurfaceKHR = xx vkGetInstanceProcAddr(instance, "vkCreateXlibSurfaceKHR");
    vkGetPhysicalDeviceXlibPresentationSupportKHR = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXlibPresentationSupportKHR");
    vkDestroyDevice = xx vkGetInstanceProcAddr(instance, "vkDestroyDevice");
    vkGetDeviceQueue = xx vkGetInstanceProcAddr(instance, "vkGetDeviceQueue");
    vkQueueSubmit = xx vkGetInstanceProcAddr(instance, "vkQueueSubmit");
    vkQueueWaitIdle = xx vkGetInstanceProcAddr(instance, "vkQueueWaitIdle");
    vkDeviceWaitIdle = xx vkGetInstanceProcAddr(instance, "vkDeviceWaitIdle");
    vkAllocateMemory = xx vkGetInstanceProcAddr(instance, "vkAllocateMemory");
    vkFreeMemory = xx vkGetInstanceProcAddr(instance, "vkFreeMemory");
    vkMapMemory = xx vkGetInstanceProcAddr(instance, "vkMapMemory");
    vkUnmapMemory = xx vkGetInstanceProcAddr(instance, "vkUnmapMemory");
    vkFlushMappedMemoryRanges = xx vkGetInstanceProcAddr(instance, "vkFlushMappedMemoryRanges");
    vkInvalidateMappedMemoryRanges = xx vkGetInstanceProcAddr(instance, "vkInvalidateMappedMemoryRanges");
    vkGetDeviceMemoryCommitment = xx vkGetInstanceProcAddr(instance, "vkGetDeviceMemoryCommitment");
    vkBindBufferMemory = xx vkGetInstanceProcAddr(instance, "vkBindBufferMemory");
    vkBindImageMemory = xx vkGetInstanceProcAddr(instance, "vkBindImageMemory");
    vkGetBufferMemoryRequirements = xx vkGetInstanceProcAddr(instance, "vkGetBufferMemoryRequirements");
    vkGetImageMemoryRequirements = xx vkGetInstanceProcAddr(instance, "vkGetImageMemoryRequirements");
    vkGetImageSparseMemoryRequirements = xx vkGetInstanceProcAddr(instance, "vkGetImageSparseMemoryRequirements");
    vkQueueBindSparse = xx vkGetInstanceProcAddr(instance, "vkQueueBindSparse");
    vkCreateFence = xx vkGetInstanceProcAddr(instance, "vkCreateFence");
    vkDestroyFence = xx vkGetInstanceProcAddr(instance, "vkDestroyFence");
    vkResetFences = xx vkGetInstanceProcAddr(instance, "vkResetFences");
    vkGetFenceStatus = xx vkGetInstanceProcAddr(instance, "vkGetFenceStatus");
    vkWaitForFences = xx vkGetInstanceProcAddr(instance, "vkWaitForFences");
    vkCreateSemaphore = xx vkGetInstanceProcAddr(instance, "vkCreateSemaphore");
    vkDestroySemaphore = xx vkGetInstanceProcAddr(instance, "vkDestroySemaphore");
    vkCreateEvent = xx vkGetInstanceProcAddr(instance, "vkCreateEvent");
    vkDestroyEvent = xx vkGetInstanceProcAddr(instance, "vkDestroyEvent");
    vkGetEventStatus = xx vkGetInstanceProcAddr(instance, "vkGetEventStatus");
    vkSetEvent = xx vkGetInstanceProcAddr(instance, "vkSetEvent");
    vkResetEvent = xx vkGetInstanceProcAddr(instance, "vkResetEvent");
    vkCreateQueryPool = xx vkGetInstanceProcAddr(instance, "vkCreateQueryPool");
    vkDestroyQueryPool = xx vkGetInstanceProcAddr(instance, "vkDestroyQueryPool");
    vkGetQueryPoolResults = xx vkGetInstanceProcAddr(instance, "vkGetQueryPoolResults");
    vkCreateBuffer = xx vkGetInstanceProcAddr(instance, "vkCreateBuffer");
    vkDestroyBuffer = xx vkGetInstanceProcAddr(instance, "vkDestroyBuffer");
    vkCreateBufferView = xx vkGetInstanceProcAddr(instance, "vkCreateBufferView");
    vkDestroyBufferView = xx vkGetInstanceProcAddr(instance, "vkDestroyBufferView");
    vkCreateImage = xx vkGetInstanceProcAddr(instance, "vkCreateImage");
    vkDestroyImage = xx vkGetInstanceProcAddr(instance, "vkDestroyImage");
    vkGetImageSubresourceLayout = xx vkGetInstanceProcAddr(instance, "vkGetImageSubresourceLayout");
    vkCreateImageView = xx vkGetInstanceProcAddr(instance, "vkCreateImageView");
    vkDestroyImageView = xx vkGetInstanceProcAddr(instance, "vkDestroyImageView");
    vkCreateShaderModule = xx vkGetInstanceProcAddr(instance, "vkCreateShaderModule");
    vkDestroyShaderModule = xx vkGetInstanceProcAddr(instance, "vkDestroyShaderModule");
    vkCreatePipelineCache = xx vkGetInstanceProcAddr(instance, "vkCreatePipelineCache");
    vkDestroyPipelineCache = xx vkGetInstanceProcAddr(instance, "vkDestroyPipelineCache");
    vkGetPipelineCacheData = xx vkGetInstanceProcAddr(instance, "vkGetPipelineCacheData");
    vkMergePipelineCaches = xx vkGetInstanceProcAddr(instance, "vkMergePipelineCaches");
    vkCreateGraphicsPipelines = xx vkGetInstanceProcAddr(instance, "vkCreateGraphicsPipelines");
    vkCreateComputePipelines = xx vkGetInstanceProcAddr(instance, "vkCreateComputePipelines");
    vkDestroyPipeline = xx vkGetInstanceProcAddr(instance, "vkDestroyPipeline");
    vkCreatePipelineLayout = xx vkGetInstanceProcAddr(instance, "vkCreatePipelineLayout");
    vkDestroyPipelineLayout = xx vkGetInstanceProcAddr(instance, "vkDestroyPipelineLayout");
    vkCreateSampler = xx vkGetInstanceProcAddr(instance, "vkCreateSampler");
    vkDestroySampler = xx vkGetInstanceProcAddr(instance, "vkDestroySampler");
    vkCreateDescriptorSetLayout = xx vkGetInstanceProcAddr(instance, "vkCreateDescriptorSetLayout");
    vkDestroyDescriptorSetLayout = xx vkGetInstanceProcAddr(instance, "vkDestroyDescriptorSetLayout");
    vkCreateDescriptorPool = xx vkGetInstanceProcAddr(instance, "vkCreateDescriptorPool");
    vkDestroyDescriptorPool = xx vkGetInstanceProcAddr(instance, "vkDestroyDescriptorPool");
    vkResetDescriptorPool = xx vkGetInstanceProcAddr(instance, "vkResetDescriptorPool");
    vkAllocateDescriptorSets = xx vkGetInstanceProcAddr(instance, "vkAllocateDescriptorSets");
    vkFreeDescriptorSets = xx vkGetInstanceProcAddr(instance, "vkFreeDescriptorSets");
    vkUpdateDescriptorSets = xx vkGetInstanceProcAddr(instance, "vkUpdateDescriptorSets");
    vkCreateFramebuffer = xx vkGetInstanceProcAddr(instance, "vkCreateFramebuffer");
    vkDestroyFramebuffer = xx vkGetInstanceProcAddr(instance, "vkDestroyFramebuffer");
    vkCreateRenderPass = xx vkGetInstanceProcAddr(instance, "vkCreateRenderPass");
    vkDestroyRenderPass = xx vkGetInstanceProcAddr(instance, "vkDestroyRenderPass");
    vkGetRenderAreaGranularity = xx vkGetInstanceProcAddr(instance, "vkGetRenderAreaGranularity");
    vkCreateCommandPool = xx vkGetInstanceProcAddr(instance, "vkCreateCommandPool");
    vkDestroyCommandPool = xx vkGetInstanceProcAddr(instance, "vkDestroyCommandPool");
    vkResetCommandPool = xx vkGetInstanceProcAddr(instance, "vkResetCommandPool");
    vkAllocateCommandBuffers = xx vkGetInstanceProcAddr(instance, "vkAllocateCommandBuffers");
    vkFreeCommandBuffers = xx vkGetInstanceProcAddr(instance, "vkFreeCommandBuffers");
    vkBeginCommandBuffer = xx vkGetInstanceProcAddr(instance, "vkBeginCommandBuffer");
    vkEndCommandBuffer = xx vkGetInstanceProcAddr(instance, "vkEndCommandBuffer");
    vkResetCommandBuffer = xx vkGetInstanceProcAddr(instance, "vkResetCommandBuffer");
    vkCmdBindPipeline = xx vkGetInstanceProcAddr(instance, "vkCmdBindPipeline");
    vkCmdSetViewport = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewport");
    vkCmdSetScissor = xx vkGetInstanceProcAddr(instance, "vkCmdSetScissor");
    vkCmdSetLineWidth = xx vkGetInstanceProcAddr(instance, "vkCmdSetLineWidth");
    vkCmdSetDepthBias = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBias");
    vkCmdSetBlendConstants = xx vkGetInstanceProcAddr(instance, "vkCmdSetBlendConstants");
    vkCmdSetDepthBounds = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBounds");
    vkCmdSetStencilCompareMask = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilCompareMask");
    vkCmdSetStencilWriteMask = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilWriteMask");
    vkCmdSetStencilReference = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilReference");
    vkCmdBindDescriptorSets = xx vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorSets");
    vkCmdBindIndexBuffer = xx vkGetInstanceProcAddr(instance, "vkCmdBindIndexBuffer");
    vkCmdBindVertexBuffers = xx vkGetInstanceProcAddr(instance, "vkCmdBindVertexBuffers");
    vkCmdDraw = xx vkGetInstanceProcAddr(instance, "vkCmdDraw");
    vkCmdDrawIndexed = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndexed");
    vkCmdDrawIndirect = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndirect");
    vkCmdDrawIndexedIndirect = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndexedIndirect");
    vkCmdDispatch = xx vkGetInstanceProcAddr(instance, "vkCmdDispatch");
    vkCmdDispatchIndirect = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchIndirect");
    vkCmdCopyBuffer = xx vkGetInstanceProcAddr(instance, "vkCmdCopyBuffer");
    vkCmdCopyImage = xx vkGetInstanceProcAddr(instance, "vkCmdCopyImage");
    vkCmdBlitImage = xx vkGetInstanceProcAddr(instance, "vkCmdBlitImage");
    vkCmdCopyBufferToImage = xx vkGetInstanceProcAddr(instance, "vkCmdCopyBufferToImage");
    vkCmdCopyImageToBuffer = xx vkGetInstanceProcAddr(instance, "vkCmdCopyImageToBuffer");
    vkCmdUpdateBuffer = xx vkGetInstanceProcAddr(instance, "vkCmdUpdateBuffer");
    vkCmdFillBuffer = xx vkGetInstanceProcAddr(instance, "vkCmdFillBuffer");
    vkCmdClearColorImage = xx vkGetInstanceProcAddr(instance, "vkCmdClearColorImage");
    vkCmdClearDepthStencilImage = xx vkGetInstanceProcAddr(instance, "vkCmdClearDepthStencilImage");
    vkCmdClearAttachments = xx vkGetInstanceProcAddr(instance, "vkCmdClearAttachments");
    vkCmdResolveImage = xx vkGetInstanceProcAddr(instance, "vkCmdResolveImage");
    vkCmdSetEvent = xx vkGetInstanceProcAddr(instance, "vkCmdSetEvent");
    vkCmdResetEvent = xx vkGetInstanceProcAddr(instance, "vkCmdResetEvent");
    vkCmdWaitEvents = xx vkGetInstanceProcAddr(instance, "vkCmdWaitEvents");
    vkCmdPipelineBarrier = xx vkGetInstanceProcAddr(instance, "vkCmdPipelineBarrier");
    vkCmdBeginQuery = xx vkGetInstanceProcAddr(instance, "vkCmdBeginQuery");
    vkCmdEndQuery = xx vkGetInstanceProcAddr(instance, "vkCmdEndQuery");
    vkCmdResetQueryPool = xx vkGetInstanceProcAddr(instance, "vkCmdResetQueryPool");
    vkCmdWriteTimestamp = xx vkGetInstanceProcAddr(instance, "vkCmdWriteTimestamp");
    vkCmdCopyQueryPoolResults = xx vkGetInstanceProcAddr(instance, "vkCmdCopyQueryPoolResults");
    vkCmdPushConstants = xx vkGetInstanceProcAddr(instance, "vkCmdPushConstants");
    vkCmdBeginRenderPass = xx vkGetInstanceProcAddr(instance, "vkCmdBeginRenderPass");
    vkCmdNextSubpass = xx vkGetInstanceProcAddr(instance, "vkCmdNextSubpass");
    vkCmdEndRenderPass = xx vkGetInstanceProcAddr(instance, "vkCmdEndRenderPass");
    vkCmdExecuteCommands = xx vkGetInstanceProcAddr(instance, "vkCmdExecuteCommands");
    vkBindBufferMemory2 = xx vkGetInstanceProcAddr(instance, "vkBindBufferMemory2");
    vkBindImageMemory2 = xx vkGetInstanceProcAddr(instance, "vkBindImageMemory2");
    vkGetDeviceGroupPeerMemoryFeatures = xx vkGetInstanceProcAddr(instance, "vkGetDeviceGroupPeerMemoryFeatures");
    vkCmdSetDeviceMask = xx vkGetInstanceProcAddr(instance, "vkCmdSetDeviceMask");
    vkCmdDispatchBase = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchBase");
    vkGetImageMemoryRequirements2 = xx vkGetInstanceProcAddr(instance, "vkGetImageMemoryRequirements2");
    vkGetBufferMemoryRequirements2 = xx vkGetInstanceProcAddr(instance, "vkGetBufferMemoryRequirements2");
    vkGetImageSparseMemoryRequirements2 = xx vkGetInstanceProcAddr(instance, "vkGetImageSparseMemoryRequirements2");
    vkTrimCommandPool = xx vkGetInstanceProcAddr(instance, "vkTrimCommandPool");
    vkGetDeviceQueue2 = xx vkGetInstanceProcAddr(instance, "vkGetDeviceQueue2");
    vkCreateSamplerYcbcrConversion = xx vkGetInstanceProcAddr(instance, "vkCreateSamplerYcbcrConversion");
    vkDestroySamplerYcbcrConversion = xx vkGetInstanceProcAddr(instance, "vkDestroySamplerYcbcrConversion");
    vkCreateDescriptorUpdateTemplate = xx vkGetInstanceProcAddr(instance, "vkCreateDescriptorUpdateTemplate");
    vkDestroyDescriptorUpdateTemplate = xx vkGetInstanceProcAddr(instance, "vkDestroyDescriptorUpdateTemplate");
    vkUpdateDescriptorSetWithTemplate = xx vkGetInstanceProcAddr(instance, "vkUpdateDescriptorSetWithTemplate");
    vkGetDescriptorSetLayoutSupport = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorSetLayoutSupport");
    vkCmdDrawIndirectCount = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndirectCount");
    vkCmdDrawIndexedIndirectCount = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndexedIndirectCount");
    vkCreateRenderPass2 = xx vkGetInstanceProcAddr(instance, "vkCreateRenderPass2");
    vkCmdBeginRenderPass2 = xx vkGetInstanceProcAddr(instance, "vkCmdBeginRenderPass2");
    vkCmdNextSubpass2 = xx vkGetInstanceProcAddr(instance, "vkCmdNextSubpass2");
    vkCmdEndRenderPass2 = xx vkGetInstanceProcAddr(instance, "vkCmdEndRenderPass2");
    vkResetQueryPool = xx vkGetInstanceProcAddr(instance, "vkResetQueryPool");
    vkGetSemaphoreCounterValue = xx vkGetInstanceProcAddr(instance, "vkGetSemaphoreCounterValue");
    vkWaitSemaphores = xx vkGetInstanceProcAddr(instance, "vkWaitSemaphores");
    vkSignalSemaphore = xx vkGetInstanceProcAddr(instance, "vkSignalSemaphore");
    vkGetBufferDeviceAddress = xx vkGetInstanceProcAddr(instance, "vkGetBufferDeviceAddress");
    vkGetBufferOpaqueCaptureAddress = xx vkGetInstanceProcAddr(instance, "vkGetBufferOpaqueCaptureAddress");
    vkGetDeviceMemoryOpaqueCaptureAddress = xx vkGetInstanceProcAddr(instance, "vkGetDeviceMemoryOpaqueCaptureAddress");
    vkCreatePrivateDataSlot = xx vkGetInstanceProcAddr(instance, "vkCreatePrivateDataSlot");
    vkDestroyPrivateDataSlot = xx vkGetInstanceProcAddr(instance, "vkDestroyPrivateDataSlot");
    vkSetPrivateData = xx vkGetInstanceProcAddr(instance, "vkSetPrivateData");
    vkGetPrivateData = xx vkGetInstanceProcAddr(instance, "vkGetPrivateData");
    vkCmdSetEvent2 = xx vkGetInstanceProcAddr(instance, "vkCmdSetEvent2");
    vkCmdResetEvent2 = xx vkGetInstanceProcAddr(instance, "vkCmdResetEvent2");
    vkCmdWaitEvents2 = xx vkGetInstanceProcAddr(instance, "vkCmdWaitEvents2");
    vkCmdPipelineBarrier2 = xx vkGetInstanceProcAddr(instance, "vkCmdPipelineBarrier2");
    vkCmdWriteTimestamp2 = xx vkGetInstanceProcAddr(instance, "vkCmdWriteTimestamp2");
    vkQueueSubmit2 = xx vkGetInstanceProcAddr(instance, "vkQueueSubmit2");
    vkCmdCopyBuffer2 = xx vkGetInstanceProcAddr(instance, "vkCmdCopyBuffer2");
    vkCmdCopyImage2 = xx vkGetInstanceProcAddr(instance, "vkCmdCopyImage2");
    vkCmdCopyBufferToImage2 = xx vkGetInstanceProcAddr(instance, "vkCmdCopyBufferToImage2");
    vkCmdCopyImageToBuffer2 = xx vkGetInstanceProcAddr(instance, "vkCmdCopyImageToBuffer2");
    vkCmdBlitImage2 = xx vkGetInstanceProcAddr(instance, "vkCmdBlitImage2");
    vkCmdResolveImage2 = xx vkGetInstanceProcAddr(instance, "vkCmdResolveImage2");
    vkCmdBeginRendering = xx vkGetInstanceProcAddr(instance, "vkCmdBeginRendering");
    vkCmdEndRendering = xx vkGetInstanceProcAddr(instance, "vkCmdEndRendering");
    vkCmdSetCullMode = xx vkGetInstanceProcAddr(instance, "vkCmdSetCullMode");
    vkCmdSetFrontFace = xx vkGetInstanceProcAddr(instance, "vkCmdSetFrontFace");
    vkCmdSetPrimitiveTopology = xx vkGetInstanceProcAddr(instance, "vkCmdSetPrimitiveTopology");
    vkCmdSetViewportWithCount = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewportWithCount");
    vkCmdSetScissorWithCount = xx vkGetInstanceProcAddr(instance, "vkCmdSetScissorWithCount");
    vkCmdBindVertexBuffers2 = xx vkGetInstanceProcAddr(instance, "vkCmdBindVertexBuffers2");
    vkCmdSetDepthTestEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthTestEnable");
    vkCmdSetDepthWriteEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthWriteEnable");
    vkCmdSetDepthCompareOp = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthCompareOp");
    vkCmdSetDepthBoundsTestEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBoundsTestEnable");
    vkCmdSetStencilTestEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilTestEnable");
    vkCmdSetStencilOp = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilOp");
    vkCmdSetRasterizerDiscardEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetRasterizerDiscardEnable");
    vkCmdSetDepthBiasEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBiasEnable");
    vkCmdSetPrimitiveRestartEnable = xx vkGetInstanceProcAddr(instance, "vkCmdSetPrimitiveRestartEnable");
    vkGetDeviceBufferMemoryRequirements = xx vkGetInstanceProcAddr(instance, "vkGetDeviceBufferMemoryRequirements");
    vkGetDeviceImageMemoryRequirements = xx vkGetInstanceProcAddr(instance, "vkGetDeviceImageMemoryRequirements");
    vkGetDeviceImageSparseMemoryRequirements = xx vkGetInstanceProcAddr(instance, "vkGetDeviceImageSparseMemoryRequirements");
    vkCmdSetLineStipple = xx vkGetInstanceProcAddr(instance, "vkCmdSetLineStipple");
    vkMapMemory2 = xx vkGetInstanceProcAddr(instance, "vkMapMemory2");
    vkUnmapMemory2 = xx vkGetInstanceProcAddr(instance, "vkUnmapMemory2");
    vkCmdBindIndexBuffer2 = xx vkGetInstanceProcAddr(instance, "vkCmdBindIndexBuffer2");
    vkGetRenderingAreaGranularity = xx vkGetInstanceProcAddr(instance, "vkGetRenderingAreaGranularity");
    vkGetDeviceImageSubresourceLayout = xx vkGetInstanceProcAddr(instance, "vkGetDeviceImageSubresourceLayout");
    vkGetImageSubresourceLayout2 = xx vkGetInstanceProcAddr(instance, "vkGetImageSubresourceLayout2");
    vkCmdPushDescriptorSet = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSet");
    vkCmdPushDescriptorSetWithTemplate = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetWithTemplate");
    vkCmdSetRenderingAttachmentLocations = xx vkGetInstanceProcAddr(instance, "vkCmdSetRenderingAttachmentLocations");
    vkCmdSetRenderingInputAttachmentIndices = xx vkGetInstanceProcAddr(instance, "vkCmdSetRenderingInputAttachmentIndices");
    vkCmdBindDescriptorSets2 = xx vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorSets2");
    vkCmdPushConstants2 = xx vkGetInstanceProcAddr(instance, "vkCmdPushConstants2");
    vkCmdPushDescriptorSet2 = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSet2");
    vkCmdPushDescriptorSetWithTemplate2 = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetWithTemplate2");
    vkCopyMemoryToImage = xx vkGetInstanceProcAddr(instance, "vkCopyMemoryToImage");
    vkCopyImageToMemory = xx vkGetInstanceProcAddr(instance, "vkCopyImageToMemory");
    vkCopyImageToImage = xx vkGetInstanceProcAddr(instance, "vkCopyImageToImage");
    vkTransitionImageLayout = xx vkGetInstanceProcAddr(instance, "vkTransitionImageLayout");
    vkCreateSwapchainKHR = xx vkGetInstanceProcAddr(instance, "vkCreateSwapchainKHR");
    vkDestroySwapchainKHR = xx vkGetInstanceProcAddr(instance, "vkDestroySwapchainKHR");
    vkGetSwapchainImagesKHR = xx vkGetInstanceProcAddr(instance, "vkGetSwapchainImagesKHR");
    vkAcquireNextImageKHR = xx vkGetInstanceProcAddr(instance, "vkAcquireNextImageKHR");
    vkQueuePresentKHR = xx vkGetInstanceProcAddr(instance, "vkQueuePresentKHR");
    vkGetDeviceGroupPresentCapabilitiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceGroupPresentCapabilitiesKHR");
    vkGetDeviceGroupSurfacePresentModesKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceGroupSurfacePresentModesKHR");
    vkAcquireNextImage2KHR = xx vkGetInstanceProcAddr(instance, "vkAcquireNextImage2KHR");
    vkCreateSharedSwapchainsKHR = xx vkGetInstanceProcAddr(instance, "vkCreateSharedSwapchainsKHR");
    vkCreateVideoSessionKHR = xx vkGetInstanceProcAddr(instance, "vkCreateVideoSessionKHR");
    vkDestroyVideoSessionKHR = xx vkGetInstanceProcAddr(instance, "vkDestroyVideoSessionKHR");
    vkGetVideoSessionMemoryRequirementsKHR = xx vkGetInstanceProcAddr(instance, "vkGetVideoSessionMemoryRequirementsKHR");
    vkBindVideoSessionMemoryKHR = xx vkGetInstanceProcAddr(instance, "vkBindVideoSessionMemoryKHR");
    vkCreateVideoSessionParametersKHR = xx vkGetInstanceProcAddr(instance, "vkCreateVideoSessionParametersKHR");
    vkUpdateVideoSessionParametersKHR = xx vkGetInstanceProcAddr(instance, "vkUpdateVideoSessionParametersKHR");
    vkDestroyVideoSessionParametersKHR = xx vkGetInstanceProcAddr(instance, "vkDestroyVideoSessionParametersKHR");
    vkCmdBeginVideoCodingKHR = xx vkGetInstanceProcAddr(instance, "vkCmdBeginVideoCodingKHR");
    vkCmdEndVideoCodingKHR = xx vkGetInstanceProcAddr(instance, "vkCmdEndVideoCodingKHR");
    vkCmdControlVideoCodingKHR = xx vkGetInstanceProcAddr(instance, "vkCmdControlVideoCodingKHR");
    vkCmdDecodeVideoKHR = xx vkGetInstanceProcAddr(instance, "vkCmdDecodeVideoKHR");
    vkCmdBeginRenderingKHR = xx vkGetInstanceProcAddr(instance, "vkCmdBeginRenderingKHR");
    vkCmdEndRenderingKHR = xx vkGetInstanceProcAddr(instance, "vkCmdEndRenderingKHR");
    vkGetDeviceGroupPeerMemoryFeaturesKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceGroupPeerMemoryFeaturesKHR");
    vkCmdSetDeviceMaskKHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetDeviceMaskKHR");
    vkCmdDispatchBaseKHR = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchBaseKHR");
    vkTrimCommandPoolKHR = xx vkGetInstanceProcAddr(instance, "vkTrimCommandPoolKHR");
    vkGetMemoryFdKHR = xx vkGetInstanceProcAddr(instance, "vkGetMemoryFdKHR");
    vkGetMemoryFdPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetMemoryFdPropertiesKHR");
    vkImportSemaphoreFdKHR = xx vkGetInstanceProcAddr(instance, "vkImportSemaphoreFdKHR");
    vkGetSemaphoreFdKHR = xx vkGetInstanceProcAddr(instance, "vkGetSemaphoreFdKHR");
    vkCmdPushDescriptorSetKHR = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetKHR");
    vkCmdPushDescriptorSetWithTemplateKHR = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetWithTemplateKHR");
    vkCreateDescriptorUpdateTemplateKHR = xx vkGetInstanceProcAddr(instance, "vkCreateDescriptorUpdateTemplateKHR");
    vkDestroyDescriptorUpdateTemplateKHR = xx vkGetInstanceProcAddr(instance, "vkDestroyDescriptorUpdateTemplateKHR");
    vkUpdateDescriptorSetWithTemplateKHR = xx vkGetInstanceProcAddr(instance, "vkUpdateDescriptorSetWithTemplateKHR");
    vkCreateRenderPass2KHR = xx vkGetInstanceProcAddr(instance, "vkCreateRenderPass2KHR");
    vkCmdBeginRenderPass2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdBeginRenderPass2KHR");
    vkCmdNextSubpass2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdNextSubpass2KHR");
    vkCmdEndRenderPass2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdEndRenderPass2KHR");
    vkGetSwapchainStatusKHR = xx vkGetInstanceProcAddr(instance, "vkGetSwapchainStatusKHR");
    vkImportFenceFdKHR = xx vkGetInstanceProcAddr(instance, "vkImportFenceFdKHR");
    vkGetFenceFdKHR = xx vkGetInstanceProcAddr(instance, "vkGetFenceFdKHR");
    vkAcquireProfilingLockKHR = xx vkGetInstanceProcAddr(instance, "vkAcquireProfilingLockKHR");
    vkReleaseProfilingLockKHR = xx vkGetInstanceProcAddr(instance, "vkReleaseProfilingLockKHR");
    vkGetImageMemoryRequirements2KHR = xx vkGetInstanceProcAddr(instance, "vkGetImageMemoryRequirements2KHR");
    vkGetBufferMemoryRequirements2KHR = xx vkGetInstanceProcAddr(instance, "vkGetBufferMemoryRequirements2KHR");
    vkGetImageSparseMemoryRequirements2KHR = xx vkGetInstanceProcAddr(instance, "vkGetImageSparseMemoryRequirements2KHR");
    vkCreateSamplerYcbcrConversionKHR = xx vkGetInstanceProcAddr(instance, "vkCreateSamplerYcbcrConversionKHR");
    vkDestroySamplerYcbcrConversionKHR = xx vkGetInstanceProcAddr(instance, "vkDestroySamplerYcbcrConversionKHR");
    vkBindBufferMemory2KHR = xx vkGetInstanceProcAddr(instance, "vkBindBufferMemory2KHR");
    vkBindImageMemory2KHR = xx vkGetInstanceProcAddr(instance, "vkBindImageMemory2KHR");
    vkGetDescriptorSetLayoutSupportKHR = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorSetLayoutSupportKHR");
    vkCmdDrawIndirectCountKHR = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndirectCountKHR");
    vkCmdDrawIndexedIndirectCountKHR = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndexedIndirectCountKHR");
    vkGetSemaphoreCounterValueKHR = xx vkGetInstanceProcAddr(instance, "vkGetSemaphoreCounterValueKHR");
    vkWaitSemaphoresKHR = xx vkGetInstanceProcAddr(instance, "vkWaitSemaphoresKHR");
    vkSignalSemaphoreKHR = xx vkGetInstanceProcAddr(instance, "vkSignalSemaphoreKHR");
    vkCmdSetFragmentShadingRateKHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetFragmentShadingRateKHR");
    vkCmdSetRenderingAttachmentLocationsKHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetRenderingAttachmentLocationsKHR");
    vkCmdSetRenderingInputAttachmentIndicesKHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetRenderingInputAttachmentIndicesKHR");
    vkWaitForPresentKHR = xx vkGetInstanceProcAddr(instance, "vkWaitForPresentKHR");
    vkGetBufferDeviceAddressKHR = xx vkGetInstanceProcAddr(instance, "vkGetBufferDeviceAddressKHR");
    vkGetBufferOpaqueCaptureAddressKHR = xx vkGetInstanceProcAddr(instance, "vkGetBufferOpaqueCaptureAddressKHR");
    vkGetDeviceMemoryOpaqueCaptureAddressKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceMemoryOpaqueCaptureAddressKHR");
    vkCreateDeferredOperationKHR = xx vkGetInstanceProcAddr(instance, "vkCreateDeferredOperationKHR");
    vkDestroyDeferredOperationKHR = xx vkGetInstanceProcAddr(instance, "vkDestroyDeferredOperationKHR");
    vkGetDeferredOperationMaxConcurrencyKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeferredOperationMaxConcurrencyKHR");
    vkGetDeferredOperationResultKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeferredOperationResultKHR");
    vkDeferredOperationJoinKHR = xx vkGetInstanceProcAddr(instance, "vkDeferredOperationJoinKHR");
    vkGetPipelineExecutablePropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkGetPipelineExecutablePropertiesKHR");
    vkGetPipelineExecutableStatisticsKHR = xx vkGetInstanceProcAddr(instance, "vkGetPipelineExecutableStatisticsKHR");
    vkGetPipelineExecutableInternalRepresentationsKHR = xx vkGetInstanceProcAddr(instance, "vkGetPipelineExecutableInternalRepresentationsKHR");
    vkMapMemory2KHR = xx vkGetInstanceProcAddr(instance, "vkMapMemory2KHR");
    vkUnmapMemory2KHR = xx vkGetInstanceProcAddr(instance, "vkUnmapMemory2KHR");
    vkGetEncodedVideoSessionParametersKHR = xx vkGetInstanceProcAddr(instance, "vkGetEncodedVideoSessionParametersKHR");
    vkCmdEncodeVideoKHR = xx vkGetInstanceProcAddr(instance, "vkCmdEncodeVideoKHR");
    vkCmdSetEvent2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetEvent2KHR");
    vkCmdResetEvent2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdResetEvent2KHR");
    vkCmdWaitEvents2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdWaitEvents2KHR");
    vkCmdPipelineBarrier2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdPipelineBarrier2KHR");
    vkCmdWriteTimestamp2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdWriteTimestamp2KHR");
    vkQueueSubmit2KHR = xx vkGetInstanceProcAddr(instance, "vkQueueSubmit2KHR");
    vkCmdCopyBuffer2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyBuffer2KHR");
    vkCmdCopyImage2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyImage2KHR");
    vkCmdCopyBufferToImage2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyBufferToImage2KHR");
    vkCmdCopyImageToBuffer2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyImageToBuffer2KHR");
    vkCmdBlitImage2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdBlitImage2KHR");
    vkCmdResolveImage2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdResolveImage2KHR");
    vkCmdTraceRaysIndirect2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdTraceRaysIndirect2KHR");
    vkGetDeviceBufferMemoryRequirementsKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceBufferMemoryRequirementsKHR");
    vkGetDeviceImageMemoryRequirementsKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceImageMemoryRequirementsKHR");
    vkGetDeviceImageSparseMemoryRequirementsKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceImageSparseMemoryRequirementsKHR");
    vkCmdBindIndexBuffer2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdBindIndexBuffer2KHR");
    vkGetRenderingAreaGranularityKHR = xx vkGetInstanceProcAddr(instance, "vkGetRenderingAreaGranularityKHR");
    vkGetDeviceImageSubresourceLayoutKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceImageSubresourceLayoutKHR");
    vkGetImageSubresourceLayout2KHR = xx vkGetInstanceProcAddr(instance, "vkGetImageSubresourceLayout2KHR");
    vkCreatePipelineBinariesKHR = xx vkGetInstanceProcAddr(instance, "vkCreatePipelineBinariesKHR");
    vkDestroyPipelineBinaryKHR = xx vkGetInstanceProcAddr(instance, "vkDestroyPipelineBinaryKHR");
    vkGetPipelineKeyKHR = xx vkGetInstanceProcAddr(instance, "vkGetPipelineKeyKHR");
    vkGetPipelineBinaryDataKHR = xx vkGetInstanceProcAddr(instance, "vkGetPipelineBinaryDataKHR");
    vkReleaseCapturedPipelineDataKHR = xx vkGetInstanceProcAddr(instance, "vkReleaseCapturedPipelineDataKHR");
    vkCmdSetLineStippleKHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetLineStippleKHR");
    vkGetCalibratedTimestampsKHR = xx vkGetInstanceProcAddr(instance, "vkGetCalibratedTimestampsKHR");
    vkCmdBindDescriptorSets2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorSets2KHR");
    vkCmdPushConstants2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdPushConstants2KHR");
    vkCmdPushDescriptorSet2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSet2KHR");
    vkCmdPushDescriptorSetWithTemplate2KHR = xx vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetWithTemplate2KHR");
    vkCmdSetDescriptorBufferOffsets2EXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDescriptorBufferOffsets2EXT");
    vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = xx vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT");
    vkDebugMarkerSetObjectTagEXT = xx vkGetInstanceProcAddr(instance, "vkDebugMarkerSetObjectTagEXT");
    vkDebugMarkerSetObjectNameEXT = xx vkGetInstanceProcAddr(instance, "vkDebugMarkerSetObjectNameEXT");
    vkCmdDebugMarkerBeginEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDebugMarkerBeginEXT");
    vkCmdDebugMarkerEndEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDebugMarkerEndEXT");
    vkCmdDebugMarkerInsertEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDebugMarkerInsertEXT");
    vkCmdBindTransformFeedbackBuffersEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBindTransformFeedbackBuffersEXT");
    vkCmdBeginTransformFeedbackEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBeginTransformFeedbackEXT");
    vkCmdEndTransformFeedbackEXT = xx vkGetInstanceProcAddr(instance, "vkCmdEndTransformFeedbackEXT");
    vkCmdBeginQueryIndexedEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBeginQueryIndexedEXT");
    vkCmdEndQueryIndexedEXT = xx vkGetInstanceProcAddr(instance, "vkCmdEndQueryIndexedEXT");
    vkCmdDrawIndirectByteCountEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndirectByteCountEXT");
    vkCreateCuModuleNVX = xx vkGetInstanceProcAddr(instance, "vkCreateCuModuleNVX");
    vkCreateCuFunctionNVX = xx vkGetInstanceProcAddr(instance, "vkCreateCuFunctionNVX");
    vkDestroyCuModuleNVX = xx vkGetInstanceProcAddr(instance, "vkDestroyCuModuleNVX");
    vkDestroyCuFunctionNVX = xx vkGetInstanceProcAddr(instance, "vkDestroyCuFunctionNVX");
    vkCmdCuLaunchKernelNVX = xx vkGetInstanceProcAddr(instance, "vkCmdCuLaunchKernelNVX");
    vkGetImageViewHandleNVX = xx vkGetInstanceProcAddr(instance, "vkGetImageViewHandleNVX");
    vkGetImageViewHandle64NVX = xx vkGetInstanceProcAddr(instance, "vkGetImageViewHandle64NVX");
    vkGetImageViewAddressNVX = xx vkGetInstanceProcAddr(instance, "vkGetImageViewAddressNVX");
    vkCmdDrawIndirectCountAMD = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndirectCountAMD");
    vkCmdDrawIndexedIndirectCountAMD = xx vkGetInstanceProcAddr(instance, "vkCmdDrawIndexedIndirectCountAMD");
    vkGetShaderInfoAMD = xx vkGetInstanceProcAddr(instance, "vkGetShaderInfoAMD");
    vkCmdBeginConditionalRenderingEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBeginConditionalRenderingEXT");
    vkCmdEndConditionalRenderingEXT = xx vkGetInstanceProcAddr(instance, "vkCmdEndConditionalRenderingEXT");
    vkCmdSetViewportWScalingNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewportWScalingNV");
    vkDisplayPowerControlEXT = xx vkGetInstanceProcAddr(instance, "vkDisplayPowerControlEXT");
    vkRegisterDeviceEventEXT = xx vkGetInstanceProcAddr(instance, "vkRegisterDeviceEventEXT");
    vkRegisterDisplayEventEXT = xx vkGetInstanceProcAddr(instance, "vkRegisterDisplayEventEXT");
    vkGetSwapchainCounterEXT = xx vkGetInstanceProcAddr(instance, "vkGetSwapchainCounterEXT");
    vkGetRefreshCycleDurationGOOGLE = xx vkGetInstanceProcAddr(instance, "vkGetRefreshCycleDurationGOOGLE");
    vkGetPastPresentationTimingGOOGLE = xx vkGetInstanceProcAddr(instance, "vkGetPastPresentationTimingGOOGLE");
    vkCmdSetDiscardRectangleEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDiscardRectangleEXT");
    vkCmdSetDiscardRectangleEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDiscardRectangleEnableEXT");
    vkCmdSetDiscardRectangleModeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDiscardRectangleModeEXT");
    vkSetHdrMetadataEXT = xx vkGetInstanceProcAddr(instance, "vkSetHdrMetadataEXT");
    vkSetDebugUtilsObjectNameEXT = xx vkGetInstanceProcAddr(instance, "vkSetDebugUtilsObjectNameEXT");
    vkSetDebugUtilsObjectTagEXT = xx vkGetInstanceProcAddr(instance, "vkSetDebugUtilsObjectTagEXT");
    vkQueueBeginDebugUtilsLabelEXT = xx vkGetInstanceProcAddr(instance, "vkQueueBeginDebugUtilsLabelEXT");
    vkQueueEndDebugUtilsLabelEXT = xx vkGetInstanceProcAddr(instance, "vkQueueEndDebugUtilsLabelEXT");
    vkQueueInsertDebugUtilsLabelEXT = xx vkGetInstanceProcAddr(instance, "vkQueueInsertDebugUtilsLabelEXT");
    vkCmdBeginDebugUtilsLabelEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBeginDebugUtilsLabelEXT");
    vkCmdEndDebugUtilsLabelEXT = xx vkGetInstanceProcAddr(instance, "vkCmdEndDebugUtilsLabelEXT");
    vkCmdInsertDebugUtilsLabelEXT = xx vkGetInstanceProcAddr(instance, "vkCmdInsertDebugUtilsLabelEXT");
    vkCmdSetSampleLocationsEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetSampleLocationsEXT");
    vkGetImageDrmFormatModifierPropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkGetImageDrmFormatModifierPropertiesEXT");
    vkCreateValidationCacheEXT = xx vkGetInstanceProcAddr(instance, "vkCreateValidationCacheEXT");
    vkDestroyValidationCacheEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyValidationCacheEXT");
    vkMergeValidationCachesEXT = xx vkGetInstanceProcAddr(instance, "vkMergeValidationCachesEXT");
    vkGetValidationCacheDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetValidationCacheDataEXT");
    vkCmdBindShadingRateImageNV = xx vkGetInstanceProcAddr(instance, "vkCmdBindShadingRateImageNV");
    vkCmdSetViewportShadingRatePaletteNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewportShadingRatePaletteNV");
    vkCmdSetCoarseSampleOrderNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoarseSampleOrderNV");
    vkCreateAccelerationStructureNV = xx vkGetInstanceProcAddr(instance, "vkCreateAccelerationStructureNV");
    vkDestroyAccelerationStructureNV = xx vkGetInstanceProcAddr(instance, "vkDestroyAccelerationStructureNV");
    vkGetAccelerationStructureMemoryRequirementsNV = xx vkGetInstanceProcAddr(instance, "vkGetAccelerationStructureMemoryRequirementsNV");
    vkBindAccelerationStructureMemoryNV = xx vkGetInstanceProcAddr(instance, "vkBindAccelerationStructureMemoryNV");
    vkCmdBuildAccelerationStructureNV = xx vkGetInstanceProcAddr(instance, "vkCmdBuildAccelerationStructureNV");
    vkCmdCopyAccelerationStructureNV = xx vkGetInstanceProcAddr(instance, "vkCmdCopyAccelerationStructureNV");
    vkCmdTraceRaysNV = xx vkGetInstanceProcAddr(instance, "vkCmdTraceRaysNV");
    vkCreateRayTracingPipelinesNV = xx vkGetInstanceProcAddr(instance, "vkCreateRayTracingPipelinesNV");
    vkGetRayTracingShaderGroupHandlesKHR = xx vkGetInstanceProcAddr(instance, "vkGetRayTracingShaderGroupHandlesKHR");
    vkGetRayTracingShaderGroupHandlesNV = xx vkGetInstanceProcAddr(instance, "vkGetRayTracingShaderGroupHandlesNV");
    vkGetAccelerationStructureHandleNV = xx vkGetInstanceProcAddr(instance, "vkGetAccelerationStructureHandleNV");
    vkCmdWriteAccelerationStructuresPropertiesNV = xx vkGetInstanceProcAddr(instance, "vkCmdWriteAccelerationStructuresPropertiesNV");
    vkCompileDeferredNV = xx vkGetInstanceProcAddr(instance, "vkCompileDeferredNV");
    vkGetMemoryHostPointerPropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkGetMemoryHostPointerPropertiesEXT");
    vkCmdWriteBufferMarkerAMD = xx vkGetInstanceProcAddr(instance, "vkCmdWriteBufferMarkerAMD");
    vkCmdWriteBufferMarker2AMD = xx vkGetInstanceProcAddr(instance, "vkCmdWriteBufferMarker2AMD");
    vkGetCalibratedTimestampsEXT = xx vkGetInstanceProcAddr(instance, "vkGetCalibratedTimestampsEXT");
    vkCmdDrawMeshTasksNV = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMeshTasksNV");
    vkCmdDrawMeshTasksIndirectNV = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMeshTasksIndirectNV");
    vkCmdDrawMeshTasksIndirectCountNV = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMeshTasksIndirectCountNV");
    vkCmdSetExclusiveScissorEnableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetExclusiveScissorEnableNV");
    vkCmdSetExclusiveScissorNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetExclusiveScissorNV");
    vkCmdSetCheckpointNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCheckpointNV");
    vkGetQueueCheckpointDataNV = xx vkGetInstanceProcAddr(instance, "vkGetQueueCheckpointDataNV");
    vkGetQueueCheckpointData2NV = xx vkGetInstanceProcAddr(instance, "vkGetQueueCheckpointData2NV");
    vkInitializePerformanceApiINTEL = xx vkGetInstanceProcAddr(instance, "vkInitializePerformanceApiINTEL");
    vkUninitializePerformanceApiINTEL = xx vkGetInstanceProcAddr(instance, "vkUninitializePerformanceApiINTEL");
    vkCmdSetPerformanceMarkerINTEL = xx vkGetInstanceProcAddr(instance, "vkCmdSetPerformanceMarkerINTEL");
    vkCmdSetPerformanceStreamMarkerINTEL = xx vkGetInstanceProcAddr(instance, "vkCmdSetPerformanceStreamMarkerINTEL");
    vkCmdSetPerformanceOverrideINTEL = xx vkGetInstanceProcAddr(instance, "vkCmdSetPerformanceOverrideINTEL");
    vkAcquirePerformanceConfigurationINTEL = xx vkGetInstanceProcAddr(instance, "vkAcquirePerformanceConfigurationINTEL");
    vkReleasePerformanceConfigurationINTEL = xx vkGetInstanceProcAddr(instance, "vkReleasePerformanceConfigurationINTEL");
    vkQueueSetPerformanceConfigurationINTEL = xx vkGetInstanceProcAddr(instance, "vkQueueSetPerformanceConfigurationINTEL");
    vkGetPerformanceParameterINTEL = xx vkGetInstanceProcAddr(instance, "vkGetPerformanceParameterINTEL");
    vkSetLocalDimmingAMD = xx vkGetInstanceProcAddr(instance, "vkSetLocalDimmingAMD");
    vkGetBufferDeviceAddressEXT = xx vkGetInstanceProcAddr(instance, "vkGetBufferDeviceAddressEXT");
    vkCmdSetLineStippleEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetLineStippleEXT");
    vkResetQueryPoolEXT = xx vkGetInstanceProcAddr(instance, "vkResetQueryPoolEXT");
    vkCmdSetCullModeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetCullModeEXT");
    vkCmdSetFrontFaceEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetFrontFaceEXT");
    vkCmdSetPrimitiveTopologyEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetPrimitiveTopologyEXT");
    vkCmdSetViewportWithCountEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewportWithCountEXT");
    vkCmdSetScissorWithCountEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetScissorWithCountEXT");
    vkCmdBindVertexBuffers2EXT = xx vkGetInstanceProcAddr(instance, "vkCmdBindVertexBuffers2EXT");
    vkCmdSetDepthTestEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthTestEnableEXT");
    vkCmdSetDepthWriteEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthWriteEnableEXT");
    vkCmdSetDepthCompareOpEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthCompareOpEXT");
    vkCmdSetDepthBoundsTestEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBoundsTestEnableEXT");
    vkCmdSetStencilTestEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilTestEnableEXT");
    vkCmdSetStencilOpEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetStencilOpEXT");
    vkCopyMemoryToImageEXT = xx vkGetInstanceProcAddr(instance, "vkCopyMemoryToImageEXT");
    vkCopyImageToMemoryEXT = xx vkGetInstanceProcAddr(instance, "vkCopyImageToMemoryEXT");
    vkCopyImageToImageEXT = xx vkGetInstanceProcAddr(instance, "vkCopyImageToImageEXT");
    vkTransitionImageLayoutEXT = xx vkGetInstanceProcAddr(instance, "vkTransitionImageLayoutEXT");
    vkGetImageSubresourceLayout2EXT = xx vkGetInstanceProcAddr(instance, "vkGetImageSubresourceLayout2EXT");
    vkReleaseSwapchainImagesEXT = xx vkGetInstanceProcAddr(instance, "vkReleaseSwapchainImagesEXT");
    vkGetGeneratedCommandsMemoryRequirementsNV = xx vkGetInstanceProcAddr(instance, "vkGetGeneratedCommandsMemoryRequirementsNV");
    vkCmdPreprocessGeneratedCommandsNV = xx vkGetInstanceProcAddr(instance, "vkCmdPreprocessGeneratedCommandsNV");
    vkCmdExecuteGeneratedCommandsNV = xx vkGetInstanceProcAddr(instance, "vkCmdExecuteGeneratedCommandsNV");
    vkCmdBindPipelineShaderGroupNV = xx vkGetInstanceProcAddr(instance, "vkCmdBindPipelineShaderGroupNV");
    vkCreateIndirectCommandsLayoutNV = xx vkGetInstanceProcAddr(instance, "vkCreateIndirectCommandsLayoutNV");
    vkDestroyIndirectCommandsLayoutNV = xx vkGetInstanceProcAddr(instance, "vkDestroyIndirectCommandsLayoutNV");
    vkCmdSetDepthBias2EXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBias2EXT");
    vkCreatePrivateDataSlotEXT = xx vkGetInstanceProcAddr(instance, "vkCreatePrivateDataSlotEXT");
    vkDestroyPrivateDataSlotEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyPrivateDataSlotEXT");
    vkSetPrivateDataEXT = xx vkGetInstanceProcAddr(instance, "vkSetPrivateDataEXT");
    vkGetPrivateDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetPrivateDataEXT");
    vkCreateCudaModuleNV = xx vkGetInstanceProcAddr(instance, "vkCreateCudaModuleNV");
    vkGetCudaModuleCacheNV = xx vkGetInstanceProcAddr(instance, "vkGetCudaModuleCacheNV");
    vkCreateCudaFunctionNV = xx vkGetInstanceProcAddr(instance, "vkCreateCudaFunctionNV");
    vkDestroyCudaModuleNV = xx vkGetInstanceProcAddr(instance, "vkDestroyCudaModuleNV");
    vkDestroyCudaFunctionNV = xx vkGetInstanceProcAddr(instance, "vkDestroyCudaFunctionNV");
    vkCmdCudaLaunchKernelNV = xx vkGetInstanceProcAddr(instance, "vkCmdCudaLaunchKernelNV");
    vkCmdDispatchTileQCOM = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchTileQCOM");
    vkCmdBeginPerTileExecutionQCOM = xx vkGetInstanceProcAddr(instance, "vkCmdBeginPerTileExecutionQCOM");
    vkCmdEndPerTileExecutionQCOM = xx vkGetInstanceProcAddr(instance, "vkCmdEndPerTileExecutionQCOM");
    vkGetDescriptorSetLayoutSizeEXT = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorSetLayoutSizeEXT");
    vkGetDescriptorSetLayoutBindingOffsetEXT = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorSetLayoutBindingOffsetEXT");
    vkGetDescriptorEXT = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorEXT");
    vkCmdBindDescriptorBuffersEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorBuffersEXT");
    vkCmdSetDescriptorBufferOffsetsEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDescriptorBufferOffsetsEXT");
    vkCmdBindDescriptorBufferEmbeddedSamplersEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT");
    vkGetBufferOpaqueCaptureDescriptorDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetBufferOpaqueCaptureDescriptorDataEXT");
    vkGetImageOpaqueCaptureDescriptorDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetImageOpaqueCaptureDescriptorDataEXT");
    vkGetImageViewOpaqueCaptureDescriptorDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetImageViewOpaqueCaptureDescriptorDataEXT");
    vkGetSamplerOpaqueCaptureDescriptorDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetSamplerOpaqueCaptureDescriptorDataEXT");
    vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");
    vkCmdSetFragmentShadingRateEnumNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetFragmentShadingRateEnumNV");
    vkGetDeviceFaultInfoEXT = xx vkGetInstanceProcAddr(instance, "vkGetDeviceFaultInfoEXT");
    vkCmdSetVertexInputEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetVertexInputEXT");
    vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = xx vkGetInstanceProcAddr(instance, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");
    vkCmdSubpassShadingHUAWEI = xx vkGetInstanceProcAddr(instance, "vkCmdSubpassShadingHUAWEI");
    vkCmdBindInvocationMaskHUAWEI = xx vkGetInstanceProcAddr(instance, "vkCmdBindInvocationMaskHUAWEI");
    vkGetMemoryRemoteAddressNV = xx vkGetInstanceProcAddr(instance, "vkGetMemoryRemoteAddressNV");
    vkGetPipelinePropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkGetPipelinePropertiesEXT");
    vkCmdSetPatchControlPointsEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetPatchControlPointsEXT");
    vkCmdSetRasterizerDiscardEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetRasterizerDiscardEnableEXT");
    vkCmdSetDepthBiasEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthBiasEnableEXT");
    vkCmdSetLogicOpEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetLogicOpEXT");
    vkCmdSetPrimitiveRestartEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetPrimitiveRestartEnableEXT");
    vkCmdSetColorWriteEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetColorWriteEnableEXT");
    vkCmdDrawMultiEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMultiEXT");
    vkCmdDrawMultiIndexedEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMultiIndexedEXT");
    vkCreateMicromapEXT = xx vkGetInstanceProcAddr(instance, "vkCreateMicromapEXT");
    vkDestroyMicromapEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyMicromapEXT");
    vkCmdBuildMicromapsEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBuildMicromapsEXT");
    vkBuildMicromapsEXT = xx vkGetInstanceProcAddr(instance, "vkBuildMicromapsEXT");
    vkCopyMicromapEXT = xx vkGetInstanceProcAddr(instance, "vkCopyMicromapEXT");
    vkCopyMicromapToMemoryEXT = xx vkGetInstanceProcAddr(instance, "vkCopyMicromapToMemoryEXT");
    vkCopyMemoryToMicromapEXT = xx vkGetInstanceProcAddr(instance, "vkCopyMemoryToMicromapEXT");
    vkWriteMicromapsPropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkWriteMicromapsPropertiesEXT");
    vkCmdCopyMicromapEXT = xx vkGetInstanceProcAddr(instance, "vkCmdCopyMicromapEXT");
    vkCmdCopyMicromapToMemoryEXT = xx vkGetInstanceProcAddr(instance, "vkCmdCopyMicromapToMemoryEXT");
    vkCmdCopyMemoryToMicromapEXT = xx vkGetInstanceProcAddr(instance, "vkCmdCopyMemoryToMicromapEXT");
    vkCmdWriteMicromapsPropertiesEXT = xx vkGetInstanceProcAddr(instance, "vkCmdWriteMicromapsPropertiesEXT");
    vkGetDeviceMicromapCompatibilityEXT = xx vkGetInstanceProcAddr(instance, "vkGetDeviceMicromapCompatibilityEXT");
    vkGetMicromapBuildSizesEXT = xx vkGetInstanceProcAddr(instance, "vkGetMicromapBuildSizesEXT");
    vkCmdDrawClusterHUAWEI = xx vkGetInstanceProcAddr(instance, "vkCmdDrawClusterHUAWEI");
    vkCmdDrawClusterIndirectHUAWEI = xx vkGetInstanceProcAddr(instance, "vkCmdDrawClusterIndirectHUAWEI");
    vkSetDeviceMemoryPriorityEXT = xx vkGetInstanceProcAddr(instance, "vkSetDeviceMemoryPriorityEXT");
    vkGetDescriptorSetLayoutHostMappingInfoVALVE = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorSetLayoutHostMappingInfoVALVE");
    vkGetDescriptorSetHostMappingVALVE = xx vkGetInstanceProcAddr(instance, "vkGetDescriptorSetHostMappingVALVE");
    vkCmdCopyMemoryIndirectNV = xx vkGetInstanceProcAddr(instance, "vkCmdCopyMemoryIndirectNV");
    vkCmdCopyMemoryToImageIndirectNV = xx vkGetInstanceProcAddr(instance, "vkCmdCopyMemoryToImageIndirectNV");
    vkCmdDecompressMemoryNV = xx vkGetInstanceProcAddr(instance, "vkCmdDecompressMemoryNV");
    vkCmdDecompressMemoryIndirectCountNV = xx vkGetInstanceProcAddr(instance, "vkCmdDecompressMemoryIndirectCountNV");
    vkGetPipelineIndirectMemoryRequirementsNV = xx vkGetInstanceProcAddr(instance, "vkGetPipelineIndirectMemoryRequirementsNV");
    vkCmdUpdatePipelineIndirectBufferNV = xx vkGetInstanceProcAddr(instance, "vkCmdUpdatePipelineIndirectBufferNV");
    vkGetPipelineIndirectDeviceAddressNV = xx vkGetInstanceProcAddr(instance, "vkGetPipelineIndirectDeviceAddressNV");
    vkCmdSetDepthClampEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthClampEnableEXT");
    vkCmdSetPolygonModeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetPolygonModeEXT");
    vkCmdSetRasterizationSamplesEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetRasterizationSamplesEXT");
    vkCmdSetSampleMaskEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetSampleMaskEXT");
    vkCmdSetAlphaToCoverageEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetAlphaToCoverageEnableEXT");
    vkCmdSetAlphaToOneEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetAlphaToOneEnableEXT");
    vkCmdSetLogicOpEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetLogicOpEnableEXT");
    vkCmdSetColorBlendEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetColorBlendEnableEXT");
    vkCmdSetColorBlendEquationEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetColorBlendEquationEXT");
    vkCmdSetColorWriteMaskEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetColorWriteMaskEXT");
    vkCmdSetTessellationDomainOriginEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetTessellationDomainOriginEXT");
    vkCmdSetRasterizationStreamEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetRasterizationStreamEXT");
    vkCmdSetConservativeRasterizationModeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetConservativeRasterizationModeEXT");
    vkCmdSetExtraPrimitiveOverestimationSizeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetExtraPrimitiveOverestimationSizeEXT");
    vkCmdSetDepthClipEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthClipEnableEXT");
    vkCmdSetSampleLocationsEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetSampleLocationsEnableEXT");
    vkCmdSetColorBlendAdvancedEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetColorBlendAdvancedEXT");
    vkCmdSetProvokingVertexModeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetProvokingVertexModeEXT");
    vkCmdSetLineRasterizationModeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetLineRasterizationModeEXT");
    vkCmdSetLineStippleEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetLineStippleEnableEXT");
    vkCmdSetDepthClipNegativeOneToOneEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthClipNegativeOneToOneEXT");
    vkCmdSetViewportWScalingEnableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewportWScalingEnableNV");
    vkCmdSetViewportSwizzleNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetViewportSwizzleNV");
    vkCmdSetCoverageToColorEnableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoverageToColorEnableNV");
    vkCmdSetCoverageToColorLocationNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoverageToColorLocationNV");
    vkCmdSetCoverageModulationModeNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoverageModulationModeNV");
    vkCmdSetCoverageModulationTableEnableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoverageModulationTableEnableNV");
    vkCmdSetCoverageModulationTableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoverageModulationTableNV");
    vkCmdSetShadingRateImageEnableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetShadingRateImageEnableNV");
    vkCmdSetRepresentativeFragmentTestEnableNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetRepresentativeFragmentTestEnableNV");
    vkCmdSetCoverageReductionModeNV = xx vkGetInstanceProcAddr(instance, "vkCmdSetCoverageReductionModeNV");
    vkGetShaderModuleIdentifierEXT = xx vkGetInstanceProcAddr(instance, "vkGetShaderModuleIdentifierEXT");
    vkGetShaderModuleCreateInfoIdentifierEXT = xx vkGetInstanceProcAddr(instance, "vkGetShaderModuleCreateInfoIdentifierEXT");
    vkCreateOpticalFlowSessionNV = xx vkGetInstanceProcAddr(instance, "vkCreateOpticalFlowSessionNV");
    vkDestroyOpticalFlowSessionNV = xx vkGetInstanceProcAddr(instance, "vkDestroyOpticalFlowSessionNV");
    vkBindOpticalFlowSessionImageNV = xx vkGetInstanceProcAddr(instance, "vkBindOpticalFlowSessionImageNV");
    vkCmdOpticalFlowExecuteNV = xx vkGetInstanceProcAddr(instance, "vkCmdOpticalFlowExecuteNV");
    vkAntiLagUpdateAMD = xx vkGetInstanceProcAddr(instance, "vkAntiLagUpdateAMD");
    vkCreateShadersEXT = xx vkGetInstanceProcAddr(instance, "vkCreateShadersEXT");
    vkDestroyShaderEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyShaderEXT");
    vkGetShaderBinaryDataEXT = xx vkGetInstanceProcAddr(instance, "vkGetShaderBinaryDataEXT");
    vkCmdBindShadersEXT = xx vkGetInstanceProcAddr(instance, "vkCmdBindShadersEXT");
    vkCmdSetDepthClampRangeEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetDepthClampRangeEXT");
    vkGetFramebufferTilePropertiesQCOM = xx vkGetInstanceProcAddr(instance, "vkGetFramebufferTilePropertiesQCOM");
    vkGetDynamicRenderingTilePropertiesQCOM = xx vkGetInstanceProcAddr(instance, "vkGetDynamicRenderingTilePropertiesQCOM");
    vkConvertCooperativeVectorMatrixNV = xx vkGetInstanceProcAddr(instance, "vkConvertCooperativeVectorMatrixNV");
    vkCmdConvertCooperativeVectorMatrixNV = xx vkGetInstanceProcAddr(instance, "vkCmdConvertCooperativeVectorMatrixNV");
    vkSetLatencySleepModeNV = xx vkGetInstanceProcAddr(instance, "vkSetLatencySleepModeNV");
    vkLatencySleepNV = xx vkGetInstanceProcAddr(instance, "vkLatencySleepNV");
    vkSetLatencyMarkerNV = xx vkGetInstanceProcAddr(instance, "vkSetLatencyMarkerNV");
    vkGetLatencyTimingsNV = xx vkGetInstanceProcAddr(instance, "vkGetLatencyTimingsNV");
    vkQueueNotifyOutOfBandNV = xx vkGetInstanceProcAddr(instance, "vkQueueNotifyOutOfBandNV");
    vkCmdSetAttachmentFeedbackLoopEnableEXT = xx vkGetInstanceProcAddr(instance, "vkCmdSetAttachmentFeedbackLoopEnableEXT");
    vkCmdBindTileMemoryQCOM = xx vkGetInstanceProcAddr(instance, "vkCmdBindTileMemoryQCOM");
    vkCreateExternalComputeQueueNV = xx vkGetInstanceProcAddr(instance, "vkCreateExternalComputeQueueNV");
    vkDestroyExternalComputeQueueNV = xx vkGetInstanceProcAddr(instance, "vkDestroyExternalComputeQueueNV");
    vkGetClusterAccelerationStructureBuildSizesNV = xx vkGetInstanceProcAddr(instance, "vkGetClusterAccelerationStructureBuildSizesNV");
    vkCmdBuildClusterAccelerationStructureIndirectNV = xx vkGetInstanceProcAddr(instance, "vkCmdBuildClusterAccelerationStructureIndirectNV");
    vkGetPartitionedAccelerationStructuresBuildSizesNV = xx vkGetInstanceProcAddr(instance, "vkGetPartitionedAccelerationStructuresBuildSizesNV");
    vkCmdBuildPartitionedAccelerationStructuresNV = xx vkGetInstanceProcAddr(instance, "vkCmdBuildPartitionedAccelerationStructuresNV");
    vkGetGeneratedCommandsMemoryRequirementsEXT = xx vkGetInstanceProcAddr(instance, "vkGetGeneratedCommandsMemoryRequirementsEXT");
    vkCmdPreprocessGeneratedCommandsEXT = xx vkGetInstanceProcAddr(instance, "vkCmdPreprocessGeneratedCommandsEXT");
    vkCmdExecuteGeneratedCommandsEXT = xx vkGetInstanceProcAddr(instance, "vkCmdExecuteGeneratedCommandsEXT");
    vkCreateIndirectCommandsLayoutEXT = xx vkGetInstanceProcAddr(instance, "vkCreateIndirectCommandsLayoutEXT");
    vkDestroyIndirectCommandsLayoutEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyIndirectCommandsLayoutEXT");
    vkCreateIndirectExecutionSetEXT = xx vkGetInstanceProcAddr(instance, "vkCreateIndirectExecutionSetEXT");
    vkDestroyIndirectExecutionSetEXT = xx vkGetInstanceProcAddr(instance, "vkDestroyIndirectExecutionSetEXT");
    vkUpdateIndirectExecutionSetPipelineEXT = xx vkGetInstanceProcAddr(instance, "vkUpdateIndirectExecutionSetPipelineEXT");
    vkUpdateIndirectExecutionSetShaderEXT = xx vkGetInstanceProcAddr(instance, "vkUpdateIndirectExecutionSetShaderEXT");
    vkCmdEndRendering2EXT = xx vkGetInstanceProcAddr(instance, "vkCmdEndRendering2EXT");
    vkCreateAccelerationStructureKHR = xx vkGetInstanceProcAddr(instance, "vkCreateAccelerationStructureKHR");
    vkDestroyAccelerationStructureKHR = xx vkGetInstanceProcAddr(instance, "vkDestroyAccelerationStructureKHR");
    vkCmdBuildAccelerationStructuresKHR = xx vkGetInstanceProcAddr(instance, "vkCmdBuildAccelerationStructuresKHR");
    vkCmdBuildAccelerationStructuresIndirectKHR = xx vkGetInstanceProcAddr(instance, "vkCmdBuildAccelerationStructuresIndirectKHR");
    vkBuildAccelerationStructuresKHR = xx vkGetInstanceProcAddr(instance, "vkBuildAccelerationStructuresKHR");
    vkCopyAccelerationStructureKHR = xx vkGetInstanceProcAddr(instance, "vkCopyAccelerationStructureKHR");
    vkCopyAccelerationStructureToMemoryKHR = xx vkGetInstanceProcAddr(instance, "vkCopyAccelerationStructureToMemoryKHR");
    vkCopyMemoryToAccelerationStructureKHR = xx vkGetInstanceProcAddr(instance, "vkCopyMemoryToAccelerationStructureKHR");
    vkWriteAccelerationStructuresPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkWriteAccelerationStructuresPropertiesKHR");
    vkCmdCopyAccelerationStructureKHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyAccelerationStructureKHR");
    vkCmdCopyAccelerationStructureToMemoryKHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyAccelerationStructureToMemoryKHR");
    vkCmdCopyMemoryToAccelerationStructureKHR = xx vkGetInstanceProcAddr(instance, "vkCmdCopyMemoryToAccelerationStructureKHR");
    vkGetAccelerationStructureDeviceAddressKHR = xx vkGetInstanceProcAddr(instance, "vkGetAccelerationStructureDeviceAddressKHR");
    vkCmdWriteAccelerationStructuresPropertiesKHR = xx vkGetInstanceProcAddr(instance, "vkCmdWriteAccelerationStructuresPropertiesKHR");
    vkGetDeviceAccelerationStructureCompatibilityKHR = xx vkGetInstanceProcAddr(instance, "vkGetDeviceAccelerationStructureCompatibilityKHR");
    vkGetAccelerationStructureBuildSizesKHR = xx vkGetInstanceProcAddr(instance, "vkGetAccelerationStructureBuildSizesKHR");
    vkCmdTraceRaysKHR = xx vkGetInstanceProcAddr(instance, "vkCmdTraceRaysKHR");
    vkCreateRayTracingPipelinesKHR = xx vkGetInstanceProcAddr(instance, "vkCreateRayTracingPipelinesKHR");
    vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = xx vkGetInstanceProcAddr(instance, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");
    vkCmdTraceRaysIndirectKHR = xx vkGetInstanceProcAddr(instance, "vkCmdTraceRaysIndirectKHR");
    vkGetRayTracingShaderGroupStackSizeKHR = xx vkGetInstanceProcAddr(instance, "vkGetRayTracingShaderGroupStackSizeKHR");
    vkCmdSetRayTracingPipelineStackSizeKHR = xx vkGetInstanceProcAddr(instance, "vkCmdSetRayTracingPipelineStackSizeKHR");
    vkCmdDrawMeshTasksEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMeshTasksEXT");
    vkCmdDrawMeshTasksIndirectEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMeshTasksIndirectEXT");
    vkCmdDrawMeshTasksIndirectCountEXT = xx vkGetInstanceProcAddr(instance, "vkCmdDrawMeshTasksIndirectCountEXT");
    vkGetAndroidHardwareBufferPropertiesANDROID = xx vkGetInstanceProcAddr(instance, "vkGetAndroidHardwareBufferPropertiesANDROID");
    vkGetMemoryAndroidHardwareBufferANDROID = xx vkGetInstanceProcAddr(instance, "vkGetMemoryAndroidHardwareBufferANDROID");
    vkCreateExecutionGraphPipelinesAMDX = xx vkGetInstanceProcAddr(instance, "vkCreateExecutionGraphPipelinesAMDX");
    vkGetExecutionGraphPipelineScratchSizeAMDX = xx vkGetInstanceProcAddr(instance, "vkGetExecutionGraphPipelineScratchSizeAMDX");
    vkGetExecutionGraphPipelineNodeIndexAMDX = xx vkGetInstanceProcAddr(instance, "vkGetExecutionGraphPipelineNodeIndexAMDX");
    vkCmdInitializeGraphScratchMemoryAMDX = xx vkGetInstanceProcAddr(instance, "vkCmdInitializeGraphScratchMemoryAMDX");
    vkCmdDispatchGraphAMDX = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchGraphAMDX");
    vkCmdDispatchGraphIndirectAMDX = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchGraphIndirectAMDX");
    vkCmdDispatchGraphIndirectCountAMDX = xx vkGetInstanceProcAddr(instance, "vkCmdDispatchGraphIndirectCountAMDX");
}

load_global_proc_addresses :: (vk_get_instance_proc_addr: *void) {
    vkGetInstanceProcAddr = xx vk_get_instance_proc_addr;

    vkCreateInstance = xx vkGetInstanceProcAddr(null, "vkCreateInstance");
    vkEnumerateInstanceExtensionProperties = xx vkGetInstanceProcAddr(null, "vkEnumerateInstanceExtensionProperties");
    vkEnumerateInstanceLayerProperties = xx vkGetInstanceProcAddr(null, "vkEnumerateInstanceLayerProperties");
    vkEnumerateInstanceVersion = xx vkGetInstanceProcAddr(null, "vkEnumerateInstanceVersion");
    vkDebugUtilsMessengerCallbackEXT = xx vkGetInstanceProcAddr(null, "vkDebugUtilsMessengerCallbackEXT");
    vkDeviceMemoryReportCallbackEXT = xx vkGetInstanceProcAddr(null, "vkDeviceMemoryReportCallbackEXT");
}
